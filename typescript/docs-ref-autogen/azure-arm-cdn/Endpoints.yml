### YamlMime:UniversalReference
items:
  - uid: azure-arm-cdn.Endpoints
    name: Endpoints
    fullName: Endpoints
    children:
      - azure-arm-cdn.Endpoints.beginCreate
      - azure-arm-cdn.Endpoints.beginCreate_2
      - azure-arm-cdn.Endpoints.beginCreate_1
      - azure-arm-cdn.Endpoints.beginCreateWithHttpOperationResponse
      - azure-arm-cdn.Endpoints.beginDeleteMethod
      - azure-arm-cdn.Endpoints.beginDeleteMethod_2
      - azure-arm-cdn.Endpoints.beginDeleteMethod_1
      - azure-arm-cdn.Endpoints.beginDeleteMethodWithHttpOperationResponse
      - azure-arm-cdn.Endpoints.beginLoadContent
      - azure-arm-cdn.Endpoints.beginLoadContent_2
      - azure-arm-cdn.Endpoints.beginLoadContent_1
      - azure-arm-cdn.Endpoints.beginLoadContentWithHttpOperationResponse
      - azure-arm-cdn.Endpoints.beginPurgeContent
      - azure-arm-cdn.Endpoints.beginPurgeContent_2
      - azure-arm-cdn.Endpoints.beginPurgeContent_1
      - azure-arm-cdn.Endpoints.beginPurgeContentWithHttpOperationResponse
      - azure-arm-cdn.Endpoints.beginStart
      - azure-arm-cdn.Endpoints.beginStart_2
      - azure-arm-cdn.Endpoints.beginStart_1
      - azure-arm-cdn.Endpoints.beginStartWithHttpOperationResponse
      - azure-arm-cdn.Endpoints.beginStop
      - azure-arm-cdn.Endpoints.beginStop_2
      - azure-arm-cdn.Endpoints.beginStop_1
      - azure-arm-cdn.Endpoints.beginStopWithHttpOperationResponse
      - azure-arm-cdn.Endpoints.beginUpdate
      - azure-arm-cdn.Endpoints.beginUpdate_2
      - azure-arm-cdn.Endpoints.beginUpdate_1
      - azure-arm-cdn.Endpoints.beginUpdateWithHttpOperationResponse
      - azure-arm-cdn.Endpoints.create
      - azure-arm-cdn.Endpoints.create_2
      - azure-arm-cdn.Endpoints.create_1
      - azure-arm-cdn.Endpoints.createWithHttpOperationResponse
      - azure-arm-cdn.Endpoints.deleteMethod
      - azure-arm-cdn.Endpoints.deleteMethod_2
      - azure-arm-cdn.Endpoints.deleteMethod_1
      - azure-arm-cdn.Endpoints.deleteMethodWithHttpOperationResponse
      - azure-arm-cdn.Endpoints.get
      - azure-arm-cdn.Endpoints.get_2
      - azure-arm-cdn.Endpoints.get_1
      - azure-arm-cdn.Endpoints.getWithHttpOperationResponse
      - azure-arm-cdn.Endpoints.listByProfile
      - azure-arm-cdn.Endpoints.listByProfile_2
      - azure-arm-cdn.Endpoints.listByProfile_1
      - azure-arm-cdn.Endpoints.listByProfileNext
      - azure-arm-cdn.Endpoints.listByProfileNext_2
      - azure-arm-cdn.Endpoints.listByProfileNext_1
      - azure-arm-cdn.Endpoints.listByProfileNextWithHttpOperationResponse
      - azure-arm-cdn.Endpoints.listByProfileWithHttpOperationResponse
      - azure-arm-cdn.Endpoints.listResourceUsage
      - azure-arm-cdn.Endpoints.listResourceUsage_2
      - azure-arm-cdn.Endpoints.listResourceUsage_1
      - azure-arm-cdn.Endpoints.listResourceUsageNext
      - azure-arm-cdn.Endpoints.listResourceUsageNext_2
      - azure-arm-cdn.Endpoints.listResourceUsageNext_1
      - azure-arm-cdn.Endpoints.listResourceUsageNextWithHttpOperationResponse
      - azure-arm-cdn.Endpoints.listResourceUsageWithHttpOperationResponse
      - azure-arm-cdn.Endpoints.loadContent
      - azure-arm-cdn.Endpoints.loadContent_2
      - azure-arm-cdn.Endpoints.loadContent_1
      - azure-arm-cdn.Endpoints.loadContentWithHttpOperationResponse
      - azure-arm-cdn.Endpoints.purgeContent
      - azure-arm-cdn.Endpoints.purgeContent_2
      - azure-arm-cdn.Endpoints.purgeContent_1
      - azure-arm-cdn.Endpoints.purgeContentWithHttpOperationResponse
      - azure-arm-cdn.Endpoints.start
      - azure-arm-cdn.Endpoints.start_2
      - azure-arm-cdn.Endpoints.start_1
      - azure-arm-cdn.Endpoints.startWithHttpOperationResponse
      - azure-arm-cdn.Endpoints.stop
      - azure-arm-cdn.Endpoints.stop_2
      - azure-arm-cdn.Endpoints.stop_1
      - azure-arm-cdn.Endpoints.stopWithHttpOperationResponse
      - azure-arm-cdn.Endpoints.update
      - azure-arm-cdn.Endpoints.update_2
      - azure-arm-cdn.Endpoints.update_1
      - azure-arm-cdn.Endpoints.updateWithHttpOperationResponse
      - azure-arm-cdn.Endpoints.validateCustomDomain
      - azure-arm-cdn.Endpoints.validateCustomDomain_2
      - azure-arm-cdn.Endpoints.validateCustomDomain_1
      - azure-arm-cdn.Endpoints.validateCustomDomainWithHttpOperationResponse
    langs:
      - typeScript
    type: interface
    summary: ''
    package: azure-arm-cdn
  - uid: azure-arm-cdn.Endpoints.beginCreate
    name: 'beginCreate(string, string, string, Endpoint, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Creates a new CDN endpoint with the specified endpoint name under the
      specified subscription, resource group and profile.
    syntax:
      content: >-
        function beginCreate(resourceGroupName: string, profileName: string,
        endpointName: string, endpoint: Endpoint, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            Name of the Resource group within the
            Azure subscription.
        - id: profileName
          type:
            - string
          description: |
            Name of the CDN profile which is unique within
            the resource group.
        - id: endpointName
          type:
            - string
          description: |
            Name of the endpoint under the profile which is
            unique globally.
        - id: endpoint
          type:
            - azure-arm-cdn.Endpoint
          description: |
            Endpoint properties
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-cdn.Endpoint>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {Endpoint} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {Endpoint} [result]   - The deserialized result object if an error did not occur.
                               See {@link Endpoint} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-cdn
  - uid: azure-arm-cdn.Endpoints.beginCreate_2
    name: >-
      beginCreate(string, string, string, Endpoint, Object,
      ServiceCallback<Endpoint>)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Creates a new CDN endpoint with the specified endpoint name under the
      specified subscription, resource group and profile.
    syntax:
      content: >-
        function beginCreate(resourceGroupName: string, profileName: string,
        endpointName: string, endpoint: Endpoint, options: Object, callback:
        ServiceCallback<Endpoint>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: profileName
          type:
            - string
          description: ''
        - id: endpointName
          type:
            - string
          description: ''
        - id: endpoint
          type:
            - azure-arm-cdn.Endpoint
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-cdn.Endpoint>
          description: ''
      return:
        type:
          - Promise<azure-arm-cdn.Endpoint>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {Endpoint} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {Endpoint} [result]   - The deserialized result object if an error did not occur.
                               See {@link Endpoint} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-cdn
  - uid: azure-arm-cdn.Endpoints.beginCreate_1
    name: 'beginCreate(string, string, string, Endpoint, ServiceCallback<Endpoint>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Creates a new CDN endpoint with the specified endpoint name under the
      specified subscription, resource group and profile.
    syntax:
      content: >-
        function beginCreate(resourceGroupName: string, profileName: string,
        endpointName: string, endpoint: Endpoint, callback:
        ServiceCallback<Endpoint>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: profileName
          type:
            - string
          description: ''
        - id: endpointName
          type:
            - string
          description: ''
        - id: endpoint
          type:
            - azure-arm-cdn.Endpoint
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-cdn.Endpoint>
          description: ''
      return:
        type:
          - Promise<azure-arm-cdn.Endpoint>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {Endpoint} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {Endpoint} [result]   - The deserialized result object if an error did not occur.
                               See {@link Endpoint} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-cdn
  - uid: azure-arm-cdn.Endpoints.beginCreateWithHttpOperationResponse
    name: >-
      beginCreateWithHttpOperationResponse(string, string, string, Endpoint,
      Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Creates a new CDN endpoint with the specified endpoint name under the
      specified subscription, resource group and profile.
    syntax:
      content: >-
        function beginCreateWithHttpOperationResponse(resourceGroupName: string,
        profileName: string, endpointName: string, endpoint: Endpoint, options?:
        Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            Name of the Resource group within the
            Azure subscription.
        - id: profileName
          type:
            - string
          description: |
            Name of the CDN profile which is unique within
            the resource group.
        - id: endpointName
          type:
            - string
          description: |
            Name of the endpoint under the profile which is
            unique globally.
        - id: endpoint
          type:
            - azure-arm-cdn.Endpoint
          description: |
            Endpoint properties
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-arm-cdn.Endpoint>>
        description: A promise is returned
    package: azure-arm-cdn
  - uid: azure-arm-cdn.Endpoints.beginDeleteMethod
    name: 'beginDeleteMethod(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Deletes an existing CDN endpoint with the specified endpoint name under
      the

      specified subscription, resource group and profile.
    syntax:
      content: >-
        function beginDeleteMethod(resourceGroupName: string, profileName:
        string, endpointName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            Name of the Resource group within the
            Azure subscription.
        - id: profileName
          type:
            - string
          description: |
            Name of the CDN profile which is unique within
            the resource group.
        - id: endpointName
          type:
            - string
          description: |
            Name of the endpoint under the profile which is
            unique globally.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-cdn
  - uid: azure-arm-cdn.Endpoints.beginDeleteMethod_2
    name: 'beginDeleteMethod(string, string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Deletes an existing CDN endpoint with the specified endpoint name under
      the

      specified subscription, resource group and profile.
    syntax:
      content: >-
        function beginDeleteMethod(resourceGroupName: string, profileName:
        string, endpointName: string, options: Object, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: profileName
          type:
            - string
          description: ''
        - id: endpointName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-cdn
  - uid: azure-arm-cdn.Endpoints.beginDeleteMethod_1
    name: 'beginDeleteMethod(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Deletes an existing CDN endpoint with the specified endpoint name under
      the

      specified subscription, resource group and profile.
    syntax:
      content: >-
        function beginDeleteMethod(resourceGroupName: string, profileName:
        string, endpointName: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: profileName
          type:
            - string
          description: ''
        - id: endpointName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-cdn
  - uid: azure-arm-cdn.Endpoints.beginDeleteMethodWithHttpOperationResponse
    name: 'beginDeleteMethodWithHttpOperationResponse(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Deletes an existing CDN endpoint with the specified endpoint name under
      the

      specified subscription, resource group and profile.
    syntax:
      content: >-
        function beginDeleteMethodWithHttpOperationResponse(resourceGroupName:
        string, profileName: string, endpointName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            Name of the Resource group within the
            Azure subscription.
        - id: profileName
          type:
            - string
          description: |
            Name of the CDN profile which is unique within
            the resource group.
        - id: endpointName
          type:
            - string
          description: |
            Name of the endpoint under the profile which is
            unique globally.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
        description: A promise is returned
    package: azure-arm-cdn
  - uid: azure-arm-cdn.Endpoints.beginLoadContent
    name: 'beginLoadContent(string, string, string, string[], Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Pre-loads a content to CDN. Available for Verizon Profiles.
    syntax:
      content: >-
        function beginLoadContent(resourceGroupName: string, profileName:
        string, endpointName: string, contentPaths: string[], options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            Name of the Resource group within the
            Azure subscription.
        - id: profileName
          type:
            - string
          description: |
            Name of the CDN profile which is unique within
            the resource group.
        - id: endpointName
          type:
            - string
          description: |
            Name of the endpoint under the profile which is
            unique globally.
        - id: contentPaths
          type:
            - 'string[]'
          description: |
            The path to the content to be loaded. Path
            should be a relative file URL of the origin.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-cdn
  - uid: azure-arm-cdn.Endpoints.beginLoadContent_2
    name: >-
      beginLoadContent(string, string, string, string[], Object,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Pre-loads a content to CDN. Available for Verizon Profiles.
    syntax:
      content: >-
        function beginLoadContent(resourceGroupName: string, profileName:
        string, endpointName: string, contentPaths: string[], options: Object,
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: profileName
          type:
            - string
          description: ''
        - id: endpointName
          type:
            - string
          description: ''
        - id: contentPaths
          type:
            - 'string[]'
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-cdn
  - uid: azure-arm-cdn.Endpoints.beginLoadContent_1
    name: 'beginLoadContent(string, string, string, string[], ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Pre-loads a content to CDN. Available for Verizon Profiles.
    syntax:
      content: >-
        function beginLoadContent(resourceGroupName: string, profileName:
        string, endpointName: string, contentPaths: string[], callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: profileName
          type:
            - string
          description: ''
        - id: endpointName
          type:
            - string
          description: ''
        - id: contentPaths
          type:
            - 'string[]'
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-cdn
  - uid: azure-arm-cdn.Endpoints.beginLoadContentWithHttpOperationResponse
    name: >-
      beginLoadContentWithHttpOperationResponse(string, string, string,
      string[], Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: Pre-loads a content to CDN. Available for Verizon Profiles.
    syntax:
      content: >-
        function beginLoadContentWithHttpOperationResponse(resourceGroupName:
        string, profileName: string, endpointName: string, contentPaths:
        string[], options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            Name of the Resource group within the
            Azure subscription.
        - id: profileName
          type:
            - string
          description: |
            Name of the CDN profile which is unique within
            the resource group.
        - id: endpointName
          type:
            - string
          description: |
            Name of the endpoint under the profile which is
            unique globally.
        - id: contentPaths
          type:
            - 'string[]'
          description: |
            The path to the content to be loaded. Path
            should be a relative file URL of the origin.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
        description: A promise is returned
    package: azure-arm-cdn
  - uid: azure-arm-cdn.Endpoints.beginPurgeContent
    name: 'beginPurgeContent(string, string, string, string[], Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Removes a content from CDN.
    syntax:
      content: >-
        function beginPurgeContent(resourceGroupName: string, profileName:
        string, endpointName: string, contentPaths: string[], options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            Name of the Resource group within the
            Azure subscription.
        - id: profileName
          type:
            - string
          description: |
            Name of the CDN profile which is unique within
            the resource group.
        - id: endpointName
          type:
            - string
          description: |
            Name of the endpoint under the profile which is
            unique globally.
        - id: contentPaths
          type:
            - 'string[]'
          description: |
            The path to the content to be purged. Can
            describe a file path or a wild card directory.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-cdn
  - uid: azure-arm-cdn.Endpoints.beginPurgeContent_2
    name: >-
      beginPurgeContent(string, string, string, string[], Object,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Removes a content from CDN.
    syntax:
      content: >-
        function beginPurgeContent(resourceGroupName: string, profileName:
        string, endpointName: string, contentPaths: string[], options: Object,
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: profileName
          type:
            - string
          description: ''
        - id: endpointName
          type:
            - string
          description: ''
        - id: contentPaths
          type:
            - 'string[]'
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-cdn
  - uid: azure-arm-cdn.Endpoints.beginPurgeContent_1
    name: 'beginPurgeContent(string, string, string, string[], ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Removes a content from CDN.
    syntax:
      content: >-
        function beginPurgeContent(resourceGroupName: string, profileName:
        string, endpointName: string, contentPaths: string[], callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: profileName
          type:
            - string
          description: ''
        - id: endpointName
          type:
            - string
          description: ''
        - id: contentPaths
          type:
            - 'string[]'
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-cdn
  - uid: azure-arm-cdn.Endpoints.beginPurgeContentWithHttpOperationResponse
    name: >-
      beginPurgeContentWithHttpOperationResponse(string, string, string,
      string[], Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: Removes a content from CDN.
    syntax:
      content: >-
        function beginPurgeContentWithHttpOperationResponse(resourceGroupName:
        string, profileName: string, endpointName: string, contentPaths:
        string[], options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            Name of the Resource group within the
            Azure subscription.
        - id: profileName
          type:
            - string
          description: |
            Name of the CDN profile which is unique within
            the resource group.
        - id: endpointName
          type:
            - string
          description: |
            Name of the endpoint under the profile which is
            unique globally.
        - id: contentPaths
          type:
            - 'string[]'
          description: |
            The path to the content to be purged. Can
            describe a file path or a wild card directory.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
        description: A promise is returned
    package: azure-arm-cdn
  - uid: azure-arm-cdn.Endpoints.beginStart
    name: 'beginStart(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Starts an existing CDN endpoint that is on a stopped state.
    syntax:
      content: >-
        function beginStart(resourceGroupName: string, profileName: string,
        endpointName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            Name of the Resource group within the
            Azure subscription.
        - id: profileName
          type:
            - string
          description: |
            Name of the CDN profile which is unique within
            the resource group.
        - id: endpointName
          type:
            - string
          description: |
            Name of the endpoint under the profile which is
            unique globally.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-cdn.Endpoint>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {Endpoint} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {Endpoint} [result]   - The deserialized result object if an error did not occur.
                               See {@link Endpoint} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-cdn
  - uid: azure-arm-cdn.Endpoints.beginStart_2
    name: 'beginStart(string, string, string, Object, ServiceCallback<Endpoint>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Starts an existing CDN endpoint that is on a stopped state.
    syntax:
      content: >-
        function beginStart(resourceGroupName: string, profileName: string,
        endpointName: string, options: Object, callback:
        ServiceCallback<Endpoint>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: profileName
          type:
            - string
          description: ''
        - id: endpointName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-cdn.Endpoint>
          description: ''
      return:
        type:
          - Promise<azure-arm-cdn.Endpoint>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {Endpoint} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {Endpoint} [result]   - The deserialized result object if an error did not occur.
                               See {@link Endpoint} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-cdn
  - uid: azure-arm-cdn.Endpoints.beginStart_1
    name: 'beginStart(string, string, string, ServiceCallback<Endpoint>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Starts an existing CDN endpoint that is on a stopped state.
    syntax:
      content: >-
        function beginStart(resourceGroupName: string, profileName: string,
        endpointName: string, callback: ServiceCallback<Endpoint>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: profileName
          type:
            - string
          description: ''
        - id: endpointName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-cdn.Endpoint>
          description: ''
      return:
        type:
          - Promise<azure-arm-cdn.Endpoint>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {Endpoint} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {Endpoint} [result]   - The deserialized result object if an error did not occur.
                               See {@link Endpoint} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-cdn
  - uid: azure-arm-cdn.Endpoints.beginStartWithHttpOperationResponse
    name: 'beginStartWithHttpOperationResponse(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Starts an existing CDN endpoint that is on a stopped state.
    syntax:
      content: >-
        function beginStartWithHttpOperationResponse(resourceGroupName: string,
        profileName: string, endpointName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            Name of the Resource group within the
            Azure subscription.
        - id: profileName
          type:
            - string
          description: |
            Name of the CDN profile which is unique within
            the resource group.
        - id: endpointName
          type:
            - string
          description: |
            Name of the endpoint under the profile which is
            unique globally.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-arm-cdn.Endpoint>>
        description: A promise is returned
    package: azure-arm-cdn
  - uid: azure-arm-cdn.Endpoints.beginStop
    name: 'beginStop(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Stops an existing running CDN endpoint.
    syntax:
      content: >-
        function beginStop(resourceGroupName: string, profileName: string,
        endpointName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            Name of the Resource group within the
            Azure subscription.
        - id: profileName
          type:
            - string
          description: |
            Name of the CDN profile which is unique within
            the resource group.
        - id: endpointName
          type:
            - string
          description: |
            Name of the endpoint under the profile which is
            unique globally.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-cdn.Endpoint>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {Endpoint} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {Endpoint} [result]   - The deserialized result object if an error did not occur.
                               See {@link Endpoint} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-cdn
  - uid: azure-arm-cdn.Endpoints.beginStop_2
    name: 'beginStop(string, string, string, Object, ServiceCallback<Endpoint>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Stops an existing running CDN endpoint.
    syntax:
      content: >-
        function beginStop(resourceGroupName: string, profileName: string,
        endpointName: string, options: Object, callback:
        ServiceCallback<Endpoint>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: profileName
          type:
            - string
          description: ''
        - id: endpointName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-cdn.Endpoint>
          description: ''
      return:
        type:
          - Promise<azure-arm-cdn.Endpoint>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {Endpoint} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {Endpoint} [result]   - The deserialized result object if an error did not occur.
                               See {@link Endpoint} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-cdn
  - uid: azure-arm-cdn.Endpoints.beginStop_1
    name: 'beginStop(string, string, string, ServiceCallback<Endpoint>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Stops an existing running CDN endpoint.
    syntax:
      content: >-
        function beginStop(resourceGroupName: string, profileName: string,
        endpointName: string, callback: ServiceCallback<Endpoint>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: profileName
          type:
            - string
          description: ''
        - id: endpointName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-cdn.Endpoint>
          description: ''
      return:
        type:
          - Promise<azure-arm-cdn.Endpoint>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {Endpoint} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {Endpoint} [result]   - The deserialized result object if an error did not occur.
                               See {@link Endpoint} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-cdn
  - uid: azure-arm-cdn.Endpoints.beginStopWithHttpOperationResponse
    name: 'beginStopWithHttpOperationResponse(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Stops an existing running CDN endpoint.
    syntax:
      content: >-
        function beginStopWithHttpOperationResponse(resourceGroupName: string,
        profileName: string, endpointName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            Name of the Resource group within the
            Azure subscription.
        - id: profileName
          type:
            - string
          description: |
            Name of the CDN profile which is unique within
            the resource group.
        - id: endpointName
          type:
            - string
          description: |
            Name of the endpoint under the profile which is
            unique globally.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-arm-cdn.Endpoint>>
        description: A promise is returned
    package: azure-arm-cdn
  - uid: azure-arm-cdn.Endpoints.beginUpdate
    name: 'beginUpdate(string, string, string, EndpointUpdateParameters, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Updates an existing CDN endpoint with the specified endpoint name under
      the

      specified subscription, resource group and profile. Only tags and Origin

      HostHeader can be updated after creating an endpoint. To update origins,
      use

      the Update Origin operation. To update custom domains, use the Update
      Custom

      Domain operation.
    syntax:
      content: >-
        function beginUpdate(resourceGroupName: string, profileName: string,
        endpointName: string, endpointUpdateProperties:
        EndpointUpdateParameters, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            Name of the Resource group within the
            Azure subscription.
        - id: profileName
          type:
            - string
          description: |
            Name of the CDN profile which is unique within
            the resource group.
        - id: endpointName
          type:
            - string
          description: |
            Name of the endpoint under the profile which is
            unique globally.
        - id: endpointUpdateProperties
          type:
            - azure-arm-cdn.EndpointUpdateParameters
          description: |
            Endpoint update properties
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-cdn.Endpoint>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {Endpoint} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {Endpoint} [result]   - The deserialized result object if an error did not occur.
                               See {@link Endpoint} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-cdn
  - uid: azure-arm-cdn.Endpoints.beginUpdate_2
    name: >-
      beginUpdate(string, string, string, EndpointUpdateParameters, Object,
      ServiceCallback<Endpoint>)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Updates an existing CDN endpoint with the specified endpoint name under
      the

      specified subscription, resource group and profile. Only tags and Origin

      HostHeader can be updated after creating an endpoint. To update origins,
      use

      the Update Origin operation. To update custom domains, use the Update
      Custom

      Domain operation.
    syntax:
      content: >-
        function beginUpdate(resourceGroupName: string, profileName: string,
        endpointName: string, endpointUpdateProperties:
        EndpointUpdateParameters, options: Object, callback:
        ServiceCallback<Endpoint>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: profileName
          type:
            - string
          description: ''
        - id: endpointName
          type:
            - string
          description: ''
        - id: endpointUpdateProperties
          type:
            - azure-arm-cdn.EndpointUpdateParameters
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-cdn.Endpoint>
          description: ''
      return:
        type:
          - Promise<azure-arm-cdn.Endpoint>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {Endpoint} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {Endpoint} [result]   - The deserialized result object if an error did not occur.
                               See {@link Endpoint} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-cdn
  - uid: azure-arm-cdn.Endpoints.beginUpdate_1
    name: >-
      beginUpdate(string, string, string, EndpointUpdateParameters,
      ServiceCallback<Endpoint>)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Updates an existing CDN endpoint with the specified endpoint name under
      the

      specified subscription, resource group and profile. Only tags and Origin

      HostHeader can be updated after creating an endpoint. To update origins,
      use

      the Update Origin operation. To update custom domains, use the Update
      Custom

      Domain operation.
    syntax:
      content: >-
        function beginUpdate(resourceGroupName: string, profileName: string,
        endpointName: string, endpointUpdateProperties:
        EndpointUpdateParameters, callback: ServiceCallback<Endpoint>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: profileName
          type:
            - string
          description: ''
        - id: endpointName
          type:
            - string
          description: ''
        - id: endpointUpdateProperties
          type:
            - azure-arm-cdn.EndpointUpdateParameters
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-cdn.Endpoint>
          description: ''
      return:
        type:
          - Promise<azure-arm-cdn.Endpoint>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {Endpoint} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {Endpoint} [result]   - The deserialized result object if an error did not occur.
                               See {@link Endpoint} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-cdn
  - uid: azure-arm-cdn.Endpoints.beginUpdateWithHttpOperationResponse
    name: >-
      beginUpdateWithHttpOperationResponse(string, string, string,
      EndpointUpdateParameters, Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Updates an existing CDN endpoint with the specified endpoint name under
      the

      specified subscription, resource group and profile. Only tags and Origin

      HostHeader can be updated after creating an endpoint. To update origins,
      use

      the Update Origin operation. To update custom domains, use the Update
      Custom

      Domain operation.
    syntax:
      content: >-
        function beginUpdateWithHttpOperationResponse(resourceGroupName: string,
        profileName: string, endpointName: string, endpointUpdateProperties:
        EndpointUpdateParameters, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            Name of the Resource group within the
            Azure subscription.
        - id: profileName
          type:
            - string
          description: |
            Name of the CDN profile which is unique within
            the resource group.
        - id: endpointName
          type:
            - string
          description: |
            Name of the endpoint under the profile which is
            unique globally.
        - id: endpointUpdateProperties
          type:
            - azure-arm-cdn.EndpointUpdateParameters
          description: |
            Endpoint update properties
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-arm-cdn.Endpoint>>
        description: A promise is returned
    package: azure-arm-cdn
  - uid: azure-arm-cdn.Endpoints.create
    name: 'create(string, string, string, Endpoint, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Creates a new CDN endpoint with the specified endpoint name under the
      specified subscription, resource group and profile.
    syntax:
      content: >-
        function create(resourceGroupName: string, profileName: string,
        endpointName: string, endpoint: Endpoint, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            Name of the Resource group within the
            Azure subscription.
        - id: profileName
          type:
            - string
          description: |
            Name of the CDN profile which is unique within
            the resource group.
        - id: endpointName
          type:
            - string
          description: |
            Name of the endpoint under the profile which is
            unique globally.
        - id: endpoint
          type:
            - azure-arm-cdn.Endpoint
          description: |
            Endpoint properties
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-cdn.Endpoint>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {Endpoint} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {Endpoint} [result]   - The deserialized result object if an error did not occur.
                               See {@link Endpoint} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-cdn
  - uid: azure-arm-cdn.Endpoints.create_2
    name: >-
      create(string, string, string, Endpoint, Object,
      ServiceCallback<Endpoint>)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Creates a new CDN endpoint with the specified endpoint name under the
      specified subscription, resource group and profile.
    syntax:
      content: >-
        function create(resourceGroupName: string, profileName: string,
        endpointName: string, endpoint: Endpoint, options: Object, callback:
        ServiceCallback<Endpoint>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: profileName
          type:
            - string
          description: ''
        - id: endpointName
          type:
            - string
          description: ''
        - id: endpoint
          type:
            - azure-arm-cdn.Endpoint
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-cdn.Endpoint>
          description: ''
      return:
        type:
          - Promise<azure-arm-cdn.Endpoint>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {Endpoint} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {Endpoint} [result]   - The deserialized result object if an error did not occur.
                               See {@link Endpoint} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-cdn
  - uid: azure-arm-cdn.Endpoints.create_1
    name: 'create(string, string, string, Endpoint, ServiceCallback<Endpoint>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Creates a new CDN endpoint with the specified endpoint name under the
      specified subscription, resource group and profile.
    syntax:
      content: >-
        function create(resourceGroupName: string, profileName: string,
        endpointName: string, endpoint: Endpoint, callback:
        ServiceCallback<Endpoint>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: profileName
          type:
            - string
          description: ''
        - id: endpointName
          type:
            - string
          description: ''
        - id: endpoint
          type:
            - azure-arm-cdn.Endpoint
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-cdn.Endpoint>
          description: ''
      return:
        type:
          - Promise<azure-arm-cdn.Endpoint>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {Endpoint} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {Endpoint} [result]   - The deserialized result object if an error did not occur.
                               See {@link Endpoint} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-cdn
  - uid: azure-arm-cdn.Endpoints.createWithHttpOperationResponse
    name: 'createWithHttpOperationResponse(string, string, string, Endpoint, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Creates a new CDN endpoint with the specified endpoint name under the
      specified subscription, resource group and profile.
    syntax:
      content: >-
        function createWithHttpOperationResponse(resourceGroupName: string,
        profileName: string, endpointName: string, endpoint: Endpoint, options?:
        Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            Name of the Resource group within the
            Azure subscription.
        - id: profileName
          type:
            - string
          description: |
            Name of the CDN profile which is unique within
            the resource group.
        - id: endpointName
          type:
            - string
          description: |
            Name of the endpoint under the profile which is
            unique globally.
        - id: endpoint
          type:
            - azure-arm-cdn.Endpoint
          description: |
            Endpoint properties
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-arm-cdn.Endpoint>>
        description: A promise is returned
    package: azure-arm-cdn
  - uid: azure-arm-cdn.Endpoints.deleteMethod
    name: 'deleteMethod(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Deletes an existing CDN endpoint with the specified endpoint name under
      the

      specified subscription, resource group and profile.
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, profileName: string,
        endpointName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            Name of the Resource group within the
            Azure subscription.
        - id: profileName
          type:
            - string
          description: |
            Name of the CDN profile which is unique within
            the resource group.
        - id: endpointName
          type:
            - string
          description: |
            Name of the endpoint under the profile which is
            unique globally.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-cdn
  - uid: azure-arm-cdn.Endpoints.deleteMethod_2
    name: 'deleteMethod(string, string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Deletes an existing CDN endpoint with the specified endpoint name under
      the

      specified subscription, resource group and profile.
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, profileName: string,
        endpointName: string, options: Object, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: profileName
          type:
            - string
          description: ''
        - id: endpointName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-cdn
  - uid: azure-arm-cdn.Endpoints.deleteMethod_1
    name: 'deleteMethod(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Deletes an existing CDN endpoint with the specified endpoint name under
      the

      specified subscription, resource group and profile.
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, profileName: string,
        endpointName: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: profileName
          type:
            - string
          description: ''
        - id: endpointName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-cdn
  - uid: azure-arm-cdn.Endpoints.deleteMethodWithHttpOperationResponse
    name: 'deleteMethodWithHttpOperationResponse(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Deletes an existing CDN endpoint with the specified endpoint name under
      the

      specified subscription, resource group and profile.
    syntax:
      content: >-
        function deleteMethodWithHttpOperationResponse(resourceGroupName:
        string, profileName: string, endpointName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            Name of the Resource group within the
            Azure subscription.
        - id: profileName
          type:
            - string
          description: |
            Name of the CDN profile which is unique within
            the resource group.
        - id: endpointName
          type:
            - string
          description: |
            Name of the endpoint under the profile which is
            unique globally.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
        description: A promise is returned
    package: azure-arm-cdn
  - uid: azure-arm-cdn.Endpoints.get
    name: 'get(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Gets an existing CDN endpoint with the specified endpoint name under the
      specified subscription, resource group and profile.
    syntax:
      content: >-
        function get(resourceGroupName: string, profileName: string,
        endpointName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            Name of the Resource group within the
            Azure subscription.
        - id: profileName
          type:
            - string
          description: |
            Name of the CDN profile which is unique within
            the resource group.
        - id: endpointName
          type:
            - string
          description: |
            Name of the endpoint under the profile which is
            unique globally.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-cdn.Endpoint>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {Endpoint} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {Endpoint} [result]   - The deserialized result object if an error did not occur.
                               See {@link Endpoint} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-cdn
  - uid: azure-arm-cdn.Endpoints.get_2
    name: 'get(string, string, string, Object, ServiceCallback<Endpoint>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Gets an existing CDN endpoint with the specified endpoint name under the
      specified subscription, resource group and profile.
    syntax:
      content: >-
        function get(resourceGroupName: string, profileName: string,
        endpointName: string, options: Object, callback:
        ServiceCallback<Endpoint>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: profileName
          type:
            - string
          description: ''
        - id: endpointName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-cdn.Endpoint>
          description: ''
      return:
        type:
          - Promise<azure-arm-cdn.Endpoint>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {Endpoint} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {Endpoint} [result]   - The deserialized result object if an error did not occur.
                               See {@link Endpoint} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-cdn
  - uid: azure-arm-cdn.Endpoints.get_1
    name: 'get(string, string, string, ServiceCallback<Endpoint>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Gets an existing CDN endpoint with the specified endpoint name under the
      specified subscription, resource group and profile.
    syntax:
      content: >-
        function get(resourceGroupName: string, profileName: string,
        endpointName: string, callback: ServiceCallback<Endpoint>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: profileName
          type:
            - string
          description: ''
        - id: endpointName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-cdn.Endpoint>
          description: ''
      return:
        type:
          - Promise<azure-arm-cdn.Endpoint>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {Endpoint} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {Endpoint} [result]   - The deserialized result object if an error did not occur.
                               See {@link Endpoint} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-cdn
  - uid: azure-arm-cdn.Endpoints.getWithHttpOperationResponse
    name: 'getWithHttpOperationResponse(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Gets an existing CDN endpoint with the specified endpoint name under the
      specified subscription, resource group and profile.
    syntax:
      content: >-
        function getWithHttpOperationResponse(resourceGroupName: string,
        profileName: string, endpointName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            Name of the Resource group within the
            Azure subscription.
        - id: profileName
          type:
            - string
          description: |
            Name of the CDN profile which is unique within
            the resource group.
        - id: endpointName
          type:
            - string
          description: |
            Name of the endpoint under the profile which is
            unique globally.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-arm-cdn.Endpoint>>
        description: A promise is returned
    package: azure-arm-cdn
  - uid: azure-arm-cdn.Endpoints.listByProfile
    name: 'listByProfile(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists existing CDN endpoints.
    syntax:
      content: >-
        function listByProfile(resourceGroupName: string, profileName: string,
        options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            Name of the Resource group within the
            Azure subscription.
        - id: profileName
          type:
            - string
          description: |
            Name of the CDN profile which is unique within
            the resource group.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-cdn.EndpointListResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {EndpointListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {EndpointListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link EndpointListResult} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-cdn
  - uid: azure-arm-cdn.Endpoints.listByProfile_2
    name: 'listByProfile(string, string, Object, ServiceCallback<EndpointListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists existing CDN endpoints.
    syntax:
      content: >-
        function listByProfile(resourceGroupName: string, profileName: string,
        options: Object, callback: ServiceCallback<EndpointListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: profileName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-cdn.EndpointListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-cdn.EndpointListResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {EndpointListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {EndpointListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link EndpointListResult} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-cdn
  - uid: azure-arm-cdn.Endpoints.listByProfile_1
    name: 'listByProfile(string, string, ServiceCallback<EndpointListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists existing CDN endpoints.
    syntax:
      content: >-
        function listByProfile(resourceGroupName: string, profileName: string,
        callback: ServiceCallback<EndpointListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: profileName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-cdn.EndpointListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-cdn.EndpointListResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {EndpointListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {EndpointListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link EndpointListResult} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-cdn
  - uid: azure-arm-cdn.Endpoints.listByProfileNext
    name: 'listByProfileNext(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists existing CDN endpoints.
    syntax:
      content: 'function listByProfileNext(nextPageLink: string, options?: Object)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-cdn.EndpointListResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {EndpointListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {EndpointListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link EndpointListResult} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-cdn
  - uid: azure-arm-cdn.Endpoints.listByProfileNext_2
    name: 'listByProfileNext(string, Object, ServiceCallback<EndpointListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists existing CDN endpoints.
    syntax:
      content: >-
        function listByProfileNext(nextPageLink: string, options: Object,
        callback: ServiceCallback<EndpointListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-cdn.EndpointListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-cdn.EndpointListResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {EndpointListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {EndpointListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link EndpointListResult} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-cdn
  - uid: azure-arm-cdn.Endpoints.listByProfileNext_1
    name: 'listByProfileNext(string, ServiceCallback<EndpointListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists existing CDN endpoints.
    syntax:
      content: >-
        function listByProfileNext(nextPageLink: string, callback:
        ServiceCallback<EndpointListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-cdn.EndpointListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-cdn.EndpointListResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {EndpointListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {EndpointListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link EndpointListResult} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-cdn
  - uid: azure-arm-cdn.Endpoints.listByProfileNextWithHttpOperationResponse
    name: 'listByProfileNextWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists existing CDN endpoints.
    syntax:
      content: >-
        function listByProfileNextWithHttpOperationResponse(nextPageLink:
        string, options?: Object)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-arm-cdn.EndpointListResult>>
        description: A promise is returned
    package: azure-arm-cdn
  - uid: azure-arm-cdn.Endpoints.listByProfileWithHttpOperationResponse
    name: 'listByProfileWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists existing CDN endpoints.
    syntax:
      content: >-
        function listByProfileWithHttpOperationResponse(resourceGroupName:
        string, profileName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            Name of the Resource group within the
            Azure subscription.
        - id: profileName
          type:
            - string
          description: |
            Name of the CDN profile which is unique within
            the resource group.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-arm-cdn.EndpointListResult>>
        description: A promise is returned
    package: azure-arm-cdn
  - uid: azure-arm-cdn.Endpoints.listResourceUsage
    name: 'listResourceUsage(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Checks the quota and usage of geo filters and custom domains under the
      given

      endpoint.
    syntax:
      content: >-
        function listResourceUsage(resourceGroupName: string, profileName:
        string, endpointName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            Name of the Resource group within the
            Azure subscription.
        - id: profileName
          type:
            - string
          description: |
            Name of the CDN profile which is unique within
            the resource group.
        - id: endpointName
          type:
            - string
          description: |
            Name of the endpoint under the profile which is
            unique globally.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-cdn.ResourceUsageListResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {ResourceUsageListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {ResourceUsageListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link ResourceUsageListResult} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-cdn
  - uid: azure-arm-cdn.Endpoints.listResourceUsage_2
    name: >-
      listResourceUsage(string, string, string, Object,
      ServiceCallback<ResourceUsageListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Checks the quota and usage of geo filters and custom domains under the
      given

      endpoint.
    syntax:
      content: >-
        function listResourceUsage(resourceGroupName: string, profileName:
        string, endpointName: string, options: Object, callback:
        ServiceCallback<ResourceUsageListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: profileName
          type:
            - string
          description: ''
        - id: endpointName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-cdn.ResourceUsageListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-cdn.ResourceUsageListResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {ResourceUsageListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {ResourceUsageListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link ResourceUsageListResult} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-cdn
  - uid: azure-arm-cdn.Endpoints.listResourceUsage_1
    name: >-
      listResourceUsage(string, string, string,
      ServiceCallback<ResourceUsageListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Checks the quota and usage of geo filters and custom domains under the
      given

      endpoint.
    syntax:
      content: >-
        function listResourceUsage(resourceGroupName: string, profileName:
        string, endpointName: string, callback:
        ServiceCallback<ResourceUsageListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: profileName
          type:
            - string
          description: ''
        - id: endpointName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-cdn.ResourceUsageListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-cdn.ResourceUsageListResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {ResourceUsageListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {ResourceUsageListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link ResourceUsageListResult} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-cdn
  - uid: azure-arm-cdn.Endpoints.listResourceUsageNext
    name: 'listResourceUsageNext(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Checks the quota and usage of geo filters and custom domains under the
      given

      endpoint.
    syntax:
      content: 'function listResourceUsageNext(nextPageLink: string, options?: Object)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-cdn.ResourceUsageListResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {ResourceUsageListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {ResourceUsageListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link ResourceUsageListResult} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-cdn
  - uid: azure-arm-cdn.Endpoints.listResourceUsageNext_2
    name: >-
      listResourceUsageNext(string, Object,
      ServiceCallback<ResourceUsageListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Checks the quota and usage of geo filters and custom domains under the
      given

      endpoint.
    syntax:
      content: >-
        function listResourceUsageNext(nextPageLink: string, options: Object,
        callback: ServiceCallback<ResourceUsageListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-cdn.ResourceUsageListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-cdn.ResourceUsageListResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {ResourceUsageListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {ResourceUsageListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link ResourceUsageListResult} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-cdn
  - uid: azure-arm-cdn.Endpoints.listResourceUsageNext_1
    name: 'listResourceUsageNext(string, ServiceCallback<ResourceUsageListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Checks the quota and usage of geo filters and custom domains under the
      given

      endpoint.
    syntax:
      content: >-
        function listResourceUsageNext(nextPageLink: string, callback:
        ServiceCallback<ResourceUsageListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-cdn.ResourceUsageListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-cdn.ResourceUsageListResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {ResourceUsageListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {ResourceUsageListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link ResourceUsageListResult} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-cdn
  - uid: azure-arm-cdn.Endpoints.listResourceUsageNextWithHttpOperationResponse
    name: 'listResourceUsageNextWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Checks the quota and usage of geo filters and custom domains under the
      given

      endpoint.
    syntax:
      content: >-
        function listResourceUsageNextWithHttpOperationResponse(nextPageLink:
        string, options?: Object)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-cdn.ResourceUsageListResult>>
        description: A promise is returned
    package: azure-arm-cdn
  - uid: azure-arm-cdn.Endpoints.listResourceUsageWithHttpOperationResponse
    name: 'listResourceUsageWithHttpOperationResponse(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Checks the quota and usage of geo filters and custom domains under the
      given

      endpoint.
    syntax:
      content: >-
        function listResourceUsageWithHttpOperationResponse(resourceGroupName:
        string, profileName: string, endpointName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            Name of the Resource group within the
            Azure subscription.
        - id: profileName
          type:
            - string
          description: |
            Name of the CDN profile which is unique within
            the resource group.
        - id: endpointName
          type:
            - string
          description: |
            Name of the endpoint under the profile which is
            unique globally.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-cdn.ResourceUsageListResult>>
        description: A promise is returned
    package: azure-arm-cdn
  - uid: azure-arm-cdn.Endpoints.loadContent
    name: 'loadContent(string, string, string, string[], Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Pre-loads a content to CDN. Available for Verizon Profiles.
    syntax:
      content: >-
        function loadContent(resourceGroupName: string, profileName: string,
        endpointName: string, contentPaths: string[], options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            Name of the Resource group within the
            Azure subscription.
        - id: profileName
          type:
            - string
          description: |
            Name of the CDN profile which is unique within
            the resource group.
        - id: endpointName
          type:
            - string
          description: |
            Name of the endpoint under the profile which is
            unique globally.
        - id: contentPaths
          type:
            - 'string[]'
          description: |
            The path to the content to be loaded. Path
            should be a relative file URL of the origin.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-cdn
  - uid: azure-arm-cdn.Endpoints.loadContent_2
    name: >-
      loadContent(string, string, string, string[], Object,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Pre-loads a content to CDN. Available for Verizon Profiles.
    syntax:
      content: >-
        function loadContent(resourceGroupName: string, profileName: string,
        endpointName: string, contentPaths: string[], options: Object, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: profileName
          type:
            - string
          description: ''
        - id: endpointName
          type:
            - string
          description: ''
        - id: contentPaths
          type:
            - 'string[]'
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-cdn
  - uid: azure-arm-cdn.Endpoints.loadContent_1
    name: 'loadContent(string, string, string, string[], ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Pre-loads a content to CDN. Available for Verizon Profiles.
    syntax:
      content: >-
        function loadContent(resourceGroupName: string, profileName: string,
        endpointName: string, contentPaths: string[], callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: profileName
          type:
            - string
          description: ''
        - id: endpointName
          type:
            - string
          description: ''
        - id: contentPaths
          type:
            - 'string[]'
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-cdn
  - uid: azure-arm-cdn.Endpoints.loadContentWithHttpOperationResponse
    name: >-
      loadContentWithHttpOperationResponse(string, string, string, string[],
      Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: Pre-loads a content to CDN. Available for Verizon Profiles.
    syntax:
      content: >-
        function loadContentWithHttpOperationResponse(resourceGroupName: string,
        profileName: string, endpointName: string, contentPaths: string[],
        options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            Name of the Resource group within the
            Azure subscription.
        - id: profileName
          type:
            - string
          description: |
            Name of the CDN profile which is unique within
            the resource group.
        - id: endpointName
          type:
            - string
          description: |
            Name of the endpoint under the profile which is
            unique globally.
        - id: contentPaths
          type:
            - 'string[]'
          description: |
            The path to the content to be loaded. Path
            should be a relative file URL of the origin.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
        description: A promise is returned
    package: azure-arm-cdn
  - uid: azure-arm-cdn.Endpoints.purgeContent
    name: 'purgeContent(string, string, string, string[], Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Removes a content from CDN.
    syntax:
      content: >-
        function purgeContent(resourceGroupName: string, profileName: string,
        endpointName: string, contentPaths: string[], options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            Name of the Resource group within the
            Azure subscription.
        - id: profileName
          type:
            - string
          description: |
            Name of the CDN profile which is unique within
            the resource group.
        - id: endpointName
          type:
            - string
          description: |
            Name of the endpoint under the profile which is
            unique globally.
        - id: contentPaths
          type:
            - 'string[]'
          description: |
            The path to the content to be purged. Can
            describe a file path or a wild card directory.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-cdn
  - uid: azure-arm-cdn.Endpoints.purgeContent_2
    name: >-
      purgeContent(string, string, string, string[], Object,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Removes a content from CDN.
    syntax:
      content: >-
        function purgeContent(resourceGroupName: string, profileName: string,
        endpointName: string, contentPaths: string[], options: Object, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: profileName
          type:
            - string
          description: ''
        - id: endpointName
          type:
            - string
          description: ''
        - id: contentPaths
          type:
            - 'string[]'
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-cdn
  - uid: azure-arm-cdn.Endpoints.purgeContent_1
    name: 'purgeContent(string, string, string, string[], ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Removes a content from CDN.
    syntax:
      content: >-
        function purgeContent(resourceGroupName: string, profileName: string,
        endpointName: string, contentPaths: string[], callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: profileName
          type:
            - string
          description: ''
        - id: endpointName
          type:
            - string
          description: ''
        - id: contentPaths
          type:
            - 'string[]'
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-cdn
  - uid: azure-arm-cdn.Endpoints.purgeContentWithHttpOperationResponse
    name: >-
      purgeContentWithHttpOperationResponse(string, string, string, string[],
      Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: Removes a content from CDN.
    syntax:
      content: >-
        function purgeContentWithHttpOperationResponse(resourceGroupName:
        string, profileName: string, endpointName: string, contentPaths:
        string[], options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            Name of the Resource group within the
            Azure subscription.
        - id: profileName
          type:
            - string
          description: |
            Name of the CDN profile which is unique within
            the resource group.
        - id: endpointName
          type:
            - string
          description: |
            Name of the endpoint under the profile which is
            unique globally.
        - id: contentPaths
          type:
            - 'string[]'
          description: |
            The path to the content to be purged. Can
            describe a file path or a wild card directory.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
        description: A promise is returned
    package: azure-arm-cdn
  - uid: azure-arm-cdn.Endpoints.start
    name: 'start(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Starts an existing CDN endpoint that is on a stopped state.
    syntax:
      content: >-
        function start(resourceGroupName: string, profileName: string,
        endpointName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            Name of the Resource group within the
            Azure subscription.
        - id: profileName
          type:
            - string
          description: |
            Name of the CDN profile which is unique within
            the resource group.
        - id: endpointName
          type:
            - string
          description: |
            Name of the endpoint under the profile which is
            unique globally.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-cdn.Endpoint>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {Endpoint} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {Endpoint} [result]   - The deserialized result object if an error did not occur.
                               See {@link Endpoint} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-cdn
  - uid: azure-arm-cdn.Endpoints.start_2
    name: 'start(string, string, string, Object, ServiceCallback<Endpoint>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Starts an existing CDN endpoint that is on a stopped state.
    syntax:
      content: >-
        function start(resourceGroupName: string, profileName: string,
        endpointName: string, options: Object, callback:
        ServiceCallback<Endpoint>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: profileName
          type:
            - string
          description: ''
        - id: endpointName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-cdn.Endpoint>
          description: ''
      return:
        type:
          - Promise<azure-arm-cdn.Endpoint>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {Endpoint} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {Endpoint} [result]   - The deserialized result object if an error did not occur.
                               See {@link Endpoint} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-cdn
  - uid: azure-arm-cdn.Endpoints.start_1
    name: 'start(string, string, string, ServiceCallback<Endpoint>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Starts an existing CDN endpoint that is on a stopped state.
    syntax:
      content: >-
        function start(resourceGroupName: string, profileName: string,
        endpointName: string, callback: ServiceCallback<Endpoint>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: profileName
          type:
            - string
          description: ''
        - id: endpointName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-cdn.Endpoint>
          description: ''
      return:
        type:
          - Promise<azure-arm-cdn.Endpoint>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {Endpoint} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {Endpoint} [result]   - The deserialized result object if an error did not occur.
                               See {@link Endpoint} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-cdn
  - uid: azure-arm-cdn.Endpoints.startWithHttpOperationResponse
    name: 'startWithHttpOperationResponse(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Starts an existing CDN endpoint that is on a stopped state.
    syntax:
      content: >-
        function startWithHttpOperationResponse(resourceGroupName: string,
        profileName: string, endpointName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            Name of the Resource group within the
            Azure subscription.
        - id: profileName
          type:
            - string
          description: |
            Name of the CDN profile which is unique within
            the resource group.
        - id: endpointName
          type:
            - string
          description: |
            Name of the endpoint under the profile which is
            unique globally.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-arm-cdn.Endpoint>>
        description: A promise is returned
    package: azure-arm-cdn
  - uid: azure-arm-cdn.Endpoints.stop
    name: 'stop(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Stops an existing running CDN endpoint.
    syntax:
      content: >-
        function stop(resourceGroupName: string, profileName: string,
        endpointName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            Name of the Resource group within the
            Azure subscription.
        - id: profileName
          type:
            - string
          description: |
            Name of the CDN profile which is unique within
            the resource group.
        - id: endpointName
          type:
            - string
          description: |
            Name of the endpoint under the profile which is
            unique globally.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-cdn.Endpoint>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {Endpoint} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {Endpoint} [result]   - The deserialized result object if an error did not occur.
                               See {@link Endpoint} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-cdn
  - uid: azure-arm-cdn.Endpoints.stop_2
    name: 'stop(string, string, string, Object, ServiceCallback<Endpoint>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Stops an existing running CDN endpoint.
    syntax:
      content: >-
        function stop(resourceGroupName: string, profileName: string,
        endpointName: string, options: Object, callback:
        ServiceCallback<Endpoint>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: profileName
          type:
            - string
          description: ''
        - id: endpointName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-cdn.Endpoint>
          description: ''
      return:
        type:
          - Promise<azure-arm-cdn.Endpoint>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {Endpoint} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {Endpoint} [result]   - The deserialized result object if an error did not occur.
                               See {@link Endpoint} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-cdn
  - uid: azure-arm-cdn.Endpoints.stop_1
    name: 'stop(string, string, string, ServiceCallback<Endpoint>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Stops an existing running CDN endpoint.
    syntax:
      content: >-
        function stop(resourceGroupName: string, profileName: string,
        endpointName: string, callback: ServiceCallback<Endpoint>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: profileName
          type:
            - string
          description: ''
        - id: endpointName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-cdn.Endpoint>
          description: ''
      return:
        type:
          - Promise<azure-arm-cdn.Endpoint>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {Endpoint} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {Endpoint} [result]   - The deserialized result object if an error did not occur.
                               See {@link Endpoint} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-cdn
  - uid: azure-arm-cdn.Endpoints.stopWithHttpOperationResponse
    name: 'stopWithHttpOperationResponse(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Stops an existing running CDN endpoint.
    syntax:
      content: >-
        function stopWithHttpOperationResponse(resourceGroupName: string,
        profileName: string, endpointName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            Name of the Resource group within the
            Azure subscription.
        - id: profileName
          type:
            - string
          description: |
            Name of the CDN profile which is unique within
            the resource group.
        - id: endpointName
          type:
            - string
          description: |
            Name of the endpoint under the profile which is
            unique globally.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-arm-cdn.Endpoint>>
        description: A promise is returned
    package: azure-arm-cdn
  - uid: azure-arm-cdn.Endpoints.update
    name: 'update(string, string, string, EndpointUpdateParameters, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Updates an existing CDN endpoint with the specified endpoint name under
      the

      specified subscription, resource group and profile. Only tags and Origin

      HostHeader can be updated after creating an endpoint. To update origins,
      use

      the Update Origin operation. To update custom domains, use the Update
      Custom

      Domain operation.
    syntax:
      content: >-
        function update(resourceGroupName: string, profileName: string,
        endpointName: string, endpointUpdateProperties:
        EndpointUpdateParameters, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            Name of the Resource group within the
            Azure subscription.
        - id: profileName
          type:
            - string
          description: |
            Name of the CDN profile which is unique within
            the resource group.
        - id: endpointName
          type:
            - string
          description: |
            Name of the endpoint under the profile which is
            unique globally.
        - id: endpointUpdateProperties
          type:
            - azure-arm-cdn.EndpointUpdateParameters
          description: |
            Endpoint update properties
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-cdn.Endpoint>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {Endpoint} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {Endpoint} [result]   - The deserialized result object if an error did not occur.
                               See {@link Endpoint} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-cdn
  - uid: azure-arm-cdn.Endpoints.update_2
    name: >-
      update(string, string, string, EndpointUpdateParameters, Object,
      ServiceCallback<Endpoint>)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Updates an existing CDN endpoint with the specified endpoint name under
      the

      specified subscription, resource group and profile. Only tags and Origin

      HostHeader can be updated after creating an endpoint. To update origins,
      use

      the Update Origin operation. To update custom domains, use the Update
      Custom

      Domain operation.
    syntax:
      content: >-
        function update(resourceGroupName: string, profileName: string,
        endpointName: string, endpointUpdateProperties:
        EndpointUpdateParameters, options: Object, callback:
        ServiceCallback<Endpoint>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: profileName
          type:
            - string
          description: ''
        - id: endpointName
          type:
            - string
          description: ''
        - id: endpointUpdateProperties
          type:
            - azure-arm-cdn.EndpointUpdateParameters
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-cdn.Endpoint>
          description: ''
      return:
        type:
          - Promise<azure-arm-cdn.Endpoint>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {Endpoint} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {Endpoint} [result]   - The deserialized result object if an error did not occur.
                               See {@link Endpoint} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-cdn
  - uid: azure-arm-cdn.Endpoints.update_1
    name: >-
      update(string, string, string, EndpointUpdateParameters,
      ServiceCallback<Endpoint>)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Updates an existing CDN endpoint with the specified endpoint name under
      the

      specified subscription, resource group and profile. Only tags and Origin

      HostHeader can be updated after creating an endpoint. To update origins,
      use

      the Update Origin operation. To update custom domains, use the Update
      Custom

      Domain operation.
    syntax:
      content: >-
        function update(resourceGroupName: string, profileName: string,
        endpointName: string, endpointUpdateProperties:
        EndpointUpdateParameters, callback: ServiceCallback<Endpoint>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: profileName
          type:
            - string
          description: ''
        - id: endpointName
          type:
            - string
          description: ''
        - id: endpointUpdateProperties
          type:
            - azure-arm-cdn.EndpointUpdateParameters
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-cdn.Endpoint>
          description: ''
      return:
        type:
          - Promise<azure-arm-cdn.Endpoint>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {Endpoint} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {Endpoint} [result]   - The deserialized result object if an error did not occur.
                               See {@link Endpoint} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-cdn
  - uid: azure-arm-cdn.Endpoints.updateWithHttpOperationResponse
    name: >-
      updateWithHttpOperationResponse(string, string, string,
      EndpointUpdateParameters, Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Updates an existing CDN endpoint with the specified endpoint name under
      the

      specified subscription, resource group and profile. Only tags and Origin

      HostHeader can be updated after creating an endpoint. To update origins,
      use

      the Update Origin operation. To update custom domains, use the Update
      Custom

      Domain operation.
    syntax:
      content: >-
        function updateWithHttpOperationResponse(resourceGroupName: string,
        profileName: string, endpointName: string, endpointUpdateProperties:
        EndpointUpdateParameters, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            Name of the Resource group within the
            Azure subscription.
        - id: profileName
          type:
            - string
          description: |
            Name of the CDN profile which is unique within
            the resource group.
        - id: endpointName
          type:
            - string
          description: |
            Name of the endpoint under the profile which is
            unique globally.
        - id: endpointUpdateProperties
          type:
            - azure-arm-cdn.EndpointUpdateParameters
          description: |
            Endpoint update properties
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-arm-cdn.Endpoint>>
        description: A promise is returned
    package: azure-arm-cdn
  - uid: azure-arm-cdn.Endpoints.validateCustomDomain
    name: 'validateCustomDomain(string, string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Validates the custom domain mapping to ensure it maps to the correct CDN
      endpoint in DNS.
    syntax:
      content: >-
        function validateCustomDomain(resourceGroupName: string, profileName:
        string, endpointName: string, hostName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            Name of the Resource group within the
            Azure subscription.
        - id: profileName
          type:
            - string
          description: |
            Name of the CDN profile which is unique within
            the resource group.
        - id: endpointName
          type:
            - string
          description: |
            Name of the endpoint under the profile which is
            unique globally.
        - id: hostName
          type:
            - string
          description: |
            The host name of the custom domain. Must be a
            domain name.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-cdn.ValidateCustomDomainOutput>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {ValidateCustomDomainOutput} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {ValidateCustomDomainOutput} [result]   - The deserialized result object if an error did not occur.
                               See {@link ValidateCustomDomainOutput} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-cdn
  - uid: azure-arm-cdn.Endpoints.validateCustomDomain_2
    name: >-
      validateCustomDomain(string, string, string, string, Object,
      ServiceCallback<ValidateCustomDomainOutput>)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Validates the custom domain mapping to ensure it maps to the correct CDN
      endpoint in DNS.
    syntax:
      content: >-
        function validateCustomDomain(resourceGroupName: string, profileName:
        string, endpointName: string, hostName: string, options: Object,
        callback: ServiceCallback<ValidateCustomDomainOutput>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: profileName
          type:
            - string
          description: ''
        - id: endpointName
          type:
            - string
          description: ''
        - id: hostName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-cdn.ValidateCustomDomainOutput>
          description: ''
      return:
        type:
          - Promise<azure-arm-cdn.ValidateCustomDomainOutput>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {ValidateCustomDomainOutput} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {ValidateCustomDomainOutput} [result]   - The deserialized result object if an error did not occur.
                               See {@link ValidateCustomDomainOutput} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-cdn
  - uid: azure-arm-cdn.Endpoints.validateCustomDomain_1
    name: >-
      validateCustomDomain(string, string, string, string,
      ServiceCallback<ValidateCustomDomainOutput>)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Validates the custom domain mapping to ensure it maps to the correct CDN
      endpoint in DNS.
    syntax:
      content: >-
        function validateCustomDomain(resourceGroupName: string, profileName:
        string, endpointName: string, hostName: string, callback:
        ServiceCallback<ValidateCustomDomainOutput>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: profileName
          type:
            - string
          description: ''
        - id: endpointName
          type:
            - string
          description: ''
        - id: hostName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-cdn.ValidateCustomDomainOutput>
          description: ''
      return:
        type:
          - Promise<azure-arm-cdn.ValidateCustomDomainOutput>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {ValidateCustomDomainOutput} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {ValidateCustomDomainOutput} [result]   - The deserialized result object if an error did not occur.
                               See {@link ValidateCustomDomainOutput} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-cdn
  - uid: azure-arm-cdn.Endpoints.validateCustomDomainWithHttpOperationResponse
    name: >-
      validateCustomDomainWithHttpOperationResponse(string, string, string,
      string, Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Validates the custom domain mapping to ensure it maps to the correct CDN
      endpoint in DNS.
    syntax:
      content: >-
        function
        validateCustomDomainWithHttpOperationResponse(resourceGroupName: string,
        profileName: string, endpointName: string, hostName: string, options?:
        Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            Name of the Resource group within the
            Azure subscription.
        - id: profileName
          type:
            - string
          description: |
            Name of the CDN profile which is unique within
            the resource group.
        - id: endpointName
          type:
            - string
          description: |
            Name of the endpoint under the profile which is
            unique globally.
        - id: hostName
          type:
            - string
          description: |
            The host name of the custom domain. Must be a
            domain name.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-cdn.ValidateCustomDomainOutput>>
        description: A promise is returned
    package: azure-arm-cdn
references:
  - uid: azure-arm-cdn.Endpoint
    name: Endpoint
    spec.typeScript:
      - name: Endpoint
        fullName: Endpoint
        uid: azure-arm-cdn.Endpoint
  - uid: Promise<azure-arm-cdn.Endpoint>
    name: Endpoint>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: Endpoint
        fullName: Endpoint
        uid: azure-arm-cdn.Endpoint
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-arm-cdn.Endpoint>
    name: Endpoint>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: Endpoint
        fullName: Endpoint
        uid: azure-arm-cdn.Endpoint
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-arm-cdn.Endpoint>>
    name: Endpoint>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: Endpoint
        fullName: Endpoint
        uid: azure-arm-cdn.Endpoint
      - name: '>>'
        fullName: '>>'
  - uid: azure-arm-cdn.EndpointUpdateParameters
    name: EndpointUpdateParameters
    spec.typeScript:
      - name: EndpointUpdateParameters
        fullName: EndpointUpdateParameters
        uid: azure-arm-cdn.EndpointUpdateParameters
  - uid: Promise<azure-arm-cdn.EndpointListResult>
    name: EndpointListResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: EndpointListResult
        fullName: EndpointListResult
        uid: azure-arm-cdn.EndpointListResult
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-arm-cdn.EndpointListResult>
    name: EndpointListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: EndpointListResult
        fullName: EndpointListResult
        uid: azure-arm-cdn.EndpointListResult
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-arm-cdn.EndpointListResult>>
    name: EndpointListResult>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: EndpointListResult
        fullName: EndpointListResult
        uid: azure-arm-cdn.EndpointListResult
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-arm-cdn.ResourceUsageListResult>
    name: ResourceUsageListResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ResourceUsageListResult
        fullName: ResourceUsageListResult
        uid: azure-arm-cdn.ResourceUsageListResult
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-arm-cdn.ResourceUsageListResult>
    name: ResourceUsageListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ResourceUsageListResult
        fullName: ResourceUsageListResult
        uid: azure-arm-cdn.ResourceUsageListResult
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-arm-cdn.ResourceUsageListResult>>
    name: ResourceUsageListResult>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: ResourceUsageListResult
        fullName: ResourceUsageListResult
        uid: azure-arm-cdn.ResourceUsageListResult
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-arm-cdn.ValidateCustomDomainOutput>
    name: ValidateCustomDomainOutput>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ValidateCustomDomainOutput
        fullName: ValidateCustomDomainOutput
        uid: azure-arm-cdn.ValidateCustomDomainOutput
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-arm-cdn.ValidateCustomDomainOutput>
    name: ValidateCustomDomainOutput>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ValidateCustomDomainOutput
        fullName: ValidateCustomDomainOutput
        uid: azure-arm-cdn.ValidateCustomDomainOutput
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-arm-cdn.ValidateCustomDomainOutput>>
    name: ValidateCustomDomainOutput>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: ValidateCustomDomainOutput
        fullName: ValidateCustomDomainOutput
        uid: azure-arm-cdn.ValidateCustomDomainOutput
      - name: '>>'
        fullName: '>>'
