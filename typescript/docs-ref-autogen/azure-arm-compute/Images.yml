### YamlMime:UniversalReference
items:
  - uid: azure-arm-compute.Images
    name: Images
    fullName: Images
    children:
      - azure-arm-compute.Images.beginCreateOrUpdate
      - azure-arm-compute.Images.beginCreateOrUpdate_2
      - azure-arm-compute.Images.beginCreateOrUpdate_1
      - azure-arm-compute.Images.beginCreateOrUpdateWithHttpOperationResponse
      - azure-arm-compute.Images.beginDeleteMethod
      - azure-arm-compute.Images.beginDeleteMethod_2
      - azure-arm-compute.Images.beginDeleteMethod_1
      - azure-arm-compute.Images.beginDeleteMethodWithHttpOperationResponse
      - azure-arm-compute.Images.beginUpdate
      - azure-arm-compute.Images.beginUpdate_2
      - azure-arm-compute.Images.beginUpdate_1
      - azure-arm-compute.Images.beginUpdateWithHttpOperationResponse
      - azure-arm-compute.Images.createOrUpdate
      - azure-arm-compute.Images.createOrUpdate_2
      - azure-arm-compute.Images.createOrUpdate_1
      - azure-arm-compute.Images.createOrUpdateWithHttpOperationResponse
      - azure-arm-compute.Images.deleteMethod
      - azure-arm-compute.Images.deleteMethod_2
      - azure-arm-compute.Images.deleteMethod_1
      - azure-arm-compute.Images.deleteMethodWithHttpOperationResponse
      - azure-arm-compute.Images.get
      - azure-arm-compute.Images.get_2
      - azure-arm-compute.Images.get_1
      - azure-arm-compute.Images.getWithHttpOperationResponse
      - azure-arm-compute.Images.list
      - azure-arm-compute.Images.list_2
      - azure-arm-compute.Images.list_1
      - azure-arm-compute.Images.listByResourceGroup
      - azure-arm-compute.Images.listByResourceGroup_2
      - azure-arm-compute.Images.listByResourceGroup_1
      - azure-arm-compute.Images.listByResourceGroupNext
      - azure-arm-compute.Images.listByResourceGroupNext_2
      - azure-arm-compute.Images.listByResourceGroupNext_1
      - >-
        azure-arm-compute.Images.listByResourceGroupNextWithHttpOperationResponse
      - azure-arm-compute.Images.listByResourceGroupWithHttpOperationResponse
      - azure-arm-compute.Images.listNext
      - azure-arm-compute.Images.listNext_2
      - azure-arm-compute.Images.listNext_1
      - azure-arm-compute.Images.listNextWithHttpOperationResponse
      - azure-arm-compute.Images.listWithHttpOperationResponse
      - azure-arm-compute.Images.update
      - azure-arm-compute.Images.update_2
      - azure-arm-compute.Images.update_1
      - azure-arm-compute.Images.updateWithHttpOperationResponse
    langs:
      - typeScript
    type: interface
    summary: ''
    package: azure-arm-compute
  - uid: azure-arm-compute.Images.beginCreateOrUpdate
    name: 'beginCreateOrUpdate(string, string, Image, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Create or update an image.
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string, imageName:
        string, parameters: Image, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: imageName
          type:
            - string
          description: |
            The name of the image.
        - id: parameters
          type:
            - azure-arm-compute.Image
          description: |
            Parameters supplied to the Create Image
            operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-compute.Image>
    package: azure-arm-compute
  - uid: azure-arm-compute.Images.beginCreateOrUpdate_2
    name: 'beginCreateOrUpdate(string, string, Image, Object, ServiceCallback<Image>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Create or update an image.
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string, imageName:
        string, parameters: Image, options: Object, callback:
        ServiceCallback<Image>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: imageName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-compute.Image
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-compute.Image>
          description: ''
      return:
        type:
          - Promise<azure-arm-compute.Image>
    package: azure-arm-compute
  - uid: azure-arm-compute.Images.beginCreateOrUpdate_1
    name: 'beginCreateOrUpdate(string, string, Image, ServiceCallback<Image>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Create or update an image.
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string, imageName:
        string, parameters: Image, callback: ServiceCallback<Image>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: imageName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-compute.Image
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-compute.Image>
          description: ''
      return:
        type:
          - Promise<azure-arm-compute.Image>
    package: azure-arm-compute
  - uid: azure-arm-compute.Images.beginCreateOrUpdateWithHttpOperationResponse
    name: >-
      beginCreateOrUpdateWithHttpOperationResponse(string, string, Image,
      Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: Create or update an image.
    syntax:
      content: >-
        function beginCreateOrUpdateWithHttpOperationResponse(resourceGroupName:
        string, imageName: string, parameters: Image, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: imageName
          type:
            - string
          description: |
            The name of the image.
        - id: parameters
          type:
            - azure-arm-compute.Image
          description: |
            Parameters supplied to the Create Image
            operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-arm-compute.Image>>
    package: azure-arm-compute
  - uid: azure-arm-compute.Images.beginDeleteMethod
    name: 'beginDeleteMethod(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes an Image.
    syntax:
      content: >-
        function beginDeleteMethod(resourceGroupName: string, imageName: string,
        options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: imageName
          type:
            - string
          description: |
            The name of the image.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-arm-compute
  - uid: azure-arm-compute.Images.beginDeleteMethod_2
    name: 'beginDeleteMethod(string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes an Image.
    syntax:
      content: >-
        function beginDeleteMethod(resourceGroupName: string, imageName: string,
        options: Object, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: imageName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-arm-compute
  - uid: azure-arm-compute.Images.beginDeleteMethod_1
    name: 'beginDeleteMethod(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes an Image.
    syntax:
      content: >-
        function beginDeleteMethod(resourceGroupName: string, imageName: string,
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: imageName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-arm-compute
  - uid: azure-arm-compute.Images.beginDeleteMethodWithHttpOperationResponse
    name: 'beginDeleteMethodWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes an Image.
    syntax:
      content: >-
        function beginDeleteMethodWithHttpOperationResponse(resourceGroupName:
        string, imageName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: imageName
          type:
            - string
          description: |
            The name of the image.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-arm-compute
  - uid: azure-arm-compute.Images.beginUpdate
    name: 'beginUpdate(string, string, ImageUpdate, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Update an image.
    syntax:
      content: >-
        function beginUpdate(resourceGroupName: string, imageName: string,
        parameters: ImageUpdate, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: imageName
          type:
            - string
          description: |
            The name of the image.
        - id: parameters
          type:
            - azure-arm-compute.ImageUpdate
          description: |
            Parameters supplied to the Update Image
            operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-compute.Image>
    package: azure-arm-compute
  - uid: azure-arm-compute.Images.beginUpdate_2
    name: 'beginUpdate(string, string, ImageUpdate, Object, ServiceCallback<Image>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Update an image.
    syntax:
      content: >-
        function beginUpdate(resourceGroupName: string, imageName: string,
        parameters: ImageUpdate, options: Object, callback:
        ServiceCallback<Image>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: imageName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-compute.ImageUpdate
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-compute.Image>
          description: ''
      return:
        type:
          - Promise<azure-arm-compute.Image>
    package: azure-arm-compute
  - uid: azure-arm-compute.Images.beginUpdate_1
    name: 'beginUpdate(string, string, ImageUpdate, ServiceCallback<Image>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Update an image.
    syntax:
      content: >-
        function beginUpdate(resourceGroupName: string, imageName: string,
        parameters: ImageUpdate, callback: ServiceCallback<Image>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: imageName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-compute.ImageUpdate
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-compute.Image>
          description: ''
      return:
        type:
          - Promise<azure-arm-compute.Image>
    package: azure-arm-compute
  - uid: azure-arm-compute.Images.beginUpdateWithHttpOperationResponse
    name: 'beginUpdateWithHttpOperationResponse(string, string, ImageUpdate, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Update an image.
    syntax:
      content: >-
        function beginUpdateWithHttpOperationResponse(resourceGroupName: string,
        imageName: string, parameters: ImageUpdate, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: imageName
          type:
            - string
          description: |
            The name of the image.
        - id: parameters
          type:
            - azure-arm-compute.ImageUpdate
          description: |
            Parameters supplied to the Update Image
            operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-arm-compute.Image>>
    package: azure-arm-compute
  - uid: azure-arm-compute.Images.createOrUpdate
    name: 'createOrUpdate(string, string, Image, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Create or update an image.
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, imageName: string,
        parameters: Image, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: imageName
          type:
            - string
          description: |
            The name of the image.
        - id: parameters
          type:
            - azure-arm-compute.Image
          description: |
            Parameters supplied to the Create Image
            operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-compute.Image>
    package: azure-arm-compute
  - uid: azure-arm-compute.Images.createOrUpdate_2
    name: 'createOrUpdate(string, string, Image, Object, ServiceCallback<Image>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Create or update an image.
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, imageName: string,
        parameters: Image, options: Object, callback: ServiceCallback<Image>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: imageName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-compute.Image
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-compute.Image>
          description: ''
      return:
        type:
          - Promise<azure-arm-compute.Image>
    package: azure-arm-compute
  - uid: azure-arm-compute.Images.createOrUpdate_1
    name: 'createOrUpdate(string, string, Image, ServiceCallback<Image>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Create or update an image.
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, imageName: string,
        parameters: Image, callback: ServiceCallback<Image>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: imageName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-compute.Image
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-compute.Image>
          description: ''
      return:
        type:
          - Promise<azure-arm-compute.Image>
    package: azure-arm-compute
  - uid: azure-arm-compute.Images.createOrUpdateWithHttpOperationResponse
    name: 'createOrUpdateWithHttpOperationResponse(string, string, Image, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Create or update an image.
    syntax:
      content: >-
        function createOrUpdateWithHttpOperationResponse(resourceGroupName:
        string, imageName: string, parameters: Image, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: imageName
          type:
            - string
          description: |
            The name of the image.
        - id: parameters
          type:
            - azure-arm-compute.Image
          description: |
            Parameters supplied to the Create Image
            operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-arm-compute.Image>>
    package: azure-arm-compute
  - uid: azure-arm-compute.Images.deleteMethod
    name: 'deleteMethod(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes an Image.
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, imageName: string,
        options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: imageName
          type:
            - string
          description: |
            The name of the image.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-arm-compute
  - uid: azure-arm-compute.Images.deleteMethod_2
    name: 'deleteMethod(string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes an Image.
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, imageName: string,
        options: Object, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: imageName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-arm-compute
  - uid: azure-arm-compute.Images.deleteMethod_1
    name: 'deleteMethod(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes an Image.
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, imageName: string,
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: imageName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-arm-compute
  - uid: azure-arm-compute.Images.deleteMethodWithHttpOperationResponse
    name: 'deleteMethodWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes an Image.
    syntax:
      content: >-
        function deleteMethodWithHttpOperationResponse(resourceGroupName:
        string, imageName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: imageName
          type:
            - string
          description: |
            The name of the image.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-arm-compute
  - uid: azure-arm-compute.Images.get
    name: 'get(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets an image.
    syntax:
      content: >-
        function get(resourceGroupName: string, imageName: string, options?:
        Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: imageName
          type:
            - string
          description: |
            The name of the image.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-compute.Image>
    package: azure-arm-compute
  - uid: azure-arm-compute.Images.get_2
    name: 'get(string, string, Object, ServiceCallback<Image>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets an image.
    syntax:
      content: >-
        function get(resourceGroupName: string, imageName: string, options:
        Object, callback: ServiceCallback<Image>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: imageName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-compute.Image>
          description: ''
      return:
        type:
          - Promise<azure-arm-compute.Image>
    package: azure-arm-compute
  - uid: azure-arm-compute.Images.get_1
    name: 'get(string, string, ServiceCallback<Image>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets an image.
    syntax:
      content: >-
        function get(resourceGroupName: string, imageName: string, callback:
        ServiceCallback<Image>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: imageName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-compute.Image>
          description: ''
      return:
        type:
          - Promise<azure-arm-compute.Image>
    package: azure-arm-compute
  - uid: azure-arm-compute.Images.getWithHttpOperationResponse
    name: 'getWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets an image.
    syntax:
      content: >-
        function getWithHttpOperationResponse(resourceGroupName: string,
        imageName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: imageName
          type:
            - string
          description: |
            The name of the image.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-arm-compute.Image>>
    package: azure-arm-compute
  - uid: azure-arm-compute.Images.list
    name: list(Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Gets the list of Images in the subscription. Use nextLink property in the
      response to get the next page of Images. Do this till nextLink is null to
      fetch all the Images.
    syntax:
      content: 'function list(options?: Object)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-compute.ImageListResult>
    package: azure-arm-compute
  - uid: azure-arm-compute.Images.list_2
    name: 'list(Object, ServiceCallback<ImageListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Gets the list of Images in the subscription. Use nextLink property in the
      response to get the next page of Images. Do this till nextLink is null to
      fetch all the Images.
    syntax:
      content: >-
        function list(options: Object, callback:
        ServiceCallback<ImageListResult>)
      parameters:
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-compute.ImageListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-compute.ImageListResult>
    package: azure-arm-compute
  - uid: azure-arm-compute.Images.list_1
    name: list(ServiceCallback<ImageListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Gets the list of Images in the subscription. Use nextLink property in the
      response to get the next page of Images. Do this till nextLink is null to
      fetch all the Images.
    syntax:
      content: 'function list(callback: ServiceCallback<ImageListResult>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<azure-arm-compute.ImageListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-compute.ImageListResult>
    package: azure-arm-compute
  - uid: azure-arm-compute.Images.listByResourceGroup
    name: 'listByResourceGroup(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the list of images under a resource group.
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options?:
        Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-compute.ImageListResult>
    package: azure-arm-compute
  - uid: azure-arm-compute.Images.listByResourceGroup_2
    name: 'listByResourceGroup(string, Object, ServiceCallback<ImageListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the list of images under a resource group.
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options: Object,
        callback: ServiceCallback<ImageListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-compute.ImageListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-compute.ImageListResult>
    package: azure-arm-compute
  - uid: azure-arm-compute.Images.listByResourceGroup_1
    name: 'listByResourceGroup(string, ServiceCallback<ImageListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the list of images under a resource group.
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, callback:
        ServiceCallback<ImageListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-compute.ImageListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-compute.ImageListResult>
    package: azure-arm-compute
  - uid: azure-arm-compute.Images.listByResourceGroupNext
    name: 'listByResourceGroupNext(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the list of images under a resource group.
    syntax:
      content: 'function listByResourceGroupNext(nextPageLink: string, options?: Object)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-compute.ImageListResult>
    package: azure-arm-compute
  - uid: azure-arm-compute.Images.listByResourceGroupNext_2
    name: 'listByResourceGroupNext(string, Object, ServiceCallback<ImageListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the list of images under a resource group.
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, options: Object,
        callback: ServiceCallback<ImageListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-compute.ImageListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-compute.ImageListResult>
    package: azure-arm-compute
  - uid: azure-arm-compute.Images.listByResourceGroupNext_1
    name: 'listByResourceGroupNext(string, ServiceCallback<ImageListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the list of images under a resource group.
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, callback:
        ServiceCallback<ImageListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-compute.ImageListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-compute.ImageListResult>
    package: azure-arm-compute
  - uid: azure-arm-compute.Images.listByResourceGroupNextWithHttpOperationResponse
    name: 'listByResourceGroupNextWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the list of images under a resource group.
    syntax:
      content: >-
        function listByResourceGroupNextWithHttpOperationResponse(nextPageLink:
        string, options?: Object)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-arm-compute.ImageListResult>>
    package: azure-arm-compute
  - uid: azure-arm-compute.Images.listByResourceGroupWithHttpOperationResponse
    name: 'listByResourceGroupWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the list of images under a resource group.
    syntax:
      content: >-
        function listByResourceGroupWithHttpOperationResponse(resourceGroupName:
        string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-arm-compute.ImageListResult>>
    package: azure-arm-compute
  - uid: azure-arm-compute.Images.listNext
    name: 'listNext(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Gets the list of Images in the subscription. Use nextLink property in the
      response to get the next page of Images. Do this till nextLink is null to
      fetch all the Images.
    syntax:
      content: 'function listNext(nextPageLink: string, options?: Object)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-compute.ImageListResult>
    package: azure-arm-compute
  - uid: azure-arm-compute.Images.listNext_2
    name: 'listNext(string, Object, ServiceCallback<ImageListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Gets the list of Images in the subscription. Use nextLink property in the
      response to get the next page of Images. Do this till nextLink is null to
      fetch all the Images.
    syntax:
      content: >-
        function listNext(nextPageLink: string, options: Object, callback:
        ServiceCallback<ImageListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-compute.ImageListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-compute.ImageListResult>
    package: azure-arm-compute
  - uid: azure-arm-compute.Images.listNext_1
    name: 'listNext(string, ServiceCallback<ImageListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Gets the list of Images in the subscription. Use nextLink property in the
      response to get the next page of Images. Do this till nextLink is null to
      fetch all the Images.
    syntax:
      content: >-
        function listNext(nextPageLink: string, callback:
        ServiceCallback<ImageListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-compute.ImageListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-compute.ImageListResult>
    package: azure-arm-compute
  - uid: azure-arm-compute.Images.listNextWithHttpOperationResponse
    name: 'listNextWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Gets the list of Images in the subscription. Use nextLink property in the
      response to get the next page of Images. Do this till nextLink is null to
      fetch all the Images.
    syntax:
      content: >-
        function listNextWithHttpOperationResponse(nextPageLink: string,
        options?: Object)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-arm-compute.ImageListResult>>
    package: azure-arm-compute
  - uid: azure-arm-compute.Images.listWithHttpOperationResponse
    name: listWithHttpOperationResponse(Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Gets the list of Images in the subscription. Use nextLink property in the
      response to get the next page of Images. Do this till nextLink is null to
      fetch all the Images.
    syntax:
      content: 'function listWithHttpOperationResponse(options?: Object)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-arm-compute.ImageListResult>>
    package: azure-arm-compute
  - uid: azure-arm-compute.Images.update
    name: 'update(string, string, ImageUpdate, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Update an image.
    syntax:
      content: >-
        function update(resourceGroupName: string, imageName: string,
        parameters: ImageUpdate, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: imageName
          type:
            - string
          description: |
            The name of the image.
        - id: parameters
          type:
            - azure-arm-compute.ImageUpdate
          description: |
            Parameters supplied to the Update Image
            operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-compute.Image>
    package: azure-arm-compute
  - uid: azure-arm-compute.Images.update_2
    name: 'update(string, string, ImageUpdate, Object, ServiceCallback<Image>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Update an image.
    syntax:
      content: >-
        function update(resourceGroupName: string, imageName: string,
        parameters: ImageUpdate, options: Object, callback:
        ServiceCallback<Image>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: imageName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-compute.ImageUpdate
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-compute.Image>
          description: ''
      return:
        type:
          - Promise<azure-arm-compute.Image>
    package: azure-arm-compute
  - uid: azure-arm-compute.Images.update_1
    name: 'update(string, string, ImageUpdate, ServiceCallback<Image>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Update an image.
    syntax:
      content: >-
        function update(resourceGroupName: string, imageName: string,
        parameters: ImageUpdate, callback: ServiceCallback<Image>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: imageName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-compute.ImageUpdate
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-compute.Image>
          description: ''
      return:
        type:
          - Promise<azure-arm-compute.Image>
    package: azure-arm-compute
  - uid: azure-arm-compute.Images.updateWithHttpOperationResponse
    name: 'updateWithHttpOperationResponse(string, string, ImageUpdate, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Update an image.
    syntax:
      content: >-
        function updateWithHttpOperationResponse(resourceGroupName: string,
        imageName: string, parameters: ImageUpdate, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: imageName
          type:
            - string
          description: |
            The name of the image.
        - id: parameters
          type:
            - azure-arm-compute.ImageUpdate
          description: |
            Parameters supplied to the Update Image
            operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-arm-compute.Image>>
    package: azure-arm-compute
references:
  - uid: azure-arm-compute.Image
    name: Image
    spec.typeScript:
      - name: Image
        fullName: Image
        uid: azure-arm-compute.Image
  - uid: Promise<azure-arm-compute.Image>
    name: Image>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: Image
        fullName: Image
        uid: azure-arm-compute.Image
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-arm-compute.Image>
    name: Image>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: Image
        fullName: Image
        uid: azure-arm-compute.Image
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-arm-compute.Image>>
    name: Image>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: Image
        fullName: Image
        uid: azure-arm-compute.Image
      - name: '>>'
        fullName: '>>'
  - uid: azure-arm-compute.ImageUpdate
    name: ImageUpdate
    spec.typeScript:
      - name: ImageUpdate
        fullName: ImageUpdate
        uid: azure-arm-compute.ImageUpdate
  - uid: Promise<azure-arm-compute.ImageListResult>
    name: ImageListResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ImageListResult
        fullName: ImageListResult
        uid: azure-arm-compute.ImageListResult
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-arm-compute.ImageListResult>
    name: ImageListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ImageListResult
        fullName: ImageListResult
        uid: azure-arm-compute.ImageListResult
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-arm-compute.ImageListResult>>
    name: ImageListResult>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: ImageListResult
        fullName: ImageListResult
        uid: azure-arm-compute.ImageListResult
      - name: '>>'
        fullName: '>>'
