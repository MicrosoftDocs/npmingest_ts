### YamlMime:UniversalReference
items:
  - uid: azure-arm-compute.VirtualMachineScaleSets
    name: VirtualMachineScaleSets
    fullName: VirtualMachineScaleSets
    children:
      - azure-arm-compute.VirtualMachineScaleSets.beginCreateOrUpdate
      - azure-arm-compute.VirtualMachineScaleSets.beginCreateOrUpdate_1
      - azure-arm-compute.VirtualMachineScaleSets.beginCreateOrUpdate_2
      - >-
        azure-arm-compute.VirtualMachineScaleSets.beginCreateOrUpdateWithHttpOperationResponse
      - azure-arm-compute.VirtualMachineScaleSets.beginDeallocate
      - azure-arm-compute.VirtualMachineScaleSets.beginDeallocate_1
      - azure-arm-compute.VirtualMachineScaleSets.beginDeallocate_2
      - >-
        azure-arm-compute.VirtualMachineScaleSets.beginDeallocateWithHttpOperationResponse
      - azure-arm-compute.VirtualMachineScaleSets.beginDeleteInstances_1
      - azure-arm-compute.VirtualMachineScaleSets.beginDeleteInstances_2
      - azure-arm-compute.VirtualMachineScaleSets.beginDeleteInstances
      - >-
        azure-arm-compute.VirtualMachineScaleSets.beginDeleteInstancesWithHttpOperationResponse
      - azure-arm-compute.VirtualMachineScaleSets.beginDeleteMethod_2
      - azure-arm-compute.VirtualMachineScaleSets.beginDeleteMethod_1
      - azure-arm-compute.VirtualMachineScaleSets.beginDeleteMethod
      - >-
        azure-arm-compute.VirtualMachineScaleSets.beginDeleteMethodWithHttpOperationResponse
      - azure-arm-compute.VirtualMachineScaleSets.beginPowerOff_1
      - azure-arm-compute.VirtualMachineScaleSets.beginPowerOff_2
      - azure-arm-compute.VirtualMachineScaleSets.beginPowerOff
      - >-
        azure-arm-compute.VirtualMachineScaleSets.beginPowerOffWithHttpOperationResponse
      - azure-arm-compute.VirtualMachineScaleSets.beginReimage_2
      - azure-arm-compute.VirtualMachineScaleSets.beginReimage_1
      - azure-arm-compute.VirtualMachineScaleSets.beginReimage
      - azure-arm-compute.VirtualMachineScaleSets.beginReimageAll_2
      - azure-arm-compute.VirtualMachineScaleSets.beginReimageAll
      - azure-arm-compute.VirtualMachineScaleSets.beginReimageAll_1
      - >-
        azure-arm-compute.VirtualMachineScaleSets.beginReimageAllWithHttpOperationResponse
      - >-
        azure-arm-compute.VirtualMachineScaleSets.beginReimageWithHttpOperationResponse
      - azure-arm-compute.VirtualMachineScaleSets.beginRestart
      - azure-arm-compute.VirtualMachineScaleSets.beginRestart_1
      - azure-arm-compute.VirtualMachineScaleSets.beginRestart_2
      - >-
        azure-arm-compute.VirtualMachineScaleSets.beginRestartWithHttpOperationResponse
      - azure-arm-compute.VirtualMachineScaleSets.beginStart_1
      - azure-arm-compute.VirtualMachineScaleSets.beginStart
      - azure-arm-compute.VirtualMachineScaleSets.beginStart_2
      - >-
        azure-arm-compute.VirtualMachineScaleSets.beginStartWithHttpOperationResponse
      - azure-arm-compute.VirtualMachineScaleSets.beginUpdate
      - azure-arm-compute.VirtualMachineScaleSets.beginUpdate_1
      - azure-arm-compute.VirtualMachineScaleSets.beginUpdate_2
      - azure-arm-compute.VirtualMachineScaleSets.beginUpdateInstances_2
      - azure-arm-compute.VirtualMachineScaleSets.beginUpdateInstances_1
      - azure-arm-compute.VirtualMachineScaleSets.beginUpdateInstances
      - >-
        azure-arm-compute.VirtualMachineScaleSets.beginUpdateInstancesWithHttpOperationResponse
      - >-
        azure-arm-compute.VirtualMachineScaleSets.beginUpdateWithHttpOperationResponse
      - azure-arm-compute.VirtualMachineScaleSets.createOrUpdate
      - azure-arm-compute.VirtualMachineScaleSets.createOrUpdate_1
      - azure-arm-compute.VirtualMachineScaleSets.createOrUpdate_2
      - >-
        azure-arm-compute.VirtualMachineScaleSets.createOrUpdateWithHttpOperationResponse
      - azure-arm-compute.VirtualMachineScaleSets.deallocate_1
      - azure-arm-compute.VirtualMachineScaleSets.deallocate
      - azure-arm-compute.VirtualMachineScaleSets.deallocate_2
      - >-
        azure-arm-compute.VirtualMachineScaleSets.deallocateWithHttpOperationResponse
      - azure-arm-compute.VirtualMachineScaleSets.deleteInstances
      - azure-arm-compute.VirtualMachineScaleSets.deleteInstances_1
      - azure-arm-compute.VirtualMachineScaleSets.deleteInstances_2
      - >-
        azure-arm-compute.VirtualMachineScaleSets.deleteInstancesWithHttpOperationResponse
      - azure-arm-compute.VirtualMachineScaleSets.deleteMethod
      - azure-arm-compute.VirtualMachineScaleSets.deleteMethod_1
      - azure-arm-compute.VirtualMachineScaleSets.deleteMethod_2
      - >-
        azure-arm-compute.VirtualMachineScaleSets.deleteMethodWithHttpOperationResponse
      - azure-arm-compute.VirtualMachineScaleSets.get
      - azure-arm-compute.VirtualMachineScaleSets.get_1
      - azure-arm-compute.VirtualMachineScaleSets.get_2
      - azure-arm-compute.VirtualMachineScaleSets.getInstanceView
      - azure-arm-compute.VirtualMachineScaleSets.getInstanceView_1
      - azure-arm-compute.VirtualMachineScaleSets.getInstanceView_2
      - >-
        azure-arm-compute.VirtualMachineScaleSets.getInstanceViewWithHttpOperationResponse
      - azure-arm-compute.VirtualMachineScaleSets.getWithHttpOperationResponse
      - azure-arm-compute.VirtualMachineScaleSets.list_2
      - azure-arm-compute.VirtualMachineScaleSets.list
      - azure-arm-compute.VirtualMachineScaleSets.list_1
      - azure-arm-compute.VirtualMachineScaleSets.listAll_2
      - azure-arm-compute.VirtualMachineScaleSets.listAll_1
      - azure-arm-compute.VirtualMachineScaleSets.listAll
      - azure-arm-compute.VirtualMachineScaleSets.listAllNext_1
      - azure-arm-compute.VirtualMachineScaleSets.listAllNext_2
      - azure-arm-compute.VirtualMachineScaleSets.listAllNext
      - >-
        azure-arm-compute.VirtualMachineScaleSets.listAllNextWithHttpOperationResponse
      - >-
        azure-arm-compute.VirtualMachineScaleSets.listAllWithHttpOperationResponse
      - azure-arm-compute.VirtualMachineScaleSets.listNext_1
      - azure-arm-compute.VirtualMachineScaleSets.listNext
      - azure-arm-compute.VirtualMachineScaleSets.listNext_2
      - >-
        azure-arm-compute.VirtualMachineScaleSets.listNextWithHttpOperationResponse
      - azure-arm-compute.VirtualMachineScaleSets.listSkus
      - azure-arm-compute.VirtualMachineScaleSets.listSkus_1
      - azure-arm-compute.VirtualMachineScaleSets.listSkus_2
      - azure-arm-compute.VirtualMachineScaleSets.listSkusNext_1
      - azure-arm-compute.VirtualMachineScaleSets.listSkusNext_2
      - azure-arm-compute.VirtualMachineScaleSets.listSkusNext
      - >-
        azure-arm-compute.VirtualMachineScaleSets.listSkusNextWithHttpOperationResponse
      - >-
        azure-arm-compute.VirtualMachineScaleSets.listSkusWithHttpOperationResponse
      - azure-arm-compute.VirtualMachineScaleSets.listWithHttpOperationResponse
      - azure-arm-compute.VirtualMachineScaleSets.powerOff
      - azure-arm-compute.VirtualMachineScaleSets.powerOff_1
      - azure-arm-compute.VirtualMachineScaleSets.powerOff_2
      - >-
        azure-arm-compute.VirtualMachineScaleSets.powerOffWithHttpOperationResponse
      - azure-arm-compute.VirtualMachineScaleSets.reimage
      - azure-arm-compute.VirtualMachineScaleSets.reimage_1
      - azure-arm-compute.VirtualMachineScaleSets.reimage_2
      - azure-arm-compute.VirtualMachineScaleSets.reimageAll_1
      - azure-arm-compute.VirtualMachineScaleSets.reimageAll_2
      - azure-arm-compute.VirtualMachineScaleSets.reimageAll
      - >-
        azure-arm-compute.VirtualMachineScaleSets.reimageAllWithHttpOperationResponse
      - >-
        azure-arm-compute.VirtualMachineScaleSets.reimageWithHttpOperationResponse
      - azure-arm-compute.VirtualMachineScaleSets.restart
      - azure-arm-compute.VirtualMachineScaleSets.restart_1
      - azure-arm-compute.VirtualMachineScaleSets.restart_2
      - >-
        azure-arm-compute.VirtualMachineScaleSets.restartWithHttpOperationResponse
      - azure-arm-compute.VirtualMachineScaleSets.start_1
      - azure-arm-compute.VirtualMachineScaleSets.start_2
      - azure-arm-compute.VirtualMachineScaleSets.start
      - azure-arm-compute.VirtualMachineScaleSets.startWithHttpOperationResponse
      - azure-arm-compute.VirtualMachineScaleSets.update
      - azure-arm-compute.VirtualMachineScaleSets.update_1
      - azure-arm-compute.VirtualMachineScaleSets.update_2
      - azure-arm-compute.VirtualMachineScaleSets.updateInstances
      - azure-arm-compute.VirtualMachineScaleSets.updateInstances_1
      - azure-arm-compute.VirtualMachineScaleSets.updateInstances_2
      - >-
        azure-arm-compute.VirtualMachineScaleSets.updateInstancesWithHttpOperationResponse
      - >-
        azure-arm-compute.VirtualMachineScaleSets.updateWithHttpOperationResponse
    langs:
      - typeScript
    type: interface
    summary: ''
    package: azure-arm-compute
  - uid: azure-arm-compute.VirtualMachineScaleSets.beginCreateOrUpdate
    name: beginCreateOrUpdate
    children: []
    type: method
    langs:
      - typeScript
    summary: Create or update a VM scale set.
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string, vmScaleSetName:
        string, parameters: VirtualMachineScaleSet, options?: function)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set to create or
            update.
        - id: parameters
          type:
            - '@azure-arm-compute.VirtualMachineScaleSet'
          description: |
            The scale set object.
        - id: options
          type:
            - function
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure-arm-compute.VirtualMachineScaleSet>
  - uid: azure-arm-compute.VirtualMachineScaleSets.beginCreateOrUpdate_1
    name: beginCreateOrUpdate
    children: []
    type: method
    langs:
      - typeScript
    summary: Create or update a VM scale set.
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string, vmScaleSetName:
        string, parameters: VirtualMachineScaleSet, callback:
        ServiceCallback<VirtualMachineScaleSet>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - '@azure-arm-compute.VirtualMachineScaleSet'
          description: ''
        - id: callback
          type:
            - ServiceCallback<@azure-arm-compute.VirtualMachineScaleSet>
          description: ''
      return:
        type:
          - Promise<@azure-arm-compute.VirtualMachineScaleSet>
  - uid: azure-arm-compute.VirtualMachineScaleSets.beginCreateOrUpdate_2
    name: beginCreateOrUpdate
    children: []
    type: method
    langs:
      - typeScript
    summary: Create or update a VM scale set.
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string, vmScaleSetName:
        string, parameters: VirtualMachineScaleSet, options: function, callback:
        ServiceCallback<VirtualMachineScaleSet>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - '@azure-arm-compute.VirtualMachineScaleSet'
          description: ''
        - id: options
          type:
            - function
          description: ''
        - id: callback
          type:
            - ServiceCallback<@azure-arm-compute.VirtualMachineScaleSet>
          description: ''
      return:
        type:
          - Promise<@azure-arm-compute.VirtualMachineScaleSet>
  - uid: >-
      azure-arm-compute.VirtualMachineScaleSets.beginCreateOrUpdateWithHttpOperationResponse
    name: beginCreateOrUpdateWithHttpOperationResponse
    children: []
    type: method
    langs:
      - typeScript
    summary: Create or update a VM scale set.
    syntax:
      content: >-
        function beginCreateOrUpdateWithHttpOperationResponse(resourceGroupName:
        string, vmScaleSetName: string, parameters: VirtualMachineScaleSet,
        options?: function)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set to create or
            update.
        - id: parameters
          type:
            - '@azure-arm-compute.VirtualMachineScaleSet'
          description: |
            The scale set object.
        - id: options
          type:
            - function
          description: ''
          optional: true
      return:
        type:
          - Promise<VirtualMachineScaleSet>>
  - uid: azure-arm-compute.VirtualMachineScaleSets.beginDeallocate
    name: beginDeallocate
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Deallocates specific virtual machines in a VM scale set. Shuts down the

      virtual machines and releases the compute resources. You are not billed
      for

      the compute resources that this virtual machine scale set deallocates.
    syntax:
      content: >-
        function beginDeallocate(resourceGroupName: string, vmScaleSetName:
        string, options?: function)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: options
          type:
            - function
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure-arm-compute.OperationStatusResponse>
  - uid: azure-arm-compute.VirtualMachineScaleSets.beginDeallocate_1
    name: beginDeallocate
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Deallocates specific virtual machines in a VM scale set. Shuts down the

      virtual machines and releases the compute resources. You are not billed
      for

      the compute resources that this virtual machine scale set deallocates.
    syntax:
      content: >-
        function beginDeallocate(resourceGroupName: string, vmScaleSetName:
        string, callback: ServiceCallback<OperationStatusResponse>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<@azure-arm-compute.OperationStatusResponse>
          description: ''
      return:
        type:
          - Promise<@azure-arm-compute.OperationStatusResponse>
  - uid: azure-arm-compute.VirtualMachineScaleSets.beginDeallocate_2
    name: beginDeallocate
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Deallocates specific virtual machines in a VM scale set. Shuts down the

      virtual machines and releases the compute resources. You are not billed
      for

      the compute resources that this virtual machine scale set deallocates.
    syntax:
      content: >-
        function beginDeallocate(resourceGroupName: string, vmScaleSetName:
        string, options: function, callback:
        ServiceCallback<OperationStatusResponse>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: options
          type:
            - function
          description: ''
        - id: callback
          type:
            - ServiceCallback<@azure-arm-compute.OperationStatusResponse>
          description: ''
      return:
        type:
          - Promise<@azure-arm-compute.OperationStatusResponse>
  - uid: >-
      azure-arm-compute.VirtualMachineScaleSets.beginDeallocateWithHttpOperationResponse
    name: beginDeallocateWithHttpOperationResponse
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Deallocates specific virtual machines in a VM scale set. Shuts down the

      virtual machines and releases the compute resources. You are not billed
      for

      the compute resources that this virtual machine scale set deallocates.
    syntax:
      content: >-
        function beginDeallocateWithHttpOperationResponse(resourceGroupName:
        string, vmScaleSetName: string, options?: function)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: options
          type:
            - function
          description: ''
          optional: true
      return:
        type:
          - Promise<OperationStatusResponse>>
  - uid: azure-arm-compute.VirtualMachineScaleSets.beginDeleteInstances_1
    name: beginDeleteInstances
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes virtual machines in a VM scale set.
    syntax:
      content: >-
        function beginDeleteInstances(resourceGroupName: string, vmScaleSetName:
        string, instanceIds: string[], callback:
        ServiceCallback<OperationStatusResponse>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: instanceIds
          type:
            - 'string[]'
          description: ''
        - id: callback
          type:
            - ServiceCallback<@azure-arm-compute.OperationStatusResponse>
          description: ''
      return:
        type:
          - Promise<@azure-arm-compute.OperationStatusResponse>
  - uid: azure-arm-compute.VirtualMachineScaleSets.beginDeleteInstances_2
    name: beginDeleteInstances
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes virtual machines in a VM scale set.
    syntax:
      content: >-
        function beginDeleteInstances(resourceGroupName: string, vmScaleSetName:
        string, instanceIds: string[], options: function, callback:
        ServiceCallback<OperationStatusResponse>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: instanceIds
          type:
            - 'string[]'
          description: ''
        - id: options
          type:
            - function
          description: ''
        - id: callback
          type:
            - ServiceCallback<@azure-arm-compute.OperationStatusResponse>
          description: ''
      return:
        type:
          - Promise<@azure-arm-compute.OperationStatusResponse>
  - uid: azure-arm-compute.VirtualMachineScaleSets.beginDeleteInstances
    name: beginDeleteInstances
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes virtual machines in a VM scale set.
    syntax:
      content: >-
        function beginDeleteInstances(resourceGroupName: string, vmScaleSetName:
        string, instanceIds: string[], options?: function)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: instanceIds
          type:
            - 'string[]'
          description: |
            The virtual machine scale set instance ids.
        - id: options
          type:
            - function
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure-arm-compute.OperationStatusResponse>
  - uid: >-
      azure-arm-compute.VirtualMachineScaleSets.beginDeleteInstancesWithHttpOperationResponse
    name: beginDeleteInstancesWithHttpOperationResponse
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes virtual machines in a VM scale set.
    syntax:
      content: >-
        function
        beginDeleteInstancesWithHttpOperationResponse(resourceGroupName: string,
        vmScaleSetName: string, instanceIds: string[], options?: function)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: instanceIds
          type:
            - 'string[]'
          description: |
            The virtual machine scale set instance ids.
        - id: options
          type:
            - function
          description: ''
          optional: true
      return:
        type:
          - Promise<OperationStatusResponse>>
  - uid: azure-arm-compute.VirtualMachineScaleSets.beginDeleteMethod_2
    name: beginDeleteMethod
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes a VM scale set.
    syntax:
      content: >-
        function beginDeleteMethod(resourceGroupName: string, vmScaleSetName:
        string, options: function, callback:
        ServiceCallback<OperationStatusResponse>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: options
          type:
            - function
          description: ''
        - id: callback
          type:
            - ServiceCallback<@azure-arm-compute.OperationStatusResponse>
          description: ''
      return:
        type:
          - Promise<@azure-arm-compute.OperationStatusResponse>
  - uid: azure-arm-compute.VirtualMachineScaleSets.beginDeleteMethod_1
    name: beginDeleteMethod
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes a VM scale set.
    syntax:
      content: >-
        function beginDeleteMethod(resourceGroupName: string, vmScaleSetName:
        string, callback: ServiceCallback<OperationStatusResponse>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<@azure-arm-compute.OperationStatusResponse>
          description: ''
      return:
        type:
          - Promise<@azure-arm-compute.OperationStatusResponse>
  - uid: azure-arm-compute.VirtualMachineScaleSets.beginDeleteMethod
    name: beginDeleteMethod
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes a VM scale set.
    syntax:
      content: >-
        function beginDeleteMethod(resourceGroupName: string, vmScaleSetName:
        string, options?: function)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: options
          type:
            - function
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure-arm-compute.OperationStatusResponse>
  - uid: >-
      azure-arm-compute.VirtualMachineScaleSets.beginDeleteMethodWithHttpOperationResponse
    name: beginDeleteMethodWithHttpOperationResponse
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes a VM scale set.
    syntax:
      content: >-
        function beginDeleteMethodWithHttpOperationResponse(resourceGroupName:
        string, vmScaleSetName: string, options?: function)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: options
          type:
            - function
          description: ''
          optional: true
      return:
        type:
          - Promise<OperationStatusResponse>>
  - uid: azure-arm-compute.VirtualMachineScaleSets.beginPowerOff_1
    name: beginPowerOff
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Power off (stop) one or more virtual machines in a VM scale set. Note that

      resources are still attached and you are getting charged for the
      resources.

      Instead, use deallocate to release resources and avoid charges.
    syntax:
      content: >-
        function beginPowerOff(resourceGroupName: string, vmScaleSetName:
        string, callback: ServiceCallback<OperationStatusResponse>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<@azure-arm-compute.OperationStatusResponse>
          description: ''
      return:
        type:
          - Promise<@azure-arm-compute.OperationStatusResponse>
  - uid: azure-arm-compute.VirtualMachineScaleSets.beginPowerOff_2
    name: beginPowerOff
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Power off (stop) one or more virtual machines in a VM scale set. Note that

      resources are still attached and you are getting charged for the
      resources.

      Instead, use deallocate to release resources and avoid charges.
    syntax:
      content: >-
        function beginPowerOff(resourceGroupName: string, vmScaleSetName:
        string, options: function, callback:
        ServiceCallback<OperationStatusResponse>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: options
          type:
            - function
          description: ''
        - id: callback
          type:
            - ServiceCallback<@azure-arm-compute.OperationStatusResponse>
          description: ''
      return:
        type:
          - Promise<@azure-arm-compute.OperationStatusResponse>
  - uid: azure-arm-compute.VirtualMachineScaleSets.beginPowerOff
    name: beginPowerOff
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Power off (stop) one or more virtual machines in a VM scale set. Note that

      resources are still attached and you are getting charged for the
      resources.

      Instead, use deallocate to release resources and avoid charges.
    syntax:
      content: >-
        function beginPowerOff(resourceGroupName: string, vmScaleSetName:
        string, options?: function)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: options
          type:
            - function
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure-arm-compute.OperationStatusResponse>
  - uid: >-
      azure-arm-compute.VirtualMachineScaleSets.beginPowerOffWithHttpOperationResponse
    name: beginPowerOffWithHttpOperationResponse
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Power off (stop) one or more virtual machines in a VM scale set. Note that

      resources are still attached and you are getting charged for the
      resources.

      Instead, use deallocate to release resources and avoid charges.
    syntax:
      content: >-
        function beginPowerOffWithHttpOperationResponse(resourceGroupName:
        string, vmScaleSetName: string, options?: function)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: options
          type:
            - function
          description: ''
          optional: true
      return:
        type:
          - Promise<OperationStatusResponse>>
  - uid: azure-arm-compute.VirtualMachineScaleSets.beginReimage_2
    name: beginReimage
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Reimages (upgrade the operating system) one or more virtual machines in a
      VM

      scale set.
    syntax:
      content: >-
        function beginReimage(resourceGroupName: string, vmScaleSetName: string,
        options: function, callback: ServiceCallback<OperationStatusResponse>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: options
          type:
            - function
          description: ''
        - id: callback
          type:
            - ServiceCallback<@azure-arm-compute.OperationStatusResponse>
          description: ''
      return:
        type:
          - Promise<@azure-arm-compute.OperationStatusResponse>
  - uid: azure-arm-compute.VirtualMachineScaleSets.beginReimage_1
    name: beginReimage
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Reimages (upgrade the operating system) one or more virtual machines in a
      VM

      scale set.
    syntax:
      content: >-
        function beginReimage(resourceGroupName: string, vmScaleSetName: string,
        callback: ServiceCallback<OperationStatusResponse>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<@azure-arm-compute.OperationStatusResponse>
          description: ''
      return:
        type:
          - Promise<@azure-arm-compute.OperationStatusResponse>
  - uid: azure-arm-compute.VirtualMachineScaleSets.beginReimage
    name: beginReimage
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Reimages (upgrade the operating system) one or more virtual machines in a
      VM

      scale set.
    syntax:
      content: >-
        function beginReimage(resourceGroupName: string, vmScaleSetName: string,
        options?: function)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: options
          type:
            - function
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure-arm-compute.OperationStatusResponse>
  - uid: azure-arm-compute.VirtualMachineScaleSets.beginReimageAll_2
    name: beginReimageAll
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Reimages all the disks ( including data disks ) in the virtual machines in
      a

      VM scale set. This operation is only supported for managed disks.
    syntax:
      content: >-
        function beginReimageAll(resourceGroupName: string, vmScaleSetName:
        string, options: function, callback:
        ServiceCallback<OperationStatusResponse>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: options
          type:
            - function
          description: ''
        - id: callback
          type:
            - ServiceCallback<@azure-arm-compute.OperationStatusResponse>
          description: ''
      return:
        type:
          - Promise<@azure-arm-compute.OperationStatusResponse>
  - uid: azure-arm-compute.VirtualMachineScaleSets.beginReimageAll
    name: beginReimageAll
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Reimages all the disks ( including data disks ) in the virtual machines in
      a

      VM scale set. This operation is only supported for managed disks.
    syntax:
      content: >-
        function beginReimageAll(resourceGroupName: string, vmScaleSetName:
        string, options?: function)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: options
          type:
            - function
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure-arm-compute.OperationStatusResponse>
  - uid: azure-arm-compute.VirtualMachineScaleSets.beginReimageAll_1
    name: beginReimageAll
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Reimages all the disks ( including data disks ) in the virtual machines in
      a

      VM scale set. This operation is only supported for managed disks.
    syntax:
      content: >-
        function beginReimageAll(resourceGroupName: string, vmScaleSetName:
        string, callback: ServiceCallback<OperationStatusResponse>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<@azure-arm-compute.OperationStatusResponse>
          description: ''
      return:
        type:
          - Promise<@azure-arm-compute.OperationStatusResponse>
  - uid: >-
      azure-arm-compute.VirtualMachineScaleSets.beginReimageAllWithHttpOperationResponse
    name: beginReimageAllWithHttpOperationResponse
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Reimages all the disks ( including data disks ) in the virtual machines in
      a

      VM scale set. This operation is only supported for managed disks.
    syntax:
      content: >-
        function beginReimageAllWithHttpOperationResponse(resourceGroupName:
        string, vmScaleSetName: string, options?: function)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: options
          type:
            - function
          description: ''
          optional: true
      return:
        type:
          - Promise<OperationStatusResponse>>
  - uid: >-
      azure-arm-compute.VirtualMachineScaleSets.beginReimageWithHttpOperationResponse
    name: beginReimageWithHttpOperationResponse
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Reimages (upgrade the operating system) one or more virtual machines in a
      VM

      scale set.
    syntax:
      content: >-
        function beginReimageWithHttpOperationResponse(resourceGroupName:
        string, vmScaleSetName: string, options?: function)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: options
          type:
            - function
          description: ''
          optional: true
      return:
        type:
          - Promise<OperationStatusResponse>>
  - uid: azure-arm-compute.VirtualMachineScaleSets.beginRestart
    name: beginRestart
    children: []
    type: method
    langs:
      - typeScript
    summary: Restarts one or more virtual machines in a VM scale set.
    syntax:
      content: >-
        function beginRestart(resourceGroupName: string, vmScaleSetName: string,
        options?: function)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: options
          type:
            - function
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure-arm-compute.OperationStatusResponse>
  - uid: azure-arm-compute.VirtualMachineScaleSets.beginRestart_1
    name: beginRestart
    children: []
    type: method
    langs:
      - typeScript
    summary: Restarts one or more virtual machines in a VM scale set.
    syntax:
      content: >-
        function beginRestart(resourceGroupName: string, vmScaleSetName: string,
        callback: ServiceCallback<OperationStatusResponse>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<@azure-arm-compute.OperationStatusResponse>
          description: ''
      return:
        type:
          - Promise<@azure-arm-compute.OperationStatusResponse>
  - uid: azure-arm-compute.VirtualMachineScaleSets.beginRestart_2
    name: beginRestart
    children: []
    type: method
    langs:
      - typeScript
    summary: Restarts one or more virtual machines in a VM scale set.
    syntax:
      content: >-
        function beginRestart(resourceGroupName: string, vmScaleSetName: string,
        options: function, callback: ServiceCallback<OperationStatusResponse>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: options
          type:
            - function
          description: ''
        - id: callback
          type:
            - ServiceCallback<@azure-arm-compute.OperationStatusResponse>
          description: ''
      return:
        type:
          - Promise<@azure-arm-compute.OperationStatusResponse>
  - uid: >-
      azure-arm-compute.VirtualMachineScaleSets.beginRestartWithHttpOperationResponse
    name: beginRestartWithHttpOperationResponse
    children: []
    type: method
    langs:
      - typeScript
    summary: Restarts one or more virtual machines in a VM scale set.
    syntax:
      content: >-
        function beginRestartWithHttpOperationResponse(resourceGroupName:
        string, vmScaleSetName: string, options?: function)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: options
          type:
            - function
          description: ''
          optional: true
      return:
        type:
          - Promise<OperationStatusResponse>>
  - uid: azure-arm-compute.VirtualMachineScaleSets.beginStart_1
    name: beginStart
    children: []
    type: method
    langs:
      - typeScript
    summary: Starts one or more virtual machines in a VM scale set.
    syntax:
      content: >-
        function beginStart(resourceGroupName: string, vmScaleSetName: string,
        callback: ServiceCallback<OperationStatusResponse>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<@azure-arm-compute.OperationStatusResponse>
          description: ''
      return:
        type:
          - Promise<@azure-arm-compute.OperationStatusResponse>
  - uid: azure-arm-compute.VirtualMachineScaleSets.beginStart
    name: beginStart
    children: []
    type: method
    langs:
      - typeScript
    summary: Starts one or more virtual machines in a VM scale set.
    syntax:
      content: >-
        function beginStart(resourceGroupName: string, vmScaleSetName: string,
        options?: function)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: options
          type:
            - function
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure-arm-compute.OperationStatusResponse>
  - uid: azure-arm-compute.VirtualMachineScaleSets.beginStart_2
    name: beginStart
    children: []
    type: method
    langs:
      - typeScript
    summary: Starts one or more virtual machines in a VM scale set.
    syntax:
      content: >-
        function beginStart(resourceGroupName: string, vmScaleSetName: string,
        options: function, callback: ServiceCallback<OperationStatusResponse>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: options
          type:
            - function
          description: ''
        - id: callback
          type:
            - ServiceCallback<@azure-arm-compute.OperationStatusResponse>
          description: ''
      return:
        type:
          - Promise<@azure-arm-compute.OperationStatusResponse>
  - uid: >-
      azure-arm-compute.VirtualMachineScaleSets.beginStartWithHttpOperationResponse
    name: beginStartWithHttpOperationResponse
    children: []
    type: method
    langs:
      - typeScript
    summary: Starts one or more virtual machines in a VM scale set.
    syntax:
      content: >-
        function beginStartWithHttpOperationResponse(resourceGroupName: string,
        vmScaleSetName: string, options?: function)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: options
          type:
            - function
          description: ''
          optional: true
      return:
        type:
          - Promise<OperationStatusResponse>>
  - uid: azure-arm-compute.VirtualMachineScaleSets.beginUpdate
    name: beginUpdate
    children: []
    type: method
    langs:
      - typeScript
    summary: Update a VM scale set.
    syntax:
      content: >-
        function beginUpdate(resourceGroupName: string, vmScaleSetName: string,
        parameters: VirtualMachineScaleSetUpdate, options?: function)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set to create or
            update.
        - id: parameters
          type:
            - '@azure-arm-compute.VirtualMachineScaleSetUpdate'
          description: |
            The scale set object.
        - id: options
          type:
            - function
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure-arm-compute.VirtualMachineScaleSet>
  - uid: azure-arm-compute.VirtualMachineScaleSets.beginUpdate_1
    name: beginUpdate
    children: []
    type: method
    langs:
      - typeScript
    summary: Update a VM scale set.
    syntax:
      content: >-
        function beginUpdate(resourceGroupName: string, vmScaleSetName: string,
        parameters: VirtualMachineScaleSetUpdate, callback:
        ServiceCallback<VirtualMachineScaleSet>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - '@azure-arm-compute.VirtualMachineScaleSetUpdate'
          description: ''
        - id: callback
          type:
            - ServiceCallback<@azure-arm-compute.VirtualMachineScaleSet>
          description: ''
      return:
        type:
          - Promise<@azure-arm-compute.VirtualMachineScaleSet>
  - uid: azure-arm-compute.VirtualMachineScaleSets.beginUpdate_2
    name: beginUpdate
    children: []
    type: method
    langs:
      - typeScript
    summary: Update a VM scale set.
    syntax:
      content: >-
        function beginUpdate(resourceGroupName: string, vmScaleSetName: string,
        parameters: VirtualMachineScaleSetUpdate, options: function, callback:
        ServiceCallback<VirtualMachineScaleSet>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - '@azure-arm-compute.VirtualMachineScaleSetUpdate'
          description: ''
        - id: options
          type:
            - function
          description: ''
        - id: callback
          type:
            - ServiceCallback<@azure-arm-compute.VirtualMachineScaleSet>
          description: ''
      return:
        type:
          - Promise<@azure-arm-compute.VirtualMachineScaleSet>
  - uid: azure-arm-compute.VirtualMachineScaleSets.beginUpdateInstances_2
    name: beginUpdateInstances
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Upgrades one or more virtual machines to the latest SKU set in the VM
      scale

      set model.
    syntax:
      content: >-
        function beginUpdateInstances(resourceGroupName: string, vmScaleSetName:
        string, instanceIds: string[], options: function, callback:
        ServiceCallback<OperationStatusResponse>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: instanceIds
          type:
            - 'string[]'
          description: ''
        - id: options
          type:
            - function
          description: ''
        - id: callback
          type:
            - ServiceCallback<@azure-arm-compute.OperationStatusResponse>
          description: ''
      return:
        type:
          - Promise<@azure-arm-compute.OperationStatusResponse>
  - uid: azure-arm-compute.VirtualMachineScaleSets.beginUpdateInstances_1
    name: beginUpdateInstances
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Upgrades one or more virtual machines to the latest SKU set in the VM
      scale

      set model.
    syntax:
      content: >-
        function beginUpdateInstances(resourceGroupName: string, vmScaleSetName:
        string, instanceIds: string[], callback:
        ServiceCallback<OperationStatusResponse>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: instanceIds
          type:
            - 'string[]'
          description: ''
        - id: callback
          type:
            - ServiceCallback<@azure-arm-compute.OperationStatusResponse>
          description: ''
      return:
        type:
          - Promise<@azure-arm-compute.OperationStatusResponse>
  - uid: azure-arm-compute.VirtualMachineScaleSets.beginUpdateInstances
    name: beginUpdateInstances
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Upgrades one or more virtual machines to the latest SKU set in the VM
      scale

      set model.
    syntax:
      content: >-
        function beginUpdateInstances(resourceGroupName: string, vmScaleSetName:
        string, instanceIds: string[], options?: function)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: instanceIds
          type:
            - 'string[]'
          description: |
            The virtual machine scale set instance ids.
        - id: options
          type:
            - function
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure-arm-compute.OperationStatusResponse>
  - uid: >-
      azure-arm-compute.VirtualMachineScaleSets.beginUpdateInstancesWithHttpOperationResponse
    name: beginUpdateInstancesWithHttpOperationResponse
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Upgrades one or more virtual machines to the latest SKU set in the VM
      scale

      set model.
    syntax:
      content: >-
        function
        beginUpdateInstancesWithHttpOperationResponse(resourceGroupName: string,
        vmScaleSetName: string, instanceIds: string[], options?: function)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: instanceIds
          type:
            - 'string[]'
          description: |
            The virtual machine scale set instance ids.
        - id: options
          type:
            - function
          description: ''
          optional: true
      return:
        type:
          - Promise<OperationStatusResponse>>
  - uid: >-
      azure-arm-compute.VirtualMachineScaleSets.beginUpdateWithHttpOperationResponse
    name: beginUpdateWithHttpOperationResponse
    children: []
    type: method
    langs:
      - typeScript
    summary: Update a VM scale set.
    syntax:
      content: >-
        function beginUpdateWithHttpOperationResponse(resourceGroupName: string,
        vmScaleSetName: string, parameters: VirtualMachineScaleSetUpdate,
        options?: function)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set to create or
            update.
        - id: parameters
          type:
            - '@azure-arm-compute.VirtualMachineScaleSetUpdate'
          description: |
            The scale set object.
        - id: options
          type:
            - function
          description: ''
          optional: true
      return:
        type:
          - Promise<VirtualMachineScaleSet>>
  - uid: azure-arm-compute.VirtualMachineScaleSets.createOrUpdate
    name: createOrUpdate
    children: []
    type: method
    langs:
      - typeScript
    summary: Create or update a VM scale set.
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, vmScaleSetName:
        string, parameters: VirtualMachineScaleSet, options?: function)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set to create or
            update.
        - id: parameters
          type:
            - '@azure-arm-compute.VirtualMachineScaleSet'
          description: |
            The scale set object.
        - id: options
          type:
            - function
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure-arm-compute.VirtualMachineScaleSet>
  - uid: azure-arm-compute.VirtualMachineScaleSets.createOrUpdate_1
    name: createOrUpdate
    children: []
    type: method
    langs:
      - typeScript
    summary: Create or update a VM scale set.
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, vmScaleSetName:
        string, parameters: VirtualMachineScaleSet, callback:
        ServiceCallback<VirtualMachineScaleSet>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - '@azure-arm-compute.VirtualMachineScaleSet'
          description: ''
        - id: callback
          type:
            - ServiceCallback<@azure-arm-compute.VirtualMachineScaleSet>
          description: ''
      return:
        type:
          - Promise<@azure-arm-compute.VirtualMachineScaleSet>
  - uid: azure-arm-compute.VirtualMachineScaleSets.createOrUpdate_2
    name: createOrUpdate
    children: []
    type: method
    langs:
      - typeScript
    summary: Create or update a VM scale set.
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, vmScaleSetName:
        string, parameters: VirtualMachineScaleSet, options: function, callback:
        ServiceCallback<VirtualMachineScaleSet>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - '@azure-arm-compute.VirtualMachineScaleSet'
          description: ''
        - id: options
          type:
            - function
          description: ''
        - id: callback
          type:
            - ServiceCallback<@azure-arm-compute.VirtualMachineScaleSet>
          description: ''
      return:
        type:
          - Promise<@azure-arm-compute.VirtualMachineScaleSet>
  - uid: >-
      azure-arm-compute.VirtualMachineScaleSets.createOrUpdateWithHttpOperationResponse
    name: createOrUpdateWithHttpOperationResponse
    children: []
    type: method
    langs:
      - typeScript
    summary: Create or update a VM scale set.
    syntax:
      content: >-
        function createOrUpdateWithHttpOperationResponse(resourceGroupName:
        string, vmScaleSetName: string, parameters: VirtualMachineScaleSet,
        options?: function)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set to create or
            update.
        - id: parameters
          type:
            - '@azure-arm-compute.VirtualMachineScaleSet'
          description: |
            The scale set object.
        - id: options
          type:
            - function
          description: ''
          optional: true
      return:
        type:
          - Promise<VirtualMachineScaleSet>>
  - uid: azure-arm-compute.VirtualMachineScaleSets.deallocate_1
    name: deallocate
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Deallocates specific virtual machines in a VM scale set. Shuts down the

      virtual machines and releases the compute resources. You are not billed
      for

      the compute resources that this virtual machine scale set deallocates.
    syntax:
      content: >-
        function deallocate(resourceGroupName: string, vmScaleSetName: string,
        callback: ServiceCallback<OperationStatusResponse>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<@azure-arm-compute.OperationStatusResponse>
          description: ''
      return:
        type:
          - Promise<@azure-arm-compute.OperationStatusResponse>
  - uid: azure-arm-compute.VirtualMachineScaleSets.deallocate
    name: deallocate
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Deallocates specific virtual machines in a VM scale set. Shuts down the

      virtual machines and releases the compute resources. You are not billed
      for

      the compute resources that this virtual machine scale set deallocates.
    syntax:
      content: >-
        function deallocate(resourceGroupName: string, vmScaleSetName: string,
        options?: function)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: options
          type:
            - function
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure-arm-compute.OperationStatusResponse>
  - uid: azure-arm-compute.VirtualMachineScaleSets.deallocate_2
    name: deallocate
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Deallocates specific virtual machines in a VM scale set. Shuts down the

      virtual machines and releases the compute resources. You are not billed
      for

      the compute resources that this virtual machine scale set deallocates.
    syntax:
      content: >-
        function deallocate(resourceGroupName: string, vmScaleSetName: string,
        options: function, callback: ServiceCallback<OperationStatusResponse>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: options
          type:
            - function
          description: ''
        - id: callback
          type:
            - ServiceCallback<@azure-arm-compute.OperationStatusResponse>
          description: ''
      return:
        type:
          - Promise<@azure-arm-compute.OperationStatusResponse>
  - uid: >-
      azure-arm-compute.VirtualMachineScaleSets.deallocateWithHttpOperationResponse
    name: deallocateWithHttpOperationResponse
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Deallocates specific virtual machines in a VM scale set. Shuts down the

      virtual machines and releases the compute resources. You are not billed
      for

      the compute resources that this virtual machine scale set deallocates.
    syntax:
      content: >-
        function deallocateWithHttpOperationResponse(resourceGroupName: string,
        vmScaleSetName: string, options?: function)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: options
          type:
            - function
          description: ''
          optional: true
      return:
        type:
          - Promise<OperationStatusResponse>>
  - uid: azure-arm-compute.VirtualMachineScaleSets.deleteInstances
    name: deleteInstances
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes virtual machines in a VM scale set.
    syntax:
      content: >-
        function deleteInstances(resourceGroupName: string, vmScaleSetName:
        string, instanceIds: string[], options?: function)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: instanceIds
          type:
            - 'string[]'
          description: |
            The virtual machine scale set instance ids.
        - id: options
          type:
            - function
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure-arm-compute.OperationStatusResponse>
  - uid: azure-arm-compute.VirtualMachineScaleSets.deleteInstances_1
    name: deleteInstances
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes virtual machines in a VM scale set.
    syntax:
      content: >-
        function deleteInstances(resourceGroupName: string, vmScaleSetName:
        string, instanceIds: string[], callback:
        ServiceCallback<OperationStatusResponse>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: instanceIds
          type:
            - 'string[]'
          description: ''
        - id: callback
          type:
            - ServiceCallback<@azure-arm-compute.OperationStatusResponse>
          description: ''
      return:
        type:
          - Promise<@azure-arm-compute.OperationStatusResponse>
  - uid: azure-arm-compute.VirtualMachineScaleSets.deleteInstances_2
    name: deleteInstances
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes virtual machines in a VM scale set.
    syntax:
      content: >-
        function deleteInstances(resourceGroupName: string, vmScaleSetName:
        string, instanceIds: string[], options: function, callback:
        ServiceCallback<OperationStatusResponse>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: instanceIds
          type:
            - 'string[]'
          description: ''
        - id: options
          type:
            - function
          description: ''
        - id: callback
          type:
            - ServiceCallback<@azure-arm-compute.OperationStatusResponse>
          description: ''
      return:
        type:
          - Promise<@azure-arm-compute.OperationStatusResponse>
  - uid: >-
      azure-arm-compute.VirtualMachineScaleSets.deleteInstancesWithHttpOperationResponse
    name: deleteInstancesWithHttpOperationResponse
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes virtual machines in a VM scale set.
    syntax:
      content: >-
        function deleteInstancesWithHttpOperationResponse(resourceGroupName:
        string, vmScaleSetName: string, instanceIds: string[], options?:
        function)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: instanceIds
          type:
            - 'string[]'
          description: |
            The virtual machine scale set instance ids.
        - id: options
          type:
            - function
          description: ''
          optional: true
      return:
        type:
          - Promise<OperationStatusResponse>>
  - uid: azure-arm-compute.VirtualMachineScaleSets.deleteMethod
    name: deleteMethod
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes a VM scale set.
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, vmScaleSetName: string,
        options?: function)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: options
          type:
            - function
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure-arm-compute.OperationStatusResponse>
  - uid: azure-arm-compute.VirtualMachineScaleSets.deleteMethod_1
    name: deleteMethod
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes a VM scale set.
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, vmScaleSetName: string,
        callback: ServiceCallback<OperationStatusResponse>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<@azure-arm-compute.OperationStatusResponse>
          description: ''
      return:
        type:
          - Promise<@azure-arm-compute.OperationStatusResponse>
  - uid: azure-arm-compute.VirtualMachineScaleSets.deleteMethod_2
    name: deleteMethod
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes a VM scale set.
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, vmScaleSetName: string,
        options: function, callback: ServiceCallback<OperationStatusResponse>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: options
          type:
            - function
          description: ''
        - id: callback
          type:
            - ServiceCallback<@azure-arm-compute.OperationStatusResponse>
          description: ''
      return:
        type:
          - Promise<@azure-arm-compute.OperationStatusResponse>
  - uid: >-
      azure-arm-compute.VirtualMachineScaleSets.deleteMethodWithHttpOperationResponse
    name: deleteMethodWithHttpOperationResponse
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes a VM scale set.
    syntax:
      content: >-
        function deleteMethodWithHttpOperationResponse(resourceGroupName:
        string, vmScaleSetName: string, options?: function)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: options
          type:
            - function
          description: ''
          optional: true
      return:
        type:
          - Promise<OperationStatusResponse>>
  - uid: azure-arm-compute.VirtualMachineScaleSets.get
    name: get
    children: []
    type: method
    langs:
      - typeScript
    summary: Display information about a virtual machine scale set.
    syntax:
      content: >-
        function get(resourceGroupName: string, vmScaleSetName: string,
        options?: function)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: options
          type:
            - function
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure-arm-compute.VirtualMachineScaleSet>
  - uid: azure-arm-compute.VirtualMachineScaleSets.get_1
    name: get
    children: []
    type: method
    langs:
      - typeScript
    summary: Display information about a virtual machine scale set.
    syntax:
      content: >-
        function get(resourceGroupName: string, vmScaleSetName: string,
        callback: ServiceCallback<VirtualMachineScaleSet>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<@azure-arm-compute.VirtualMachineScaleSet>
          description: ''
      return:
        type:
          - Promise<@azure-arm-compute.VirtualMachineScaleSet>
  - uid: azure-arm-compute.VirtualMachineScaleSets.get_2
    name: get
    children: []
    type: method
    langs:
      - typeScript
    summary: Display information about a virtual machine scale set.
    syntax:
      content: >-
        function get(resourceGroupName: string, vmScaleSetName: string, options:
        function, callback: ServiceCallback<VirtualMachineScaleSet>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: options
          type:
            - function
          description: ''
        - id: callback
          type:
            - ServiceCallback<@azure-arm-compute.VirtualMachineScaleSet>
          description: ''
      return:
        type:
          - Promise<@azure-arm-compute.VirtualMachineScaleSet>
  - uid: azure-arm-compute.VirtualMachineScaleSets.getInstanceView
    name: getInstanceView
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the status of a VM scale set instance.
    syntax:
      content: >-
        function getInstanceView(resourceGroupName: string, vmScaleSetName:
        string, options?: function)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: options
          type:
            - function
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure-arm-compute.VirtualMachineScaleSetInstanceView>
  - uid: azure-arm-compute.VirtualMachineScaleSets.getInstanceView_1
    name: getInstanceView
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the status of a VM scale set instance.
    syntax:
      content: >-
        function getInstanceView(resourceGroupName: string, vmScaleSetName:
        string, callback: ServiceCallback<VirtualMachineScaleSetInstanceView>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<@azure-arm-compute.VirtualMachineScaleSetInstanceView>
          description: ''
      return:
        type:
          - Promise<@azure-arm-compute.VirtualMachineScaleSetInstanceView>
  - uid: azure-arm-compute.VirtualMachineScaleSets.getInstanceView_2
    name: getInstanceView
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the status of a VM scale set instance.
    syntax:
      content: >-
        function getInstanceView(resourceGroupName: string, vmScaleSetName:
        string, options: function, callback:
        ServiceCallback<VirtualMachineScaleSetInstanceView>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: options
          type:
            - function
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<@azure-arm-compute.VirtualMachineScaleSetInstanceView>
          description: ''
      return:
        type:
          - Promise<@azure-arm-compute.VirtualMachineScaleSetInstanceView>
  - uid: >-
      azure-arm-compute.VirtualMachineScaleSets.getInstanceViewWithHttpOperationResponse
    name: getInstanceViewWithHttpOperationResponse
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the status of a VM scale set instance.
    syntax:
      content: >-
        function getInstanceViewWithHttpOperationResponse(resourceGroupName:
        string, vmScaleSetName: string, options?: function)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: options
          type:
            - function
          description: ''
          optional: true
      return:
        type:
          - Promise<VirtualMachineScaleSetInstanceView>>
  - uid: azure-arm-compute.VirtualMachineScaleSets.getWithHttpOperationResponse
    name: getWithHttpOperationResponse
    children: []
    type: method
    langs:
      - typeScript
    summary: Display information about a virtual machine scale set.
    syntax:
      content: >-
        function getWithHttpOperationResponse(resourceGroupName: string,
        vmScaleSetName: string, options?: function)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: options
          type:
            - function
          description: ''
          optional: true
      return:
        type:
          - Promise<VirtualMachineScaleSet>>
  - uid: azure-arm-compute.VirtualMachineScaleSets.list_2
    name: list
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a list of all VM scale sets under a resource group.
    syntax:
      content: >-
        function list(resourceGroupName: string, options: function, callback:
        ServiceCallback<VirtualMachineScaleSetListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: options
          type:
            - function
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<@azure-arm-compute.VirtualMachineScaleSetListResult>
          description: ''
      return:
        type:
          - Promise<@azure-arm-compute.VirtualMachineScaleSetListResult>
  - uid: azure-arm-compute.VirtualMachineScaleSets.list
    name: list
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a list of all VM scale sets under a resource group.
    syntax:
      content: 'function list(resourceGroupName: string, options?: function)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: options
          type:
            - function
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure-arm-compute.VirtualMachineScaleSetListResult>
  - uid: azure-arm-compute.VirtualMachineScaleSets.list_1
    name: list
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a list of all VM scale sets under a resource group.
    syntax:
      content: >-
        function list(resourceGroupName: string, callback:
        ServiceCallback<VirtualMachineScaleSetListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<@azure-arm-compute.VirtualMachineScaleSetListResult>
          description: ''
      return:
        type:
          - Promise<@azure-arm-compute.VirtualMachineScaleSetListResult>
  - uid: azure-arm-compute.VirtualMachineScaleSets.listAll_2
    name: listAll
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets a list of all VM Scale Sets in the subscription, regardless of the

      associated resource group. Use nextLink property in the response to get
      the

      next page of VM Scale Sets. Do this till nextLink is not null to fetch all

      the VM Scale Sets.
    syntax:
      content: >-
        function listAll(options: function, callback:
        ServiceCallback<VirtualMachineScaleSetListWithLinkResult>)
      parameters:
        - id: options
          type:
            - function
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<@azure-arm-compute.VirtualMachineScaleSetListWithLinkResult>
          description: ''
      return:
        type:
          - Promise<@azure-arm-compute.VirtualMachineScaleSetListWithLinkResult>
  - uid: azure-arm-compute.VirtualMachineScaleSets.listAll_1
    name: listAll
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets a list of all VM Scale Sets in the subscription, regardless of the

      associated resource group. Use nextLink property in the response to get
      the

      next page of VM Scale Sets. Do this till nextLink is not null to fetch all

      the VM Scale Sets.
    syntax:
      content: >-
        function listAll(callback:
        ServiceCallback<VirtualMachineScaleSetListWithLinkResult>)
      parameters:
        - id: callback
          type:
            - >-
              ServiceCallback<@azure-arm-compute.VirtualMachineScaleSetListWithLinkResult>
          description: ''
      return:
        type:
          - Promise<@azure-arm-compute.VirtualMachineScaleSetListWithLinkResult>
  - uid: azure-arm-compute.VirtualMachineScaleSets.listAll
    name: listAll
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets a list of all VM Scale Sets in the subscription, regardless of the

      associated resource group. Use nextLink property in the response to get
      the

      next page of VM Scale Sets. Do this till nextLink is not null to fetch all

      the VM Scale Sets.
    syntax:
      content: 'function listAll(options?: function)'
      parameters:
        - id: options
          type:
            - function
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure-arm-compute.VirtualMachineScaleSetListWithLinkResult>
  - uid: azure-arm-compute.VirtualMachineScaleSets.listAllNext_1
    name: listAllNext
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets a list of all VM Scale Sets in the subscription, regardless of the

      associated resource group. Use nextLink property in the response to get
      the

      next page of VM Scale Sets. Do this till nextLink is not null to fetch all

      the VM Scale Sets.
    syntax:
      content: >-
        function listAllNext(nextPageLink: string, callback:
        ServiceCallback<VirtualMachineScaleSetListWithLinkResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<@azure-arm-compute.VirtualMachineScaleSetListWithLinkResult>
          description: ''
      return:
        type:
          - Promise<@azure-arm-compute.VirtualMachineScaleSetListWithLinkResult>
  - uid: azure-arm-compute.VirtualMachineScaleSets.listAllNext_2
    name: listAllNext
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets a list of all VM Scale Sets in the subscription, regardless of the

      associated resource group. Use nextLink property in the response to get
      the

      next page of VM Scale Sets. Do this till nextLink is not null to fetch all

      the VM Scale Sets.
    syntax:
      content: >-
        function listAllNext(nextPageLink: string, options: function, callback:
        ServiceCallback<VirtualMachineScaleSetListWithLinkResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: options
          type:
            - function
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<@azure-arm-compute.VirtualMachineScaleSetListWithLinkResult>
          description: ''
      return:
        type:
          - Promise<@azure-arm-compute.VirtualMachineScaleSetListWithLinkResult>
  - uid: azure-arm-compute.VirtualMachineScaleSets.listAllNext
    name: listAllNext
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets a list of all VM Scale Sets in the subscription, regardless of the

      associated resource group. Use nextLink property in the response to get
      the

      next page of VM Scale Sets. Do this till nextLink is not null to fetch all

      the VM Scale Sets.
    syntax:
      content: 'function listAllNext(nextPageLink: string, options?: function)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - function
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure-arm-compute.VirtualMachineScaleSetListWithLinkResult>
  - uid: >-
      azure-arm-compute.VirtualMachineScaleSets.listAllNextWithHttpOperationResponse
    name: listAllNextWithHttpOperationResponse
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets a list of all VM Scale Sets in the subscription, regardless of the

      associated resource group. Use nextLink property in the response to get
      the

      next page of VM Scale Sets. Do this till nextLink is not null to fetch all

      the VM Scale Sets.
    syntax:
      content: >-
        function listAllNextWithHttpOperationResponse(nextPageLink: string,
        options?: function)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - function
          description: ''
          optional: true
      return:
        type:
          - Promise<VirtualMachineScaleSetListWithLinkResult>>
  - uid: azure-arm-compute.VirtualMachineScaleSets.listAllWithHttpOperationResponse
    name: listAllWithHttpOperationResponse
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets a list of all VM Scale Sets in the subscription, regardless of the

      associated resource group. Use nextLink property in the response to get
      the

      next page of VM Scale Sets. Do this till nextLink is not null to fetch all

      the VM Scale Sets.
    syntax:
      content: 'function listAllWithHttpOperationResponse(options?: function)'
      parameters:
        - id: options
          type:
            - function
          description: ''
          optional: true
      return:
        type:
          - Promise<VirtualMachineScaleSetListWithLinkResult>>
  - uid: azure-arm-compute.VirtualMachineScaleSets.listNext_1
    name: listNext
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a list of all VM scale sets under a resource group.
    syntax:
      content: >-
        function listNext(nextPageLink: string, callback:
        ServiceCallback<VirtualMachineScaleSetListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<@azure-arm-compute.VirtualMachineScaleSetListResult>
          description: ''
      return:
        type:
          - Promise<@azure-arm-compute.VirtualMachineScaleSetListResult>
  - uid: azure-arm-compute.VirtualMachineScaleSets.listNext
    name: listNext
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a list of all VM scale sets under a resource group.
    syntax:
      content: 'function listNext(nextPageLink: string, options?: function)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - function
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure-arm-compute.VirtualMachineScaleSetListResult>
  - uid: azure-arm-compute.VirtualMachineScaleSets.listNext_2
    name: listNext
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a list of all VM scale sets under a resource group.
    syntax:
      content: >-
        function listNext(nextPageLink: string, options: function, callback:
        ServiceCallback<VirtualMachineScaleSetListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: options
          type:
            - function
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<@azure-arm-compute.VirtualMachineScaleSetListResult>
          description: ''
      return:
        type:
          - Promise<@azure-arm-compute.VirtualMachineScaleSetListResult>
  - uid: >-
      azure-arm-compute.VirtualMachineScaleSets.listNextWithHttpOperationResponse
    name: listNextWithHttpOperationResponse
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a list of all VM scale sets under a resource group.
    syntax:
      content: >-
        function listNextWithHttpOperationResponse(nextPageLink: string,
        options?: function)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - function
          description: ''
          optional: true
      return:
        type:
          - Promise<VirtualMachineScaleSetListResult>>
  - uid: azure-arm-compute.VirtualMachineScaleSets.listSkus
    name: listSkus
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Gets a list of SKUs available for your VM scale set, including the minimum
      and maximum VM instances allowed for each SKU.
    syntax:
      content: >-
        function listSkus(resourceGroupName: string, vmScaleSetName: string,
        options?: function)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: options
          type:
            - function
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure-arm-compute.VirtualMachineScaleSetListSkusResult>
  - uid: azure-arm-compute.VirtualMachineScaleSets.listSkus_1
    name: listSkus
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Gets a list of SKUs available for your VM scale set, including the minimum
      and maximum VM instances allowed for each SKU.
    syntax:
      content: >-
        function listSkus(resourceGroupName: string, vmScaleSetName: string,
        callback: ServiceCallback<VirtualMachineScaleSetListSkusResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<@azure-arm-compute.VirtualMachineScaleSetListSkusResult>
          description: ''
      return:
        type:
          - Promise<@azure-arm-compute.VirtualMachineScaleSetListSkusResult>
  - uid: azure-arm-compute.VirtualMachineScaleSets.listSkus_2
    name: listSkus
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Gets a list of SKUs available for your VM scale set, including the minimum
      and maximum VM instances allowed for each SKU.
    syntax:
      content: >-
        function listSkus(resourceGroupName: string, vmScaleSetName: string,
        options: function, callback:
        ServiceCallback<VirtualMachineScaleSetListSkusResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: options
          type:
            - function
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<@azure-arm-compute.VirtualMachineScaleSetListSkusResult>
          description: ''
      return:
        type:
          - Promise<@azure-arm-compute.VirtualMachineScaleSetListSkusResult>
  - uid: azure-arm-compute.VirtualMachineScaleSets.listSkusNext_1
    name: listSkusNext
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Gets a list of SKUs available for your VM scale set, including the minimum
      and maximum VM instances allowed for each SKU.
    syntax:
      content: >-
        function listSkusNext(nextPageLink: string, callback:
        ServiceCallback<VirtualMachineScaleSetListSkusResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<@azure-arm-compute.VirtualMachineScaleSetListSkusResult>
          description: ''
      return:
        type:
          - Promise<@azure-arm-compute.VirtualMachineScaleSetListSkusResult>
  - uid: azure-arm-compute.VirtualMachineScaleSets.listSkusNext_2
    name: listSkusNext
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Gets a list of SKUs available for your VM scale set, including the minimum
      and maximum VM instances allowed for each SKU.
    syntax:
      content: >-
        function listSkusNext(nextPageLink: string, options: function, callback:
        ServiceCallback<VirtualMachineScaleSetListSkusResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: options
          type:
            - function
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<@azure-arm-compute.VirtualMachineScaleSetListSkusResult>
          description: ''
      return:
        type:
          - Promise<@azure-arm-compute.VirtualMachineScaleSetListSkusResult>
  - uid: azure-arm-compute.VirtualMachineScaleSets.listSkusNext
    name: listSkusNext
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Gets a list of SKUs available for your VM scale set, including the minimum
      and maximum VM instances allowed for each SKU.
    syntax:
      content: 'function listSkusNext(nextPageLink: string, options?: function)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - function
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure-arm-compute.VirtualMachineScaleSetListSkusResult>
  - uid: >-
      azure-arm-compute.VirtualMachineScaleSets.listSkusNextWithHttpOperationResponse
    name: listSkusNextWithHttpOperationResponse
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Gets a list of SKUs available for your VM scale set, including the minimum
      and maximum VM instances allowed for each SKU.
    syntax:
      content: >-
        function listSkusNextWithHttpOperationResponse(nextPageLink: string,
        options?: function)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - function
          description: ''
          optional: true
      return:
        type:
          - Promise<VirtualMachineScaleSetListSkusResult>>
  - uid: >-
      azure-arm-compute.VirtualMachineScaleSets.listSkusWithHttpOperationResponse
    name: listSkusWithHttpOperationResponse
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Gets a list of SKUs available for your VM scale set, including the minimum
      and maximum VM instances allowed for each SKU.
    syntax:
      content: >-
        function listSkusWithHttpOperationResponse(resourceGroupName: string,
        vmScaleSetName: string, options?: function)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: options
          type:
            - function
          description: ''
          optional: true
      return:
        type:
          - Promise<VirtualMachineScaleSetListSkusResult>>
  - uid: azure-arm-compute.VirtualMachineScaleSets.listWithHttpOperationResponse
    name: listWithHttpOperationResponse
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a list of all VM scale sets under a resource group.
    syntax:
      content: >-
        function listWithHttpOperationResponse(resourceGroupName: string,
        options?: function)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: options
          type:
            - function
          description: ''
          optional: true
      return:
        type:
          - Promise<VirtualMachineScaleSetListResult>>
  - uid: azure-arm-compute.VirtualMachineScaleSets.powerOff
    name: powerOff
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Power off (stop) one or more virtual machines in a VM scale set. Note that

      resources are still attached and you are getting charged for the
      resources.

      Instead, use deallocate to release resources and avoid charges.
    syntax:
      content: >-
        function powerOff(resourceGroupName: string, vmScaleSetName: string,
        options?: function)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: options
          type:
            - function
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure-arm-compute.OperationStatusResponse>
  - uid: azure-arm-compute.VirtualMachineScaleSets.powerOff_1
    name: powerOff
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Power off (stop) one or more virtual machines in a VM scale set. Note that

      resources are still attached and you are getting charged for the
      resources.

      Instead, use deallocate to release resources and avoid charges.
    syntax:
      content: >-
        function powerOff(resourceGroupName: string, vmScaleSetName: string,
        callback: ServiceCallback<OperationStatusResponse>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<@azure-arm-compute.OperationStatusResponse>
          description: ''
      return:
        type:
          - Promise<@azure-arm-compute.OperationStatusResponse>
  - uid: azure-arm-compute.VirtualMachineScaleSets.powerOff_2
    name: powerOff
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Power off (stop) one or more virtual machines in a VM scale set. Note that

      resources are still attached and you are getting charged for the
      resources.

      Instead, use deallocate to release resources and avoid charges.
    syntax:
      content: >-
        function powerOff(resourceGroupName: string, vmScaleSetName: string,
        options: function, callback: ServiceCallback<OperationStatusResponse>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: options
          type:
            - function
          description: ''
        - id: callback
          type:
            - ServiceCallback<@azure-arm-compute.OperationStatusResponse>
          description: ''
      return:
        type:
          - Promise<@azure-arm-compute.OperationStatusResponse>
  - uid: >-
      azure-arm-compute.VirtualMachineScaleSets.powerOffWithHttpOperationResponse
    name: powerOffWithHttpOperationResponse
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Power off (stop) one or more virtual machines in a VM scale set. Note that

      resources are still attached and you are getting charged for the
      resources.

      Instead, use deallocate to release resources and avoid charges.
    syntax:
      content: >-
        function powerOffWithHttpOperationResponse(resourceGroupName: string,
        vmScaleSetName: string, options?: function)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: options
          type:
            - function
          description: ''
          optional: true
      return:
        type:
          - Promise<OperationStatusResponse>>
  - uid: azure-arm-compute.VirtualMachineScaleSets.reimage
    name: reimage
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Reimages (upgrade the operating system) one or more virtual machines in a
      VM

      scale set.
    syntax:
      content: >-
        function reimage(resourceGroupName: string, vmScaleSetName: string,
        options?: function)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: options
          type:
            - function
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure-arm-compute.OperationStatusResponse>
  - uid: azure-arm-compute.VirtualMachineScaleSets.reimage_1
    name: reimage
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Reimages (upgrade the operating system) one or more virtual machines in a
      VM

      scale set.
    syntax:
      content: >-
        function reimage(resourceGroupName: string, vmScaleSetName: string,
        callback: ServiceCallback<OperationStatusResponse>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<@azure-arm-compute.OperationStatusResponse>
          description: ''
      return:
        type:
          - Promise<@azure-arm-compute.OperationStatusResponse>
  - uid: azure-arm-compute.VirtualMachineScaleSets.reimage_2
    name: reimage
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Reimages (upgrade the operating system) one or more virtual machines in a
      VM

      scale set.
    syntax:
      content: >-
        function reimage(resourceGroupName: string, vmScaleSetName: string,
        options: function, callback: ServiceCallback<OperationStatusResponse>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: options
          type:
            - function
          description: ''
        - id: callback
          type:
            - ServiceCallback<@azure-arm-compute.OperationStatusResponse>
          description: ''
      return:
        type:
          - Promise<@azure-arm-compute.OperationStatusResponse>
  - uid: azure-arm-compute.VirtualMachineScaleSets.reimageAll_1
    name: reimageAll
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Reimages all the disks ( including data disks ) in the virtual machines in
      a

      VM scale set. This operation is only supported for managed disks.
    syntax:
      content: >-
        function reimageAll(resourceGroupName: string, vmScaleSetName: string,
        callback: ServiceCallback<OperationStatusResponse>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<@azure-arm-compute.OperationStatusResponse>
          description: ''
      return:
        type:
          - Promise<@azure-arm-compute.OperationStatusResponse>
  - uid: azure-arm-compute.VirtualMachineScaleSets.reimageAll_2
    name: reimageAll
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Reimages all the disks ( including data disks ) in the virtual machines in
      a

      VM scale set. This operation is only supported for managed disks.
    syntax:
      content: >-
        function reimageAll(resourceGroupName: string, vmScaleSetName: string,
        options: function, callback: ServiceCallback<OperationStatusResponse>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: options
          type:
            - function
          description: ''
        - id: callback
          type:
            - ServiceCallback<@azure-arm-compute.OperationStatusResponse>
          description: ''
      return:
        type:
          - Promise<@azure-arm-compute.OperationStatusResponse>
  - uid: azure-arm-compute.VirtualMachineScaleSets.reimageAll
    name: reimageAll
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Reimages all the disks ( including data disks ) in the virtual machines in
      a

      VM scale set. This operation is only supported for managed disks.
    syntax:
      content: >-
        function reimageAll(resourceGroupName: string, vmScaleSetName: string,
        options?: function)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: options
          type:
            - function
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure-arm-compute.OperationStatusResponse>
  - uid: >-
      azure-arm-compute.VirtualMachineScaleSets.reimageAllWithHttpOperationResponse
    name: reimageAllWithHttpOperationResponse
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Reimages all the disks ( including data disks ) in the virtual machines in
      a

      VM scale set. This operation is only supported for managed disks.
    syntax:
      content: >-
        function reimageAllWithHttpOperationResponse(resourceGroupName: string,
        vmScaleSetName: string, options?: function)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: options
          type:
            - function
          description: ''
          optional: true
      return:
        type:
          - Promise<OperationStatusResponse>>
  - uid: azure-arm-compute.VirtualMachineScaleSets.reimageWithHttpOperationResponse
    name: reimageWithHttpOperationResponse
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Reimages (upgrade the operating system) one or more virtual machines in a
      VM

      scale set.
    syntax:
      content: >-
        function reimageWithHttpOperationResponse(resourceGroupName: string,
        vmScaleSetName: string, options?: function)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: options
          type:
            - function
          description: ''
          optional: true
      return:
        type:
          - Promise<OperationStatusResponse>>
  - uid: azure-arm-compute.VirtualMachineScaleSets.restart
    name: restart
    children: []
    type: method
    langs:
      - typeScript
    summary: Restarts one or more virtual machines in a VM scale set.
    syntax:
      content: >-
        function restart(resourceGroupName: string, vmScaleSetName: string,
        options?: function)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: options
          type:
            - function
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure-arm-compute.OperationStatusResponse>
  - uid: azure-arm-compute.VirtualMachineScaleSets.restart_1
    name: restart
    children: []
    type: method
    langs:
      - typeScript
    summary: Restarts one or more virtual machines in a VM scale set.
    syntax:
      content: >-
        function restart(resourceGroupName: string, vmScaleSetName: string,
        callback: ServiceCallback<OperationStatusResponse>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<@azure-arm-compute.OperationStatusResponse>
          description: ''
      return:
        type:
          - Promise<@azure-arm-compute.OperationStatusResponse>
  - uid: azure-arm-compute.VirtualMachineScaleSets.restart_2
    name: restart
    children: []
    type: method
    langs:
      - typeScript
    summary: Restarts one or more virtual machines in a VM scale set.
    syntax:
      content: >-
        function restart(resourceGroupName: string, vmScaleSetName: string,
        options: function, callback: ServiceCallback<OperationStatusResponse>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: options
          type:
            - function
          description: ''
        - id: callback
          type:
            - ServiceCallback<@azure-arm-compute.OperationStatusResponse>
          description: ''
      return:
        type:
          - Promise<@azure-arm-compute.OperationStatusResponse>
  - uid: azure-arm-compute.VirtualMachineScaleSets.restartWithHttpOperationResponse
    name: restartWithHttpOperationResponse
    children: []
    type: method
    langs:
      - typeScript
    summary: Restarts one or more virtual machines in a VM scale set.
    syntax:
      content: >-
        function restartWithHttpOperationResponse(resourceGroupName: string,
        vmScaleSetName: string, options?: function)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: options
          type:
            - function
          description: ''
          optional: true
      return:
        type:
          - Promise<OperationStatusResponse>>
  - uid: azure-arm-compute.VirtualMachineScaleSets.start_1
    name: start
    children: []
    type: method
    langs:
      - typeScript
    summary: Starts one or more virtual machines in a VM scale set.
    syntax:
      content: >-
        function start(resourceGroupName: string, vmScaleSetName: string,
        callback: ServiceCallback<OperationStatusResponse>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<@azure-arm-compute.OperationStatusResponse>
          description: ''
      return:
        type:
          - Promise<@azure-arm-compute.OperationStatusResponse>
  - uid: azure-arm-compute.VirtualMachineScaleSets.start_2
    name: start
    children: []
    type: method
    langs:
      - typeScript
    summary: Starts one or more virtual machines in a VM scale set.
    syntax:
      content: >-
        function start(resourceGroupName: string, vmScaleSetName: string,
        options: function, callback: ServiceCallback<OperationStatusResponse>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: options
          type:
            - function
          description: ''
        - id: callback
          type:
            - ServiceCallback<@azure-arm-compute.OperationStatusResponse>
          description: ''
      return:
        type:
          - Promise<@azure-arm-compute.OperationStatusResponse>
  - uid: azure-arm-compute.VirtualMachineScaleSets.start
    name: start
    children: []
    type: method
    langs:
      - typeScript
    summary: Starts one or more virtual machines in a VM scale set.
    syntax:
      content: >-
        function start(resourceGroupName: string, vmScaleSetName: string,
        options?: function)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: options
          type:
            - function
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure-arm-compute.OperationStatusResponse>
  - uid: azure-arm-compute.VirtualMachineScaleSets.startWithHttpOperationResponse
    name: startWithHttpOperationResponse
    children: []
    type: method
    langs:
      - typeScript
    summary: Starts one or more virtual machines in a VM scale set.
    syntax:
      content: >-
        function startWithHttpOperationResponse(resourceGroupName: string,
        vmScaleSetName: string, options?: function)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: options
          type:
            - function
          description: ''
          optional: true
      return:
        type:
          - Promise<OperationStatusResponse>>
  - uid: azure-arm-compute.VirtualMachineScaleSets.update
    name: update
    children: []
    type: method
    langs:
      - typeScript
    summary: Update a VM scale set.
    syntax:
      content: >-
        function update(resourceGroupName: string, vmScaleSetName: string,
        parameters: VirtualMachineScaleSetUpdate, options?: function)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set to create or
            update.
        - id: parameters
          type:
            - '@azure-arm-compute.VirtualMachineScaleSetUpdate'
          description: |
            The scale set object.
        - id: options
          type:
            - function
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure-arm-compute.VirtualMachineScaleSet>
  - uid: azure-arm-compute.VirtualMachineScaleSets.update_1
    name: update
    children: []
    type: method
    langs:
      - typeScript
    summary: Update a VM scale set.
    syntax:
      content: >-
        function update(resourceGroupName: string, vmScaleSetName: string,
        parameters: VirtualMachineScaleSetUpdate, callback:
        ServiceCallback<VirtualMachineScaleSet>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - '@azure-arm-compute.VirtualMachineScaleSetUpdate'
          description: ''
        - id: callback
          type:
            - ServiceCallback<@azure-arm-compute.VirtualMachineScaleSet>
          description: ''
      return:
        type:
          - Promise<@azure-arm-compute.VirtualMachineScaleSet>
  - uid: azure-arm-compute.VirtualMachineScaleSets.update_2
    name: update
    children: []
    type: method
    langs:
      - typeScript
    summary: Update a VM scale set.
    syntax:
      content: >-
        function update(resourceGroupName: string, vmScaleSetName: string,
        parameters: VirtualMachineScaleSetUpdate, options: function, callback:
        ServiceCallback<VirtualMachineScaleSet>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - '@azure-arm-compute.VirtualMachineScaleSetUpdate'
          description: ''
        - id: options
          type:
            - function
          description: ''
        - id: callback
          type:
            - ServiceCallback<@azure-arm-compute.VirtualMachineScaleSet>
          description: ''
      return:
        type:
          - Promise<@azure-arm-compute.VirtualMachineScaleSet>
  - uid: azure-arm-compute.VirtualMachineScaleSets.updateInstances
    name: updateInstances
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Upgrades one or more virtual machines to the latest SKU set in the VM
      scale

      set model.
    syntax:
      content: >-
        function updateInstances(resourceGroupName: string, vmScaleSetName:
        string, instanceIds: string[], options?: function)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: instanceIds
          type:
            - 'string[]'
          description: |
            The virtual machine scale set instance ids.
        - id: options
          type:
            - function
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure-arm-compute.OperationStatusResponse>
  - uid: azure-arm-compute.VirtualMachineScaleSets.updateInstances_1
    name: updateInstances
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Upgrades one or more virtual machines to the latest SKU set in the VM
      scale

      set model.
    syntax:
      content: >-
        function updateInstances(resourceGroupName: string, vmScaleSetName:
        string, instanceIds: string[], callback:
        ServiceCallback<OperationStatusResponse>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: instanceIds
          type:
            - 'string[]'
          description: ''
        - id: callback
          type:
            - ServiceCallback<@azure-arm-compute.OperationStatusResponse>
          description: ''
      return:
        type:
          - Promise<@azure-arm-compute.OperationStatusResponse>
  - uid: azure-arm-compute.VirtualMachineScaleSets.updateInstances_2
    name: updateInstances
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Upgrades one or more virtual machines to the latest SKU set in the VM
      scale

      set model.
    syntax:
      content: >-
        function updateInstances(resourceGroupName: string, vmScaleSetName:
        string, instanceIds: string[], options: function, callback:
        ServiceCallback<OperationStatusResponse>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: instanceIds
          type:
            - 'string[]'
          description: ''
        - id: options
          type:
            - function
          description: ''
        - id: callback
          type:
            - ServiceCallback<@azure-arm-compute.OperationStatusResponse>
          description: ''
      return:
        type:
          - Promise<@azure-arm-compute.OperationStatusResponse>
  - uid: >-
      azure-arm-compute.VirtualMachineScaleSets.updateInstancesWithHttpOperationResponse
    name: updateInstancesWithHttpOperationResponse
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Upgrades one or more virtual machines to the latest SKU set in the VM
      scale

      set model.
    syntax:
      content: >-
        function updateInstancesWithHttpOperationResponse(resourceGroupName:
        string, vmScaleSetName: string, instanceIds: string[], options?:
        function)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: instanceIds
          type:
            - 'string[]'
          description: |
            The virtual machine scale set instance ids.
        - id: options
          type:
            - function
          description: ''
          optional: true
      return:
        type:
          - Promise<OperationStatusResponse>>
  - uid: azure-arm-compute.VirtualMachineScaleSets.updateWithHttpOperationResponse
    name: updateWithHttpOperationResponse
    children: []
    type: method
    langs:
      - typeScript
    summary: Update a VM scale set.
    syntax:
      content: >-
        function updateWithHttpOperationResponse(resourceGroupName: string,
        vmScaleSetName: string, parameters: VirtualMachineScaleSetUpdate,
        options?: function)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set to create or
            update.
        - id: parameters
          type:
            - '@azure-arm-compute.VirtualMachineScaleSetUpdate'
          description: |
            The scale set object.
        - id: options
          type:
            - function
          description: ''
          optional: true
      return:
        type:
          - Promise<VirtualMachineScaleSet>>
