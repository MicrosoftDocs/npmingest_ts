### YamlMime:UniversalReference
items:
  - uid: azure-arm-compute - v10.0.0.VirtualMachines
    name: VirtualMachines
    fullName: VirtualMachines
    children:
      - azure-arm-compute - v10.0.0.VirtualMachines.beginCapture
      - azure-arm-compute - v10.0.0.VirtualMachines.beginCapture_2
      - azure-arm-compute - v10.0.0.VirtualMachines.beginCapture_1
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachines.beginCaptureWithHttpOperationResponse
      - azure-arm-compute - v10.0.0.VirtualMachines.beginConvertToManagedDisks
      - azure-arm-compute - v10.0.0.VirtualMachines.beginConvertToManagedDisks_2
      - azure-arm-compute - v10.0.0.VirtualMachines.beginConvertToManagedDisks_1
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachines.beginConvertToManagedDisksWithHttpOperationResponse
      - azure-arm-compute - v10.0.0.VirtualMachines.beginCreateOrUpdate
      - azure-arm-compute - v10.0.0.VirtualMachines.beginCreateOrUpdate_2
      - azure-arm-compute - v10.0.0.VirtualMachines.beginCreateOrUpdate_1
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachines.beginCreateOrUpdateWithHttpOperationResponse
      - azure-arm-compute - v10.0.0.VirtualMachines.beginDeallocate
      - azure-arm-compute - v10.0.0.VirtualMachines.beginDeallocate_2
      - azure-arm-compute - v10.0.0.VirtualMachines.beginDeallocate_1
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachines.beginDeallocateWithHttpOperationResponse
      - azure-arm-compute - v10.0.0.VirtualMachines.beginDeleteMethod
      - azure-arm-compute - v10.0.0.VirtualMachines.beginDeleteMethod_2
      - azure-arm-compute - v10.0.0.VirtualMachines.beginDeleteMethod_1
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachines.beginDeleteMethodWithHttpOperationResponse
      - azure-arm-compute - v10.0.0.VirtualMachines.beginPerformMaintenance
      - azure-arm-compute - v10.0.0.VirtualMachines.beginPerformMaintenance_2
      - azure-arm-compute - v10.0.0.VirtualMachines.beginPerformMaintenance_1
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachines.beginPerformMaintenanceWithHttpOperationResponse
      - azure-arm-compute - v10.0.0.VirtualMachines.beginPowerOff
      - azure-arm-compute - v10.0.0.VirtualMachines.beginPowerOff_2
      - azure-arm-compute - v10.0.0.VirtualMachines.beginPowerOff_1
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachines.beginPowerOffWithHttpOperationResponse
      - azure-arm-compute - v10.0.0.VirtualMachines.beginRedeploy
      - azure-arm-compute - v10.0.0.VirtualMachines.beginRedeploy_2
      - azure-arm-compute - v10.0.0.VirtualMachines.beginRedeploy_1
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachines.beginRedeployWithHttpOperationResponse
      - azure-arm-compute - v10.0.0.VirtualMachines.beginReimage
      - azure-arm-compute - v10.0.0.VirtualMachines.beginReimage_2
      - azure-arm-compute - v10.0.0.VirtualMachines.beginReimage_1
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachines.beginReimageWithHttpOperationResponse
      - azure-arm-compute - v10.0.0.VirtualMachines.beginRestart
      - azure-arm-compute - v10.0.0.VirtualMachines.beginRestart_2
      - azure-arm-compute - v10.0.0.VirtualMachines.beginRestart_1
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachines.beginRestartWithHttpOperationResponse
      - azure-arm-compute - v10.0.0.VirtualMachines.beginRunCommand
      - azure-arm-compute - v10.0.0.VirtualMachines.beginRunCommand_2
      - azure-arm-compute - v10.0.0.VirtualMachines.beginRunCommand_1
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachines.beginRunCommandWithHttpOperationResponse
      - azure-arm-compute - v10.0.0.VirtualMachines.beginStart
      - azure-arm-compute - v10.0.0.VirtualMachines.beginStart_2
      - azure-arm-compute - v10.0.0.VirtualMachines.beginStart_1
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachines.beginStartWithHttpOperationResponse
      - azure-arm-compute - v10.0.0.VirtualMachines.beginUpdate
      - azure-arm-compute - v10.0.0.VirtualMachines.beginUpdate_2
      - azure-arm-compute - v10.0.0.VirtualMachines.beginUpdate_1
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachines.beginUpdateWithHttpOperationResponse
      - azure-arm-compute - v10.0.0.VirtualMachines.capture
      - azure-arm-compute - v10.0.0.VirtualMachines.capture_2
      - azure-arm-compute - v10.0.0.VirtualMachines.capture_1
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachines.captureWithHttpOperationResponse
      - azure-arm-compute - v10.0.0.VirtualMachines.convertToManagedDisks
      - azure-arm-compute - v10.0.0.VirtualMachines.convertToManagedDisks_2
      - azure-arm-compute - v10.0.0.VirtualMachines.convertToManagedDisks_1
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachines.convertToManagedDisksWithHttpOperationResponse
      - azure-arm-compute - v10.0.0.VirtualMachines.createOrUpdate
      - azure-arm-compute - v10.0.0.VirtualMachines.createOrUpdate_2
      - azure-arm-compute - v10.0.0.VirtualMachines.createOrUpdate_1
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachines.createOrUpdateWithHttpOperationResponse
      - azure-arm-compute - v10.0.0.VirtualMachines.deallocate
      - azure-arm-compute - v10.0.0.VirtualMachines.deallocate_2
      - azure-arm-compute - v10.0.0.VirtualMachines.deallocate_1
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachines.deallocateWithHttpOperationResponse
      - azure-arm-compute - v10.0.0.VirtualMachines.deleteMethod
      - azure-arm-compute - v10.0.0.VirtualMachines.deleteMethod_2
      - azure-arm-compute - v10.0.0.VirtualMachines.deleteMethod_1
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachines.deleteMethodWithHttpOperationResponse
      - azure-arm-compute - v10.0.0.VirtualMachines.generalize
      - azure-arm-compute - v10.0.0.VirtualMachines.generalize_2
      - azure-arm-compute - v10.0.0.VirtualMachines.generalize_1
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachines.generalizeWithHttpOperationResponse
      - azure-arm-compute - v10.0.0.VirtualMachines.get
      - azure-arm-compute - v10.0.0.VirtualMachines.get_2
      - azure-arm-compute - v10.0.0.VirtualMachines.get_1
      - azure-arm-compute - v10.0.0.VirtualMachines.getWithHttpOperationResponse
      - azure-arm-compute - v10.0.0.VirtualMachines.instanceView
      - azure-arm-compute - v10.0.0.VirtualMachines.instanceView_2
      - azure-arm-compute - v10.0.0.VirtualMachines.instanceView_1
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachines.instanceViewWithHttpOperationResponse
      - azure-arm-compute - v10.0.0.VirtualMachines.list
      - azure-arm-compute - v10.0.0.VirtualMachines.list_2
      - azure-arm-compute - v10.0.0.VirtualMachines.list_1
      - azure-arm-compute - v10.0.0.VirtualMachines.listAll
      - azure-arm-compute - v10.0.0.VirtualMachines.listAll_2
      - azure-arm-compute - v10.0.0.VirtualMachines.listAll_1
      - azure-arm-compute - v10.0.0.VirtualMachines.listAllNext
      - azure-arm-compute - v10.0.0.VirtualMachines.listAllNext_2
      - azure-arm-compute - v10.0.0.VirtualMachines.listAllNext_1
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachines.listAllNextWithHttpOperationResponse
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachines.listAllWithHttpOperationResponse
      - azure-arm-compute - v10.0.0.VirtualMachines.listAvailableSizes
      - azure-arm-compute - v10.0.0.VirtualMachines.listAvailableSizes_2
      - azure-arm-compute - v10.0.0.VirtualMachines.listAvailableSizes_1
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachines.listAvailableSizesWithHttpOperationResponse
      - azure-arm-compute - v10.0.0.VirtualMachines.listByLocation
      - azure-arm-compute - v10.0.0.VirtualMachines.listByLocation_2
      - azure-arm-compute - v10.0.0.VirtualMachines.listByLocation_1
      - azure-arm-compute - v10.0.0.VirtualMachines.listByLocationNext
      - azure-arm-compute - v10.0.0.VirtualMachines.listByLocationNext_2
      - azure-arm-compute - v10.0.0.VirtualMachines.listByLocationNext_1
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachines.listByLocationNextWithHttpOperationResponse
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachines.listByLocationWithHttpOperationResponse
      - azure-arm-compute - v10.0.0.VirtualMachines.listNext
      - azure-arm-compute - v10.0.0.VirtualMachines.listNext_2
      - azure-arm-compute - v10.0.0.VirtualMachines.listNext_1
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachines.listNextWithHttpOperationResponse
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachines.listWithHttpOperationResponse
      - azure-arm-compute - v10.0.0.VirtualMachines.performMaintenance
      - azure-arm-compute - v10.0.0.VirtualMachines.performMaintenance_2
      - azure-arm-compute - v10.0.0.VirtualMachines.performMaintenance_1
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachines.performMaintenanceWithHttpOperationResponse
      - azure-arm-compute - v10.0.0.VirtualMachines.powerOff
      - azure-arm-compute - v10.0.0.VirtualMachines.powerOff_2
      - azure-arm-compute - v10.0.0.VirtualMachines.powerOff_1
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachines.powerOffWithHttpOperationResponse
      - azure-arm-compute - v10.0.0.VirtualMachines.redeploy
      - azure-arm-compute - v10.0.0.VirtualMachines.redeploy_2
      - azure-arm-compute - v10.0.0.VirtualMachines.redeploy_1
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachines.redeployWithHttpOperationResponse
      - azure-arm-compute - v10.0.0.VirtualMachines.reimage
      - azure-arm-compute - v10.0.0.VirtualMachines.reimage_2
      - azure-arm-compute - v10.0.0.VirtualMachines.reimage_1
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachines.reimageWithHttpOperationResponse
      - azure-arm-compute - v10.0.0.VirtualMachines.restart
      - azure-arm-compute - v10.0.0.VirtualMachines.restart_2
      - azure-arm-compute - v10.0.0.VirtualMachines.restart_1
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachines.restartWithHttpOperationResponse
      - azure-arm-compute - v10.0.0.VirtualMachines.runCommand
      - azure-arm-compute - v10.0.0.VirtualMachines.runCommand_2
      - azure-arm-compute - v10.0.0.VirtualMachines.runCommand_1
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachines.runCommandWithHttpOperationResponse
      - azure-arm-compute - v10.0.0.VirtualMachines.start
      - azure-arm-compute - v10.0.0.VirtualMachines.start_2
      - azure-arm-compute - v10.0.0.VirtualMachines.start_1
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachines.startWithHttpOperationResponse
      - azure-arm-compute - v10.0.0.VirtualMachines.update
      - azure-arm-compute - v10.0.0.VirtualMachines.update_2
      - azure-arm-compute - v10.0.0.VirtualMachines.update_1
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachines.updateWithHttpOperationResponse
    langs:
      - typeScript
    type: interface
    summary: ''
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachines.beginCapture
    name: 'beginCapture(string, string, VirtualMachineCaptureParameters, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Captures the VM by copying virtual hard disks of the VM and outputs a
      template that can be used to create similar VMs.
    syntax:
      content: >-
        function beginCapture(resourceGroupName: string, vmName: string,
        parameters: VirtualMachineCaptureParameters, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmName
          type:
            - string
          description: |
            The name of the virtual machine.
        - id: parameters
          type:
            - azure-arm-compute - v10.0.0.VirtualMachineCaptureParameters
          description: |
            Parameters supplied to the Capture Virtual
            Machine operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.VirtualMachineCaptureResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VirtualMachineCaptureResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VirtualMachineCaptureResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachineCaptureResult} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachines.beginCapture_2
    name: >-
      beginCapture(string, string, VirtualMachineCaptureParameters, Object,
      ServiceCallback<VirtualMachineCaptureResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Captures the VM by copying virtual hard disks of the VM and outputs a
      template that can be used to create similar VMs.
    syntax:
      content: >-
        function beginCapture(resourceGroupName: string, vmName: string,
        parameters: VirtualMachineCaptureParameters, options: Object, callback:
        ServiceCallback<VirtualMachineCaptureResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-compute - v10.0.0.VirtualMachineCaptureParameters
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<azure-arm-compute -
              v10.0.0.VirtualMachineCaptureResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.VirtualMachineCaptureResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VirtualMachineCaptureResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VirtualMachineCaptureResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachineCaptureResult} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachines.beginCapture_1
    name: >-
      beginCapture(string, string, VirtualMachineCaptureParameters,
      ServiceCallback<VirtualMachineCaptureResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Captures the VM by copying virtual hard disks of the VM and outputs a
      template that can be used to create similar VMs.
    syntax:
      content: >-
        function beginCapture(resourceGroupName: string, vmName: string,
        parameters: VirtualMachineCaptureParameters, callback:
        ServiceCallback<VirtualMachineCaptureResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-compute - v10.0.0.VirtualMachineCaptureParameters
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<azure-arm-compute -
              v10.0.0.VirtualMachineCaptureResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.VirtualMachineCaptureResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VirtualMachineCaptureResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VirtualMachineCaptureResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachineCaptureResult} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.VirtualMachines.beginCaptureWithHttpOperationResponse
    name: >-
      beginCaptureWithHttpOperationResponse(string, string,
      VirtualMachineCaptureParameters, Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Captures the VM by copying virtual hard disks of the VM and outputs a
      template that can be used to create similar VMs.
    syntax:
      content: >-
        function beginCaptureWithHttpOperationResponse(resourceGroupName:
        string, vmName: string, parameters: VirtualMachineCaptureParameters,
        options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmName
          type:
            - string
          description: |
            The name of the virtual machine.
        - id: parameters
          type:
            - azure-arm-compute - v10.0.0.VirtualMachineCaptureParameters
          description: |
            Parameters supplied to the Capture Virtual
            Machine operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-compute -
            v10.0.0.VirtualMachineCaptureResult>>
        description: A promise is returned
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachines.beginConvertToManagedDisks
    name: 'beginConvertToManagedDisks(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Converts virtual machine disks from blob-based to managed disks. Virtual
      machine must be stop-deallocated before invoking this operation.
    syntax:
      content: >-
        function beginConvertToManagedDisks(resourceGroupName: string, vmName:
        string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmName
          type:
            - string
          description: |
            The name of the virtual machine.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachines.beginConvertToManagedDisks_2
    name: 'beginConvertToManagedDisks(string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Converts virtual machine disks from blob-based to managed disks. Virtual
      machine must be stop-deallocated before invoking this operation.
    syntax:
      content: >-
        function beginConvertToManagedDisks(resourceGroupName: string, vmName:
        string, options: Object, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachines.beginConvertToManagedDisks_1
    name: 'beginConvertToManagedDisks(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Converts virtual machine disks from blob-based to managed disks. Virtual
      machine must be stop-deallocated before invoking this operation.
    syntax:
      content: >-
        function beginConvertToManagedDisks(resourceGroupName: string, vmName:
        string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.VirtualMachines.beginConvertToManagedDisksWithHttpOperationResponse
    name: >-
      beginConvertToManagedDisksWithHttpOperationResponse(string, string,
      Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Converts virtual machine disks from blob-based to managed disks. Virtual
      machine must be stop-deallocated before invoking this operation.
    syntax:
      content: >-
        function
        beginConvertToManagedDisksWithHttpOperationResponse(resourceGroupName:
        string, vmName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmName
          type:
            - string
          description: |
            The name of the virtual machine.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
        description: A promise is returned
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachines.beginCreateOrUpdate
    name: 'beginCreateOrUpdate(string, string, VirtualMachine, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: The operation to create or update a virtual machine.
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string, vmName: string,
        parameters: VirtualMachine, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmName
          type:
            - string
          description: |
            The name of the virtual machine.
        - id: parameters
          type:
            - azure-arm-compute - v10.0.0.VirtualMachine
          description: |
            Parameters supplied to the Create Virtual Machine
            operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.VirtualMachine>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VirtualMachine} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VirtualMachine} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachine} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachines.beginCreateOrUpdate_2
    name: >-
      beginCreateOrUpdate(string, string, VirtualMachine, Object,
      ServiceCallback<VirtualMachine>)
    children: []
    type: method
    langs:
      - typeScript
    summary: The operation to create or update a virtual machine.
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string, vmName: string,
        parameters: VirtualMachine, options: Object, callback:
        ServiceCallback<VirtualMachine>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-compute - v10.0.0.VirtualMachine
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-compute - v10.0.0.VirtualMachine>
          description: ''
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.VirtualMachine>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VirtualMachine} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VirtualMachine} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachine} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachines.beginCreateOrUpdate_1
    name: >-
      beginCreateOrUpdate(string, string, VirtualMachine,
      ServiceCallback<VirtualMachine>)
    children: []
    type: method
    langs:
      - typeScript
    summary: The operation to create or update a virtual machine.
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string, vmName: string,
        parameters: VirtualMachine, callback: ServiceCallback<VirtualMachine>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-compute - v10.0.0.VirtualMachine
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-compute - v10.0.0.VirtualMachine>
          description: ''
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.VirtualMachine>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VirtualMachine} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VirtualMachine} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachine} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.VirtualMachines.beginCreateOrUpdateWithHttpOperationResponse
    name: >-
      beginCreateOrUpdateWithHttpOperationResponse(string, string,
      VirtualMachine, Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: The operation to create or update a virtual machine.
    syntax:
      content: >-
        function beginCreateOrUpdateWithHttpOperationResponse(resourceGroupName:
        string, vmName: string, parameters: VirtualMachine, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmName
          type:
            - string
          description: |
            The name of the virtual machine.
        - id: parameters
          type:
            - azure-arm-compute - v10.0.0.VirtualMachine
          description: |
            Parameters supplied to the Create Virtual Machine
            operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-compute -
            v10.0.0.VirtualMachine>>
        description: A promise is returned
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachines.beginDeallocate
    name: 'beginDeallocate(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Shuts down the virtual machine and releases the compute resources. You are
      not billed for the compute resources that this virtual machine uses.
    syntax:
      content: >-
        function beginDeallocate(resourceGroupName: string, vmName: string,
        options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmName
          type:
            - string
          description: |
            The name of the virtual machine.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachines.beginDeallocate_2
    name: 'beginDeallocate(string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Shuts down the virtual machine and releases the compute resources. You are
      not billed for the compute resources that this virtual machine uses.
    syntax:
      content: >-
        function beginDeallocate(resourceGroupName: string, vmName: string,
        options: Object, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachines.beginDeallocate_1
    name: 'beginDeallocate(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Shuts down the virtual machine and releases the compute resources. You are
      not billed for the compute resources that this virtual machine uses.
    syntax:
      content: >-
        function beginDeallocate(resourceGroupName: string, vmName: string,
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.VirtualMachines.beginDeallocateWithHttpOperationResponse
    name: 'beginDeallocateWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Shuts down the virtual machine and releases the compute resources. You are
      not billed for the compute resources that this virtual machine uses.
    syntax:
      content: >-
        function beginDeallocateWithHttpOperationResponse(resourceGroupName:
        string, vmName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmName
          type:
            - string
          description: |
            The name of the virtual machine.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
        description: A promise is returned
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachines.beginDeleteMethod
    name: 'beginDeleteMethod(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: The operation to delete a virtual machine.
    syntax:
      content: >-
        function beginDeleteMethod(resourceGroupName: string, vmName: string,
        options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmName
          type:
            - string
          description: |
            The name of the virtual machine.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachines.beginDeleteMethod_2
    name: 'beginDeleteMethod(string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: The operation to delete a virtual machine.
    syntax:
      content: >-
        function beginDeleteMethod(resourceGroupName: string, vmName: string,
        options: Object, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachines.beginDeleteMethod_1
    name: 'beginDeleteMethod(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: The operation to delete a virtual machine.
    syntax:
      content: >-
        function beginDeleteMethod(resourceGroupName: string, vmName: string,
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.VirtualMachines.beginDeleteMethodWithHttpOperationResponse
    name: 'beginDeleteMethodWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: The operation to delete a virtual machine.
    syntax:
      content: >-
        function beginDeleteMethodWithHttpOperationResponse(resourceGroupName:
        string, vmName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmName
          type:
            - string
          description: |
            The name of the virtual machine.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
        description: A promise is returned
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachines.beginPerformMaintenance
    name: 'beginPerformMaintenance(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: The operation to perform maintenance on a virtual machine.
    syntax:
      content: >-
        function beginPerformMaintenance(resourceGroupName: string, vmName:
        string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmName
          type:
            - string
          description: |
            The name of the virtual machine.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachines.beginPerformMaintenance_2
    name: 'beginPerformMaintenance(string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: The operation to perform maintenance on a virtual machine.
    syntax:
      content: >-
        function beginPerformMaintenance(resourceGroupName: string, vmName:
        string, options: Object, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachines.beginPerformMaintenance_1
    name: 'beginPerformMaintenance(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: The operation to perform maintenance on a virtual machine.
    syntax:
      content: >-
        function beginPerformMaintenance(resourceGroupName: string, vmName:
        string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.VirtualMachines.beginPerformMaintenanceWithHttpOperationResponse
    name: 'beginPerformMaintenanceWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: The operation to perform maintenance on a virtual machine.
    syntax:
      content: >-
        function
        beginPerformMaintenanceWithHttpOperationResponse(resourceGroupName:
        string, vmName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmName
          type:
            - string
          description: |
            The name of the virtual machine.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
        description: A promise is returned
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachines.beginPowerOff
    name: 'beginPowerOff(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      The operation to power off (stop) a virtual machine. The virtual machine
      can

      be restarted with the same provisioned resources. You are still charged
      for

      this virtual machine.
    syntax:
      content: >-
        function beginPowerOff(resourceGroupName: string, vmName: string,
        options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmName
          type:
            - string
          description: |
            The name of the virtual machine.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachines.beginPowerOff_2
    name: 'beginPowerOff(string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      The operation to power off (stop) a virtual machine. The virtual machine
      can

      be restarted with the same provisioned resources. You are still charged
      for

      this virtual machine.
    syntax:
      content: >-
        function beginPowerOff(resourceGroupName: string, vmName: string,
        options: Object, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachines.beginPowerOff_1
    name: 'beginPowerOff(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      The operation to power off (stop) a virtual machine. The virtual machine
      can

      be restarted with the same provisioned resources. You are still charged
      for

      this virtual machine.
    syntax:
      content: >-
        function beginPowerOff(resourceGroupName: string, vmName: string,
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.VirtualMachines.beginPowerOffWithHttpOperationResponse
    name: 'beginPowerOffWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      The operation to power off (stop) a virtual machine. The virtual machine
      can

      be restarted with the same provisioned resources. You are still charged
      for

      this virtual machine.
    syntax:
      content: >-
        function beginPowerOffWithHttpOperationResponse(resourceGroupName:
        string, vmName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmName
          type:
            - string
          description: |
            The name of the virtual machine.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
        description: A promise is returned
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachines.beginRedeploy
    name: 'beginRedeploy(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: The operation to redeploy a virtual machine.
    syntax:
      content: >-
        function beginRedeploy(resourceGroupName: string, vmName: string,
        options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmName
          type:
            - string
          description: |
            The name of the virtual machine.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachines.beginRedeploy_2
    name: 'beginRedeploy(string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: The operation to redeploy a virtual machine.
    syntax:
      content: >-
        function beginRedeploy(resourceGroupName: string, vmName: string,
        options: Object, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachines.beginRedeploy_1
    name: 'beginRedeploy(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: The operation to redeploy a virtual machine.
    syntax:
      content: >-
        function beginRedeploy(resourceGroupName: string, vmName: string,
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.VirtualMachines.beginRedeployWithHttpOperationResponse
    name: 'beginRedeployWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: The operation to redeploy a virtual machine.
    syntax:
      content: >-
        function beginRedeployWithHttpOperationResponse(resourceGroupName:
        string, vmName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmName
          type:
            - string
          description: |
            The name of the virtual machine.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
        description: A promise is returned
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachines.beginReimage
    name: 'beginReimage(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Reimages the virtual machine which has an ephemeral OS disk back to its
      initial state.
    syntax:
      content: >-
        function beginReimage(resourceGroupName: string, vmName: string,
        options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmName
          type:
            - string
          description: |
            The name of the virtual machine.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachines.beginReimage_2
    name: 'beginReimage(string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Reimages the virtual machine which has an ephemeral OS disk back to its
      initial state.
    syntax:
      content: >-
        function beginReimage(resourceGroupName: string, vmName: string,
        options: Object, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachines.beginReimage_1
    name: 'beginReimage(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Reimages the virtual machine which has an ephemeral OS disk back to its
      initial state.
    syntax:
      content: >-
        function beginReimage(resourceGroupName: string, vmName: string,
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.VirtualMachines.beginReimageWithHttpOperationResponse
    name: 'beginReimageWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Reimages the virtual machine which has an ephemeral OS disk back to its
      initial state.
    syntax:
      content: >-
        function beginReimageWithHttpOperationResponse(resourceGroupName:
        string, vmName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmName
          type:
            - string
          description: |
            The name of the virtual machine.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
        description: A promise is returned
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachines.beginRestart
    name: 'beginRestart(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: The operation to restart a virtual machine.
    syntax:
      content: >-
        function beginRestart(resourceGroupName: string, vmName: string,
        options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmName
          type:
            - string
          description: |
            The name of the virtual machine.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachines.beginRestart_2
    name: 'beginRestart(string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: The operation to restart a virtual machine.
    syntax:
      content: >-
        function beginRestart(resourceGroupName: string, vmName: string,
        options: Object, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachines.beginRestart_1
    name: 'beginRestart(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: The operation to restart a virtual machine.
    syntax:
      content: >-
        function beginRestart(resourceGroupName: string, vmName: string,
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.VirtualMachines.beginRestartWithHttpOperationResponse
    name: 'beginRestartWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: The operation to restart a virtual machine.
    syntax:
      content: >-
        function beginRestartWithHttpOperationResponse(resourceGroupName:
        string, vmName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmName
          type:
            - string
          description: |
            The name of the virtual machine.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
        description: A promise is returned
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachines.beginRunCommand
    name: 'beginRunCommand(string, string, RunCommandInput, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Run command on the VM.
    syntax:
      content: >-
        function beginRunCommand(resourceGroupName: string, vmName: string,
        parameters: RunCommandInput, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmName
          type:
            - string
          description: |
            The name of the virtual machine.
        - id: parameters
          type:
            - azure-arm-compute - v10.0.0.RunCommandInput
          description: |
            Parameters supplied to the Run command operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.RunCommandResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {RunCommandResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {RunCommandResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link RunCommandResult} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachines.beginRunCommand_2
    name: >-
      beginRunCommand(string, string, RunCommandInput, Object,
      ServiceCallback<RunCommandResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Run command on the VM.
    syntax:
      content: >-
        function beginRunCommand(resourceGroupName: string, vmName: string,
        parameters: RunCommandInput, options: Object, callback:
        ServiceCallback<RunCommandResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-compute - v10.0.0.RunCommandInput
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-compute - v10.0.0.RunCommandResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.RunCommandResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {RunCommandResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {RunCommandResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link RunCommandResult} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachines.beginRunCommand_1
    name: >-
      beginRunCommand(string, string, RunCommandInput,
      ServiceCallback<RunCommandResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Run command on the VM.
    syntax:
      content: >-
        function beginRunCommand(resourceGroupName: string, vmName: string,
        parameters: RunCommandInput, callback:
        ServiceCallback<RunCommandResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-compute - v10.0.0.RunCommandInput
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-compute - v10.0.0.RunCommandResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.RunCommandResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {RunCommandResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {RunCommandResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link RunCommandResult} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.VirtualMachines.beginRunCommandWithHttpOperationResponse
    name: >-
      beginRunCommandWithHttpOperationResponse(string, string, RunCommandInput,
      Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: Run command on the VM.
    syntax:
      content: >-
        function beginRunCommandWithHttpOperationResponse(resourceGroupName:
        string, vmName: string, parameters: RunCommandInput, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmName
          type:
            - string
          description: |
            The name of the virtual machine.
        - id: parameters
          type:
            - azure-arm-compute - v10.0.0.RunCommandInput
          description: |
            Parameters supplied to the Run command operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-compute -
            v10.0.0.RunCommandResult>>
        description: A promise is returned
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachines.beginStart
    name: 'beginStart(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: The operation to start a virtual machine.
    syntax:
      content: >-
        function beginStart(resourceGroupName: string, vmName: string, options?:
        Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmName
          type:
            - string
          description: |
            The name of the virtual machine.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachines.beginStart_2
    name: 'beginStart(string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: The operation to start a virtual machine.
    syntax:
      content: >-
        function beginStart(resourceGroupName: string, vmName: string, options:
        Object, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachines.beginStart_1
    name: 'beginStart(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: The operation to start a virtual machine.
    syntax:
      content: >-
        function beginStart(resourceGroupName: string, vmName: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.VirtualMachines.beginStartWithHttpOperationResponse
    name: 'beginStartWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: The operation to start a virtual machine.
    syntax:
      content: >-
        function beginStartWithHttpOperationResponse(resourceGroupName: string,
        vmName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmName
          type:
            - string
          description: |
            The name of the virtual machine.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
        description: A promise is returned
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachines.beginUpdate
    name: 'beginUpdate(string, string, VirtualMachineUpdate, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: The operation to update a virtual machine.
    syntax:
      content: >-
        function beginUpdate(resourceGroupName: string, vmName: string,
        parameters: VirtualMachineUpdate, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmName
          type:
            - string
          description: |
            The name of the virtual machine.
        - id: parameters
          type:
            - azure-arm-compute - v10.0.0.VirtualMachineUpdate
          description: |
            Parameters supplied to the Update Virtual Machine
            operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.VirtualMachine>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VirtualMachine} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VirtualMachine} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachine} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachines.beginUpdate_2
    name: >-
      beginUpdate(string, string, VirtualMachineUpdate, Object,
      ServiceCallback<VirtualMachine>)
    children: []
    type: method
    langs:
      - typeScript
    summary: The operation to update a virtual machine.
    syntax:
      content: >-
        function beginUpdate(resourceGroupName: string, vmName: string,
        parameters: VirtualMachineUpdate, options: Object, callback:
        ServiceCallback<VirtualMachine>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-compute - v10.0.0.VirtualMachineUpdate
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-compute - v10.0.0.VirtualMachine>
          description: ''
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.VirtualMachine>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VirtualMachine} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VirtualMachine} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachine} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachines.beginUpdate_1
    name: >-
      beginUpdate(string, string, VirtualMachineUpdate,
      ServiceCallback<VirtualMachine>)
    children: []
    type: method
    langs:
      - typeScript
    summary: The operation to update a virtual machine.
    syntax:
      content: >-
        function beginUpdate(resourceGroupName: string, vmName: string,
        parameters: VirtualMachineUpdate, callback:
        ServiceCallback<VirtualMachine>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-compute - v10.0.0.VirtualMachineUpdate
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-compute - v10.0.0.VirtualMachine>
          description: ''
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.VirtualMachine>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VirtualMachine} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VirtualMachine} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachine} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.VirtualMachines.beginUpdateWithHttpOperationResponse
    name: >-
      beginUpdateWithHttpOperationResponse(string, string, VirtualMachineUpdate,
      Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: The operation to update a virtual machine.
    syntax:
      content: >-
        function beginUpdateWithHttpOperationResponse(resourceGroupName: string,
        vmName: string, parameters: VirtualMachineUpdate, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmName
          type:
            - string
          description: |
            The name of the virtual machine.
        - id: parameters
          type:
            - azure-arm-compute - v10.0.0.VirtualMachineUpdate
          description: |
            Parameters supplied to the Update Virtual Machine
            operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-compute -
            v10.0.0.VirtualMachine>>
        description: A promise is returned
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachines.capture
    name: 'capture(string, string, VirtualMachineCaptureParameters, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Captures the VM by copying virtual hard disks of the VM and outputs a
      template that can be used to create similar VMs.
    syntax:
      content: >-
        function capture(resourceGroupName: string, vmName: string, parameters:
        VirtualMachineCaptureParameters, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmName
          type:
            - string
          description: |
            The name of the virtual machine.
        - id: parameters
          type:
            - azure-arm-compute - v10.0.0.VirtualMachineCaptureParameters
          description: |
            Parameters supplied to the Capture Virtual
            Machine operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.VirtualMachineCaptureResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VirtualMachineCaptureResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VirtualMachineCaptureResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachineCaptureResult} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachines.capture_2
    name: >-
      capture(string, string, VirtualMachineCaptureParameters, Object,
      ServiceCallback<VirtualMachineCaptureResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Captures the VM by copying virtual hard disks of the VM and outputs a
      template that can be used to create similar VMs.
    syntax:
      content: >-
        function capture(resourceGroupName: string, vmName: string, parameters:
        VirtualMachineCaptureParameters, options: Object, callback:
        ServiceCallback<VirtualMachineCaptureResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-compute - v10.0.0.VirtualMachineCaptureParameters
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<azure-arm-compute -
              v10.0.0.VirtualMachineCaptureResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.VirtualMachineCaptureResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VirtualMachineCaptureResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VirtualMachineCaptureResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachineCaptureResult} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachines.capture_1
    name: >-
      capture(string, string, VirtualMachineCaptureParameters,
      ServiceCallback<VirtualMachineCaptureResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Captures the VM by copying virtual hard disks of the VM and outputs a
      template that can be used to create similar VMs.
    syntax:
      content: >-
        function capture(resourceGroupName: string, vmName: string, parameters:
        VirtualMachineCaptureParameters, callback:
        ServiceCallback<VirtualMachineCaptureResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-compute - v10.0.0.VirtualMachineCaptureParameters
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<azure-arm-compute -
              v10.0.0.VirtualMachineCaptureResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.VirtualMachineCaptureResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VirtualMachineCaptureResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VirtualMachineCaptureResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachineCaptureResult} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.VirtualMachines.captureWithHttpOperationResponse
    name: >-
      captureWithHttpOperationResponse(string, string,
      VirtualMachineCaptureParameters, Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Captures the VM by copying virtual hard disks of the VM and outputs a
      template that can be used to create similar VMs.
    syntax:
      content: >-
        function captureWithHttpOperationResponse(resourceGroupName: string,
        vmName: string, parameters: VirtualMachineCaptureParameters, options?:
        Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmName
          type:
            - string
          description: |
            The name of the virtual machine.
        - id: parameters
          type:
            - azure-arm-compute - v10.0.0.VirtualMachineCaptureParameters
          description: |
            Parameters supplied to the Capture Virtual
            Machine operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-compute -
            v10.0.0.VirtualMachineCaptureResult>>
        description: A promise is returned
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachines.convertToManagedDisks
    name: 'convertToManagedDisks(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Converts virtual machine disks from blob-based to managed disks. Virtual
      machine must be stop-deallocated before invoking this operation.
    syntax:
      content: >-
        function convertToManagedDisks(resourceGroupName: string, vmName:
        string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmName
          type:
            - string
          description: |
            The name of the virtual machine.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachines.convertToManagedDisks_2
    name: 'convertToManagedDisks(string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Converts virtual machine disks from blob-based to managed disks. Virtual
      machine must be stop-deallocated before invoking this operation.
    syntax:
      content: >-
        function convertToManagedDisks(resourceGroupName: string, vmName:
        string, options: Object, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachines.convertToManagedDisks_1
    name: 'convertToManagedDisks(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Converts virtual machine disks from blob-based to managed disks. Virtual
      machine must be stop-deallocated before invoking this operation.
    syntax:
      content: >-
        function convertToManagedDisks(resourceGroupName: string, vmName:
        string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.VirtualMachines.convertToManagedDisksWithHttpOperationResponse
    name: 'convertToManagedDisksWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Converts virtual machine disks from blob-based to managed disks. Virtual
      machine must be stop-deallocated before invoking this operation.
    syntax:
      content: >-
        function
        convertToManagedDisksWithHttpOperationResponse(resourceGroupName:
        string, vmName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmName
          type:
            - string
          description: |
            The name of the virtual machine.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
        description: A promise is returned
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachines.createOrUpdate
    name: 'createOrUpdate(string, string, VirtualMachine, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: The operation to create or update a virtual machine.
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, vmName: string,
        parameters: VirtualMachine, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmName
          type:
            - string
          description: |
            The name of the virtual machine.
        - id: parameters
          type:
            - azure-arm-compute - v10.0.0.VirtualMachine
          description: |
            Parameters supplied to the Create Virtual Machine
            operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.VirtualMachine>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VirtualMachine} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VirtualMachine} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachine} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachines.createOrUpdate_2
    name: >-
      createOrUpdate(string, string, VirtualMachine, Object,
      ServiceCallback<VirtualMachine>)
    children: []
    type: method
    langs:
      - typeScript
    summary: The operation to create or update a virtual machine.
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, vmName: string,
        parameters: VirtualMachine, options: Object, callback:
        ServiceCallback<VirtualMachine>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-compute - v10.0.0.VirtualMachine
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-compute - v10.0.0.VirtualMachine>
          description: ''
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.VirtualMachine>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VirtualMachine} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VirtualMachine} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachine} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachines.createOrUpdate_1
    name: >-
      createOrUpdate(string, string, VirtualMachine,
      ServiceCallback<VirtualMachine>)
    children: []
    type: method
    langs:
      - typeScript
    summary: The operation to create or update a virtual machine.
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, vmName: string,
        parameters: VirtualMachine, callback: ServiceCallback<VirtualMachine>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-compute - v10.0.0.VirtualMachine
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-compute - v10.0.0.VirtualMachine>
          description: ''
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.VirtualMachine>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VirtualMachine} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VirtualMachine} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachine} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.VirtualMachines.createOrUpdateWithHttpOperationResponse
    name: >-
      createOrUpdateWithHttpOperationResponse(string, string, VirtualMachine,
      Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: The operation to create or update a virtual machine.
    syntax:
      content: >-
        function createOrUpdateWithHttpOperationResponse(resourceGroupName:
        string, vmName: string, parameters: VirtualMachine, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmName
          type:
            - string
          description: |
            The name of the virtual machine.
        - id: parameters
          type:
            - azure-arm-compute - v10.0.0.VirtualMachine
          description: |
            Parameters supplied to the Create Virtual Machine
            operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-compute -
            v10.0.0.VirtualMachine>>
        description: A promise is returned
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachines.deallocate
    name: 'deallocate(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Shuts down the virtual machine and releases the compute resources. You are
      not billed for the compute resources that this virtual machine uses.
    syntax:
      content: >-
        function deallocate(resourceGroupName: string, vmName: string, options?:
        Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmName
          type:
            - string
          description: |
            The name of the virtual machine.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachines.deallocate_2
    name: 'deallocate(string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Shuts down the virtual machine and releases the compute resources. You are
      not billed for the compute resources that this virtual machine uses.
    syntax:
      content: >-
        function deallocate(resourceGroupName: string, vmName: string, options:
        Object, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachines.deallocate_1
    name: 'deallocate(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Shuts down the virtual machine and releases the compute resources. You are
      not billed for the compute resources that this virtual machine uses.
    syntax:
      content: >-
        function deallocate(resourceGroupName: string, vmName: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.VirtualMachines.deallocateWithHttpOperationResponse
    name: 'deallocateWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Shuts down the virtual machine and releases the compute resources. You are
      not billed for the compute resources that this virtual machine uses.
    syntax:
      content: >-
        function deallocateWithHttpOperationResponse(resourceGroupName: string,
        vmName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmName
          type:
            - string
          description: |
            The name of the virtual machine.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
        description: A promise is returned
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachines.deleteMethod
    name: 'deleteMethod(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: The operation to delete a virtual machine.
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, vmName: string,
        options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmName
          type:
            - string
          description: |
            The name of the virtual machine.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachines.deleteMethod_2
    name: 'deleteMethod(string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: The operation to delete a virtual machine.
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, vmName: string,
        options: Object, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachines.deleteMethod_1
    name: 'deleteMethod(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: The operation to delete a virtual machine.
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, vmName: string,
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.VirtualMachines.deleteMethodWithHttpOperationResponse
    name: 'deleteMethodWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: The operation to delete a virtual machine.
    syntax:
      content: >-
        function deleteMethodWithHttpOperationResponse(resourceGroupName:
        string, vmName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmName
          type:
            - string
          description: |
            The name of the virtual machine.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
        description: A promise is returned
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachines.generalize
    name: 'generalize(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Sets the state of the virtual machine to generalized.
    syntax:
      content: >-
        function generalize(resourceGroupName: string, vmName: string, options?:
        Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmName
          type:
            - string
          description: |
            The name of the virtual machine.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachines.generalize_2
    name: 'generalize(string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Sets the state of the virtual machine to generalized.
    syntax:
      content: >-
        function generalize(resourceGroupName: string, vmName: string, options:
        Object, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachines.generalize_1
    name: 'generalize(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Sets the state of the virtual machine to generalized.
    syntax:
      content: >-
        function generalize(resourceGroupName: string, vmName: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.VirtualMachines.generalizeWithHttpOperationResponse
    name: 'generalizeWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Sets the state of the virtual machine to generalized.
    syntax:
      content: >-
        function generalizeWithHttpOperationResponse(resourceGroupName: string,
        vmName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmName
          type:
            - string
          description: |
            The name of the virtual machine.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
        description: A promise is returned
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachines.get
    name: 'get(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Retrieves information about the model view or the instance view of a
      virtual

      machine.
    syntax:
      content: >-
        function get(resourceGroupName: string, vmName: string, options?:
        Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmName
          type:
            - string
          description: |
            The name of the virtual machine.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.VirtualMachine>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VirtualMachine} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VirtualMachine} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachine} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachines.get_2
    name: 'get(string, string, Object, ServiceCallback<VirtualMachine>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Retrieves information about the model view or the instance view of a
      virtual

      machine.
    syntax:
      content: >-
        function get(resourceGroupName: string, vmName: string, options: Object,
        callback: ServiceCallback<VirtualMachine>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-compute - v10.0.0.VirtualMachine>
          description: ''
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.VirtualMachine>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VirtualMachine} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VirtualMachine} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachine} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachines.get_1
    name: 'get(string, string, ServiceCallback<VirtualMachine>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Retrieves information about the model view or the instance view of a
      virtual

      machine.
    syntax:
      content: >-
        function get(resourceGroupName: string, vmName: string, callback:
        ServiceCallback<VirtualMachine>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-compute - v10.0.0.VirtualMachine>
          description: ''
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.VirtualMachine>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VirtualMachine} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VirtualMachine} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachine} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachines.getWithHttpOperationResponse
    name: 'getWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Retrieves information about the model view or the instance view of a
      virtual

      machine.
    syntax:
      content: >-
        function getWithHttpOperationResponse(resourceGroupName: string, vmName:
        string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmName
          type:
            - string
          description: |
            The name of the virtual machine.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-compute -
            v10.0.0.VirtualMachine>>
        description: A promise is returned
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachines.instanceView
    name: 'instanceView(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Retrieves information about the run-time state of a virtual machine.
    syntax:
      content: >-
        function instanceView(resourceGroupName: string, vmName: string,
        options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmName
          type:
            - string
          description: |
            The name of the virtual machine.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.VirtualMachineInstanceView>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VirtualMachineInstanceView} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VirtualMachineInstanceView} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachineInstanceView} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachines.instanceView_2
    name: >-
      instanceView(string, string, Object,
      ServiceCallback<VirtualMachineInstanceView>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Retrieves information about the run-time state of a virtual machine.
    syntax:
      content: >-
        function instanceView(resourceGroupName: string, vmName: string,
        options: Object, callback: ServiceCallback<VirtualMachineInstanceView>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<azure-arm-compute -
              v10.0.0.VirtualMachineInstanceView>
          description: ''
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.VirtualMachineInstanceView>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VirtualMachineInstanceView} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VirtualMachineInstanceView} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachineInstanceView} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachines.instanceView_1
    name: 'instanceView(string, string, ServiceCallback<VirtualMachineInstanceView>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Retrieves information about the run-time state of a virtual machine.
    syntax:
      content: >-
        function instanceView(resourceGroupName: string, vmName: string,
        callback: ServiceCallback<VirtualMachineInstanceView>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmName
          type:
            - string
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<azure-arm-compute -
              v10.0.0.VirtualMachineInstanceView>
          description: ''
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.VirtualMachineInstanceView>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VirtualMachineInstanceView} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VirtualMachineInstanceView} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachineInstanceView} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.VirtualMachines.instanceViewWithHttpOperationResponse
    name: 'instanceViewWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Retrieves information about the run-time state of a virtual machine.
    syntax:
      content: >-
        function instanceViewWithHttpOperationResponse(resourceGroupName:
        string, vmName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmName
          type:
            - string
          description: |
            The name of the virtual machine.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-compute -
            v10.0.0.VirtualMachineInstanceView>>
        description: A promise is returned
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachines.list
    name: 'list(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Lists all of the virtual machines in the specified resource group. Use the

      nextLink property in the response to get the next page of virtual
      machines.
    syntax:
      content: 'function list(resourceGroupName: string, options?: Object)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.VirtualMachineListResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VirtualMachineListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VirtualMachineListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachineListResult} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachines.list_2
    name: 'list(string, Object, ServiceCallback<VirtualMachineListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Lists all of the virtual machines in the specified resource group. Use the

      nextLink property in the response to get the next page of virtual
      machines.
    syntax:
      content: >-
        function list(resourceGroupName: string, options: Object, callback:
        ServiceCallback<VirtualMachineListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<azure-arm-compute -
              v10.0.0.VirtualMachineListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.VirtualMachineListResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VirtualMachineListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VirtualMachineListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachineListResult} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachines.list_1
    name: 'list(string, ServiceCallback<VirtualMachineListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Lists all of the virtual machines in the specified resource group. Use the

      nextLink property in the response to get the next page of virtual
      machines.
    syntax:
      content: >-
        function list(resourceGroupName: string, callback:
        ServiceCallback<VirtualMachineListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<azure-arm-compute -
              v10.0.0.VirtualMachineListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.VirtualMachineListResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VirtualMachineListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VirtualMachineListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachineListResult} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachines.listAll
    name: listAll(Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Lists all of the virtual machines in the specified subscription. Use the

      nextLink property in the response to get the next page of virtual
      machines.
    syntax:
      content: 'function listAll(options?: Object)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.VirtualMachineListResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VirtualMachineListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VirtualMachineListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachineListResult} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachines.listAll_2
    name: 'listAll(Object, ServiceCallback<VirtualMachineListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Lists all of the virtual machines in the specified subscription. Use the

      nextLink property in the response to get the next page of virtual
      machines.
    syntax:
      content: >-
        function listAll(options: Object, callback:
        ServiceCallback<VirtualMachineListResult>)
      parameters:
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<azure-arm-compute -
              v10.0.0.VirtualMachineListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.VirtualMachineListResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VirtualMachineListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VirtualMachineListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachineListResult} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachines.listAll_1
    name: listAll(ServiceCallback<VirtualMachineListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Lists all of the virtual machines in the specified subscription. Use the

      nextLink property in the response to get the next page of virtual
      machines.
    syntax:
      content: 'function listAll(callback: ServiceCallback<VirtualMachineListResult>)'
      parameters:
        - id: callback
          type:
            - >-
              ServiceCallback<azure-arm-compute -
              v10.0.0.VirtualMachineListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.VirtualMachineListResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VirtualMachineListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VirtualMachineListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachineListResult} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachines.listAllNext
    name: 'listAllNext(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Lists all of the virtual machines in the specified subscription. Use the

      nextLink property in the response to get the next page of virtual
      machines.
    syntax:
      content: 'function listAllNext(nextPageLink: string, options?: Object)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.VirtualMachineListResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VirtualMachineListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VirtualMachineListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachineListResult} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachines.listAllNext_2
    name: 'listAllNext(string, Object, ServiceCallback<VirtualMachineListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Lists all of the virtual machines in the specified subscription. Use the

      nextLink property in the response to get the next page of virtual
      machines.
    syntax:
      content: >-
        function listAllNext(nextPageLink: string, options: Object, callback:
        ServiceCallback<VirtualMachineListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<azure-arm-compute -
              v10.0.0.VirtualMachineListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.VirtualMachineListResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VirtualMachineListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VirtualMachineListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachineListResult} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachines.listAllNext_1
    name: 'listAllNext(string, ServiceCallback<VirtualMachineListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Lists all of the virtual machines in the specified subscription. Use the

      nextLink property in the response to get the next page of virtual
      machines.
    syntax:
      content: >-
        function listAllNext(nextPageLink: string, callback:
        ServiceCallback<VirtualMachineListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<azure-arm-compute -
              v10.0.0.VirtualMachineListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.VirtualMachineListResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VirtualMachineListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VirtualMachineListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachineListResult} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.VirtualMachines.listAllNextWithHttpOperationResponse
    name: 'listAllNextWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Lists all of the virtual machines in the specified subscription. Use the

      nextLink property in the response to get the next page of virtual
      machines.
    syntax:
      content: >-
        function listAllNextWithHttpOperationResponse(nextPageLink: string,
        options?: Object)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-compute -
            v10.0.0.VirtualMachineListResult>>
        description: A promise is returned
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.VirtualMachines.listAllWithHttpOperationResponse
    name: listAllWithHttpOperationResponse(Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Lists all of the virtual machines in the specified subscription. Use the

      nextLink property in the response to get the next page of virtual
      machines.
    syntax:
      content: 'function listAllWithHttpOperationResponse(options?: Object)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-compute -
            v10.0.0.VirtualMachineListResult>>
        description: A promise is returned
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachines.listAvailableSizes
    name: 'listAvailableSizes(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Lists all available virtual machine sizes to which the specified virtual
      machine can be resized.
    syntax:
      content: >-
        function listAvailableSizes(resourceGroupName: string, vmName: string,
        options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmName
          type:
            - string
          description: |
            The name of the virtual machine.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.VirtualMachineSizeListResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VirtualMachineSizeListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VirtualMachineSizeListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachineSizeListResult} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachines.listAvailableSizes_2
    name: >-
      listAvailableSizes(string, string, Object,
      ServiceCallback<VirtualMachineSizeListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Lists all available virtual machine sizes to which the specified virtual
      machine can be resized.
    syntax:
      content: >-
        function listAvailableSizes(resourceGroupName: string, vmName: string,
        options: Object, callback:
        ServiceCallback<VirtualMachineSizeListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<azure-arm-compute -
              v10.0.0.VirtualMachineSizeListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.VirtualMachineSizeListResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VirtualMachineSizeListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VirtualMachineSizeListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachineSizeListResult} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachines.listAvailableSizes_1
    name: >-
      listAvailableSizes(string, string,
      ServiceCallback<VirtualMachineSizeListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Lists all available virtual machine sizes to which the specified virtual
      machine can be resized.
    syntax:
      content: >-
        function listAvailableSizes(resourceGroupName: string, vmName: string,
        callback: ServiceCallback<VirtualMachineSizeListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmName
          type:
            - string
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<azure-arm-compute -
              v10.0.0.VirtualMachineSizeListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.VirtualMachineSizeListResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VirtualMachineSizeListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VirtualMachineSizeListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachineSizeListResult} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.VirtualMachines.listAvailableSizesWithHttpOperationResponse
    name: 'listAvailableSizesWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Lists all available virtual machine sizes to which the specified virtual
      machine can be resized.
    syntax:
      content: >-
        function listAvailableSizesWithHttpOperationResponse(resourceGroupName:
        string, vmName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmName
          type:
            - string
          description: |
            The name of the virtual machine.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-compute -
            v10.0.0.VirtualMachineSizeListResult>>
        description: A promise is returned
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachines.listByLocation
    name: 'listByLocation(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Gets all the virtual machines under the specified subscription for the
      specified location.
    syntax:
      content: 'function listByLocation(location: string, options?: Object)'
      parameters:
        - id: location
          type:
            - string
          description: |
            The location for which virtual machines under the
            subscription are queried.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.VirtualMachineListResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VirtualMachineListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VirtualMachineListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachineListResult} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachines.listByLocation_2
    name: 'listByLocation(string, Object, ServiceCallback<VirtualMachineListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Gets all the virtual machines under the specified subscription for the
      specified location.
    syntax:
      content: >-
        function listByLocation(location: string, options: Object, callback:
        ServiceCallback<VirtualMachineListResult>)
      parameters:
        - id: location
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<azure-arm-compute -
              v10.0.0.VirtualMachineListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.VirtualMachineListResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VirtualMachineListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VirtualMachineListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachineListResult} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachines.listByLocation_1
    name: 'listByLocation(string, ServiceCallback<VirtualMachineListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Gets all the virtual machines under the specified subscription for the
      specified location.
    syntax:
      content: >-
        function listByLocation(location: string, callback:
        ServiceCallback<VirtualMachineListResult>)
      parameters:
        - id: location
          type:
            - string
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<azure-arm-compute -
              v10.0.0.VirtualMachineListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.VirtualMachineListResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VirtualMachineListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VirtualMachineListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachineListResult} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachines.listByLocationNext
    name: 'listByLocationNext(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Gets all the virtual machines under the specified subscription for the
      specified location.
    syntax:
      content: 'function listByLocationNext(nextPageLink: string, options?: Object)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.VirtualMachineListResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VirtualMachineListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VirtualMachineListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachineListResult} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachines.listByLocationNext_2
    name: >-
      listByLocationNext(string, Object,
      ServiceCallback<VirtualMachineListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Gets all the virtual machines under the specified subscription for the
      specified location.
    syntax:
      content: >-
        function listByLocationNext(nextPageLink: string, options: Object,
        callback: ServiceCallback<VirtualMachineListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<azure-arm-compute -
              v10.0.0.VirtualMachineListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.VirtualMachineListResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VirtualMachineListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VirtualMachineListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachineListResult} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachines.listByLocationNext_1
    name: 'listByLocationNext(string, ServiceCallback<VirtualMachineListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Gets all the virtual machines under the specified subscription for the
      specified location.
    syntax:
      content: >-
        function listByLocationNext(nextPageLink: string, callback:
        ServiceCallback<VirtualMachineListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<azure-arm-compute -
              v10.0.0.VirtualMachineListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.VirtualMachineListResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VirtualMachineListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VirtualMachineListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachineListResult} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.VirtualMachines.listByLocationNextWithHttpOperationResponse
    name: 'listByLocationNextWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Gets all the virtual machines under the specified subscription for the
      specified location.
    syntax:
      content: >-
        function listByLocationNextWithHttpOperationResponse(nextPageLink:
        string, options?: Object)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-compute -
            v10.0.0.VirtualMachineListResult>>
        description: A promise is returned
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.VirtualMachines.listByLocationWithHttpOperationResponse
    name: 'listByLocationWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Gets all the virtual machines under the specified subscription for the
      specified location.
    syntax:
      content: >-
        function listByLocationWithHttpOperationResponse(location: string,
        options?: Object)
      parameters:
        - id: location
          type:
            - string
          description: |
            The location for which virtual machines under the
            subscription are queried.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-compute -
            v10.0.0.VirtualMachineListResult>>
        description: A promise is returned
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachines.listNext
    name: 'listNext(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Lists all of the virtual machines in the specified resource group. Use the

      nextLink property in the response to get the next page of virtual
      machines.
    syntax:
      content: 'function listNext(nextPageLink: string, options?: Object)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.VirtualMachineListResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VirtualMachineListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VirtualMachineListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachineListResult} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachines.listNext_2
    name: 'listNext(string, Object, ServiceCallback<VirtualMachineListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Lists all of the virtual machines in the specified resource group. Use the

      nextLink property in the response to get the next page of virtual
      machines.
    syntax:
      content: >-
        function listNext(nextPageLink: string, options: Object, callback:
        ServiceCallback<VirtualMachineListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<azure-arm-compute -
              v10.0.0.VirtualMachineListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.VirtualMachineListResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VirtualMachineListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VirtualMachineListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachineListResult} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachines.listNext_1
    name: 'listNext(string, ServiceCallback<VirtualMachineListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Lists all of the virtual machines in the specified resource group. Use the

      nextLink property in the response to get the next page of virtual
      machines.
    syntax:
      content: >-
        function listNext(nextPageLink: string, callback:
        ServiceCallback<VirtualMachineListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<azure-arm-compute -
              v10.0.0.VirtualMachineListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.VirtualMachineListResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VirtualMachineListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VirtualMachineListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachineListResult} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.VirtualMachines.listNextWithHttpOperationResponse
    name: 'listNextWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Lists all of the virtual machines in the specified resource group. Use the

      nextLink property in the response to get the next page of virtual
      machines.
    syntax:
      content: >-
        function listNextWithHttpOperationResponse(nextPageLink: string,
        options?: Object)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-compute -
            v10.0.0.VirtualMachineListResult>>
        description: A promise is returned
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachines.listWithHttpOperationResponse
    name: 'listWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Lists all of the virtual machines in the specified resource group. Use the

      nextLink property in the response to get the next page of virtual
      machines.
    syntax:
      content: >-
        function listWithHttpOperationResponse(resourceGroupName: string,
        options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-compute -
            v10.0.0.VirtualMachineListResult>>
        description: A promise is returned
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachines.performMaintenance
    name: 'performMaintenance(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: The operation to perform maintenance on a virtual machine.
    syntax:
      content: >-
        function performMaintenance(resourceGroupName: string, vmName: string,
        options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmName
          type:
            - string
          description: |
            The name of the virtual machine.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachines.performMaintenance_2
    name: 'performMaintenance(string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: The operation to perform maintenance on a virtual machine.
    syntax:
      content: >-
        function performMaintenance(resourceGroupName: string, vmName: string,
        options: Object, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachines.performMaintenance_1
    name: 'performMaintenance(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: The operation to perform maintenance on a virtual machine.
    syntax:
      content: >-
        function performMaintenance(resourceGroupName: string, vmName: string,
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.VirtualMachines.performMaintenanceWithHttpOperationResponse
    name: 'performMaintenanceWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: The operation to perform maintenance on a virtual machine.
    syntax:
      content: >-
        function performMaintenanceWithHttpOperationResponse(resourceGroupName:
        string, vmName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmName
          type:
            - string
          description: |
            The name of the virtual machine.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
        description: A promise is returned
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachines.powerOff
    name: 'powerOff(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      The operation to power off (stop) a virtual machine. The virtual machine
      can

      be restarted with the same provisioned resources. You are still charged
      for

      this virtual machine.
    syntax:
      content: >-
        function powerOff(resourceGroupName: string, vmName: string, options?:
        Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmName
          type:
            - string
          description: |
            The name of the virtual machine.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachines.powerOff_2
    name: 'powerOff(string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      The operation to power off (stop) a virtual machine. The virtual machine
      can

      be restarted with the same provisioned resources. You are still charged
      for

      this virtual machine.
    syntax:
      content: >-
        function powerOff(resourceGroupName: string, vmName: string, options:
        Object, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachines.powerOff_1
    name: 'powerOff(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      The operation to power off (stop) a virtual machine. The virtual machine
      can

      be restarted with the same provisioned resources. You are still charged
      for

      this virtual machine.
    syntax:
      content: >-
        function powerOff(resourceGroupName: string, vmName: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.VirtualMachines.powerOffWithHttpOperationResponse
    name: 'powerOffWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      The operation to power off (stop) a virtual machine. The virtual machine
      can

      be restarted with the same provisioned resources. You are still charged
      for

      this virtual machine.
    syntax:
      content: >-
        function powerOffWithHttpOperationResponse(resourceGroupName: string,
        vmName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmName
          type:
            - string
          description: |
            The name of the virtual machine.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
        description: A promise is returned
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachines.redeploy
    name: 'redeploy(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: The operation to redeploy a virtual machine.
    syntax:
      content: >-
        function redeploy(resourceGroupName: string, vmName: string, options?:
        Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmName
          type:
            - string
          description: |
            The name of the virtual machine.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachines.redeploy_2
    name: 'redeploy(string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: The operation to redeploy a virtual machine.
    syntax:
      content: >-
        function redeploy(resourceGroupName: string, vmName: string, options:
        Object, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachines.redeploy_1
    name: 'redeploy(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: The operation to redeploy a virtual machine.
    syntax:
      content: >-
        function redeploy(resourceGroupName: string, vmName: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.VirtualMachines.redeployWithHttpOperationResponse
    name: 'redeployWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: The operation to redeploy a virtual machine.
    syntax:
      content: >-
        function redeployWithHttpOperationResponse(resourceGroupName: string,
        vmName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmName
          type:
            - string
          description: |
            The name of the virtual machine.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
        description: A promise is returned
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachines.reimage
    name: 'reimage(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Reimages the virtual machine which has an ephemeral OS disk back to its
      initial state.
    syntax:
      content: >-
        function reimage(resourceGroupName: string, vmName: string, options?:
        Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmName
          type:
            - string
          description: |
            The name of the virtual machine.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachines.reimage_2
    name: 'reimage(string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Reimages the virtual machine which has an ephemeral OS disk back to its
      initial state.
    syntax:
      content: >-
        function reimage(resourceGroupName: string, vmName: string, options:
        Object, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachines.reimage_1
    name: 'reimage(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Reimages the virtual machine which has an ephemeral OS disk back to its
      initial state.
    syntax:
      content: >-
        function reimage(resourceGroupName: string, vmName: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.VirtualMachines.reimageWithHttpOperationResponse
    name: 'reimageWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Reimages the virtual machine which has an ephemeral OS disk back to its
      initial state.
    syntax:
      content: >-
        function reimageWithHttpOperationResponse(resourceGroupName: string,
        vmName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmName
          type:
            - string
          description: |
            The name of the virtual machine.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
        description: A promise is returned
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachines.restart
    name: 'restart(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: The operation to restart a virtual machine.
    syntax:
      content: >-
        function restart(resourceGroupName: string, vmName: string, options?:
        Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmName
          type:
            - string
          description: |
            The name of the virtual machine.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachines.restart_2
    name: 'restart(string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: The operation to restart a virtual machine.
    syntax:
      content: >-
        function restart(resourceGroupName: string, vmName: string, options:
        Object, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachines.restart_1
    name: 'restart(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: The operation to restart a virtual machine.
    syntax:
      content: >-
        function restart(resourceGroupName: string, vmName: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.VirtualMachines.restartWithHttpOperationResponse
    name: 'restartWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: The operation to restart a virtual machine.
    syntax:
      content: >-
        function restartWithHttpOperationResponse(resourceGroupName: string,
        vmName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmName
          type:
            - string
          description: |
            The name of the virtual machine.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
        description: A promise is returned
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachines.runCommand
    name: 'runCommand(string, string, RunCommandInput, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Run command on the VM.
    syntax:
      content: >-
        function runCommand(resourceGroupName: string, vmName: string,
        parameters: RunCommandInput, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmName
          type:
            - string
          description: |
            The name of the virtual machine.
        - id: parameters
          type:
            - azure-arm-compute - v10.0.0.RunCommandInput
          description: |
            Parameters supplied to the Run command operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.RunCommandResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {RunCommandResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {RunCommandResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link RunCommandResult} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachines.runCommand_2
    name: >-
      runCommand(string, string, RunCommandInput, Object,
      ServiceCallback<RunCommandResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Run command on the VM.
    syntax:
      content: >-
        function runCommand(resourceGroupName: string, vmName: string,
        parameters: RunCommandInput, options: Object, callback:
        ServiceCallback<RunCommandResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-compute - v10.0.0.RunCommandInput
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-compute - v10.0.0.RunCommandResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.RunCommandResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {RunCommandResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {RunCommandResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link RunCommandResult} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachines.runCommand_1
    name: >-
      runCommand(string, string, RunCommandInput,
      ServiceCallback<RunCommandResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Run command on the VM.
    syntax:
      content: >-
        function runCommand(resourceGroupName: string, vmName: string,
        parameters: RunCommandInput, callback:
        ServiceCallback<RunCommandResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-compute - v10.0.0.RunCommandInput
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-compute - v10.0.0.RunCommandResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.RunCommandResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {RunCommandResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {RunCommandResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link RunCommandResult} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.VirtualMachines.runCommandWithHttpOperationResponse
    name: >-
      runCommandWithHttpOperationResponse(string, string, RunCommandInput,
      Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: Run command on the VM.
    syntax:
      content: >-
        function runCommandWithHttpOperationResponse(resourceGroupName: string,
        vmName: string, parameters: RunCommandInput, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmName
          type:
            - string
          description: |
            The name of the virtual machine.
        - id: parameters
          type:
            - azure-arm-compute - v10.0.0.RunCommandInput
          description: |
            Parameters supplied to the Run command operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-compute -
            v10.0.0.RunCommandResult>>
        description: A promise is returned
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachines.start
    name: 'start(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: The operation to start a virtual machine.
    syntax:
      content: >-
        function start(resourceGroupName: string, vmName: string, options?:
        Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmName
          type:
            - string
          description: |
            The name of the virtual machine.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachines.start_2
    name: 'start(string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: The operation to start a virtual machine.
    syntax:
      content: >-
        function start(resourceGroupName: string, vmName: string, options:
        Object, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachines.start_1
    name: 'start(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: The operation to start a virtual machine.
    syntax:
      content: >-
        function start(resourceGroupName: string, vmName: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachines.startWithHttpOperationResponse
    name: 'startWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: The operation to start a virtual machine.
    syntax:
      content: >-
        function startWithHttpOperationResponse(resourceGroupName: string,
        vmName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmName
          type:
            - string
          description: |
            The name of the virtual machine.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
        description: A promise is returned
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachines.update
    name: 'update(string, string, VirtualMachineUpdate, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: The operation to update a virtual machine.
    syntax:
      content: >-
        function update(resourceGroupName: string, vmName: string, parameters:
        VirtualMachineUpdate, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmName
          type:
            - string
          description: |
            The name of the virtual machine.
        - id: parameters
          type:
            - azure-arm-compute - v10.0.0.VirtualMachineUpdate
          description: |
            Parameters supplied to the Update Virtual Machine
            operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.VirtualMachine>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VirtualMachine} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VirtualMachine} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachine} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachines.update_2
    name: >-
      update(string, string, VirtualMachineUpdate, Object,
      ServiceCallback<VirtualMachine>)
    children: []
    type: method
    langs:
      - typeScript
    summary: The operation to update a virtual machine.
    syntax:
      content: >-
        function update(resourceGroupName: string, vmName: string, parameters:
        VirtualMachineUpdate, options: Object, callback:
        ServiceCallback<VirtualMachine>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-compute - v10.0.0.VirtualMachineUpdate
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-compute - v10.0.0.VirtualMachine>
          description: ''
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.VirtualMachine>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VirtualMachine} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VirtualMachine} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachine} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachines.update_1
    name: >-
      update(string, string, VirtualMachineUpdate,
      ServiceCallback<VirtualMachine>)
    children: []
    type: method
    langs:
      - typeScript
    summary: The operation to update a virtual machine.
    syntax:
      content: >-
        function update(resourceGroupName: string, vmName: string, parameters:
        VirtualMachineUpdate, callback: ServiceCallback<VirtualMachine>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-compute - v10.0.0.VirtualMachineUpdate
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-compute - v10.0.0.VirtualMachine>
          description: ''
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.VirtualMachine>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VirtualMachine} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VirtualMachine} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachine} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.VirtualMachines.updateWithHttpOperationResponse
    name: >-
      updateWithHttpOperationResponse(string, string, VirtualMachineUpdate,
      Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: The operation to update a virtual machine.
    syntax:
      content: >-
        function updateWithHttpOperationResponse(resourceGroupName: string,
        vmName: string, parameters: VirtualMachineUpdate, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmName
          type:
            - string
          description: |
            The name of the virtual machine.
        - id: parameters
          type:
            - azure-arm-compute - v10.0.0.VirtualMachineUpdate
          description: |
            Parameters supplied to the Update Virtual Machine
            operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-compute -
            v10.0.0.VirtualMachine>>
        description: A promise is returned
    package: azure-arm-compute - v10
references:
  - uid: azure-arm-compute - v10.0.0.VirtualMachineCaptureParameters
    name: VirtualMachineCaptureParameters
    spec.typeScript:
      - name: VirtualMachineCaptureParameters
        fullName: VirtualMachineCaptureParameters
        uid: azure-arm-compute - v10.0.0.VirtualMachineCaptureParameters
  - uid: Promise<azure-arm-compute - v10.0.0.VirtualMachineCaptureResult>
    name: VirtualMachineCaptureResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: VirtualMachineCaptureResult
        fullName: VirtualMachineCaptureResult
        uid: azure-arm-compute - v10.0.0.VirtualMachineCaptureResult
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-arm-compute - v10.0.0.VirtualMachineCaptureResult>
    name: VirtualMachineCaptureResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: VirtualMachineCaptureResult
        fullName: VirtualMachineCaptureResult
        uid: azure-arm-compute - v10.0.0.VirtualMachineCaptureResult
      - name: '>'
        fullName: '>'
  - uid: >-
      Promise<HttpOperationResponse<azure-arm-compute -
      v10.0.0.VirtualMachineCaptureResult>>
    name: VirtualMachineCaptureResult>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: VirtualMachineCaptureResult
        fullName: VirtualMachineCaptureResult
        uid: azure-arm-compute - v10.0.0.VirtualMachineCaptureResult
      - name: '>>'
        fullName: '>>'
  - uid: azure-arm-compute - v10.0.0.VirtualMachine
    name: VirtualMachine
    spec.typeScript:
      - name: VirtualMachine
        fullName: VirtualMachine
        uid: azure-arm-compute - v10.0.0.VirtualMachine
  - uid: Promise<azure-arm-compute - v10.0.0.VirtualMachine>
    name: VirtualMachine>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: VirtualMachine
        fullName: VirtualMachine
        uid: azure-arm-compute - v10.0.0.VirtualMachine
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-arm-compute - v10.0.0.VirtualMachine>
    name: VirtualMachine>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: VirtualMachine
        fullName: VirtualMachine
        uid: azure-arm-compute - v10.0.0.VirtualMachine
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-arm-compute - v10.0.0.VirtualMachine>>
    name: VirtualMachine>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: VirtualMachine
        fullName: VirtualMachine
        uid: azure-arm-compute - v10.0.0.VirtualMachine
      - name: '>>'
        fullName: '>>'
  - uid: azure-arm-compute - v10.0.0.RunCommandInput
    name: RunCommandInput
    spec.typeScript:
      - name: RunCommandInput
        fullName: RunCommandInput
        uid: azure-arm-compute - v10.0.0.RunCommandInput
  - uid: Promise<azure-arm-compute - v10.0.0.RunCommandResult>
    name: RunCommandResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: RunCommandResult
        fullName: RunCommandResult
        uid: azure-arm-compute - v10.0.0.RunCommandResult
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-arm-compute - v10.0.0.RunCommandResult>
    name: RunCommandResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: RunCommandResult
        fullName: RunCommandResult
        uid: azure-arm-compute - v10.0.0.RunCommandResult
      - name: '>'
        fullName: '>'
  - uid: >-
      Promise<HttpOperationResponse<azure-arm-compute -
      v10.0.0.RunCommandResult>>
    name: RunCommandResult>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: RunCommandResult
        fullName: RunCommandResult
        uid: azure-arm-compute - v10.0.0.RunCommandResult
      - name: '>>'
        fullName: '>>'
  - uid: azure-arm-compute - v10.0.0.VirtualMachineUpdate
    name: VirtualMachineUpdate
    spec.typeScript:
      - name: VirtualMachineUpdate
        fullName: VirtualMachineUpdate
        uid: azure-arm-compute - v10.0.0.VirtualMachineUpdate
  - uid: Promise<azure-arm-compute - v10.0.0.VirtualMachineInstanceView>
    name: VirtualMachineInstanceView>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: VirtualMachineInstanceView
        fullName: VirtualMachineInstanceView
        uid: azure-arm-compute - v10.0.0.VirtualMachineInstanceView
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-arm-compute - v10.0.0.VirtualMachineInstanceView>
    name: VirtualMachineInstanceView>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: VirtualMachineInstanceView
        fullName: VirtualMachineInstanceView
        uid: azure-arm-compute - v10.0.0.VirtualMachineInstanceView
      - name: '>'
        fullName: '>'
  - uid: >-
      Promise<HttpOperationResponse<azure-arm-compute -
      v10.0.0.VirtualMachineInstanceView>>
    name: VirtualMachineInstanceView>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: VirtualMachineInstanceView
        fullName: VirtualMachineInstanceView
        uid: azure-arm-compute - v10.0.0.VirtualMachineInstanceView
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-arm-compute - v10.0.0.VirtualMachineListResult>
    name: VirtualMachineListResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: VirtualMachineListResult
        fullName: VirtualMachineListResult
        uid: azure-arm-compute - v10.0.0.VirtualMachineListResult
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-arm-compute - v10.0.0.VirtualMachineListResult>
    name: VirtualMachineListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: VirtualMachineListResult
        fullName: VirtualMachineListResult
        uid: azure-arm-compute - v10.0.0.VirtualMachineListResult
      - name: '>'
        fullName: '>'
  - uid: >-
      Promise<HttpOperationResponse<azure-arm-compute -
      v10.0.0.VirtualMachineListResult>>
    name: VirtualMachineListResult>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: VirtualMachineListResult
        fullName: VirtualMachineListResult
        uid: azure-arm-compute - v10.0.0.VirtualMachineListResult
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-arm-compute - v10.0.0.VirtualMachineSizeListResult>
    name: VirtualMachineSizeListResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: VirtualMachineSizeListResult
        fullName: VirtualMachineSizeListResult
        uid: azure-arm-compute - v10.0.0.VirtualMachineSizeListResult
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-arm-compute - v10.0.0.VirtualMachineSizeListResult>
    name: VirtualMachineSizeListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: VirtualMachineSizeListResult
        fullName: VirtualMachineSizeListResult
        uid: azure-arm-compute - v10.0.0.VirtualMachineSizeListResult
      - name: '>'
        fullName: '>'
  - uid: >-
      Promise<HttpOperationResponse<azure-arm-compute -
      v10.0.0.VirtualMachineSizeListResult>>
    name: VirtualMachineSizeListResult>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: VirtualMachineSizeListResult
        fullName: VirtualMachineSizeListResult
        uid: azure-arm-compute - v10.0.0.VirtualMachineSizeListResult
      - name: '>>'
        fullName: '>>'
