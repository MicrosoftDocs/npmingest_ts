### YamlMime:UniversalReference
items:
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSets
    name: VirtualMachineScaleSets
    fullName: VirtualMachineScaleSets
    children:
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSets.beginCreateOrUpdate
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachineScaleSets.beginCreateOrUpdate_2
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachineScaleSets.beginCreateOrUpdate_1
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachineScaleSets.beginCreateOrUpdateWithHttpOperationResponse
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSets.beginDeallocate
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSets.beginDeallocate_2
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSets.beginDeallocate_1
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachineScaleSets.beginDeallocateWithHttpOperationResponse
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSets.beginDeleteInstances
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachineScaleSets.beginDeleteInstances_2
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachineScaleSets.beginDeleteInstances_1
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachineScaleSets.beginDeleteInstancesWithHttpOperationResponse
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSets.beginDeleteMethod
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSets.beginDeleteMethod_2
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSets.beginDeleteMethod_1
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachineScaleSets.beginDeleteMethodWithHttpOperationResponse
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachineScaleSets.beginPerformMaintenance
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachineScaleSets.beginPerformMaintenance_2
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachineScaleSets.beginPerformMaintenance_1
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachineScaleSets.beginPerformMaintenanceWithHttpOperationResponse
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSets.beginPowerOff
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSets.beginPowerOff_2
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSets.beginPowerOff_1
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachineScaleSets.beginPowerOffWithHttpOperationResponse
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSets.beginRedeploy
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSets.beginRedeploy_2
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSets.beginRedeploy_1
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachineScaleSets.beginRedeployWithHttpOperationResponse
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSets.beginReimage
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSets.beginReimage_2
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSets.beginReimage_1
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSets.beginReimageAll
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSets.beginReimageAll_2
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSets.beginReimageAll_1
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachineScaleSets.beginReimageAllWithHttpOperationResponse
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachineScaleSets.beginReimageWithHttpOperationResponse
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSets.beginRestart
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSets.beginRestart_2
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSets.beginRestart_1
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachineScaleSets.beginRestartWithHttpOperationResponse
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSets.beginStart
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSets.beginStart_2
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSets.beginStart_1
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachineScaleSets.beginStartWithHttpOperationResponse
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSets.beginUpdate
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSets.beginUpdate_2
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSets.beginUpdate_1
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSets.beginUpdateInstances
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachineScaleSets.beginUpdateInstances_2
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachineScaleSets.beginUpdateInstances_1
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachineScaleSets.beginUpdateInstancesWithHttpOperationResponse
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachineScaleSets.beginUpdateWithHttpOperationResponse
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSets.createOrUpdate
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSets.createOrUpdate_2
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSets.createOrUpdate_1
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachineScaleSets.createOrUpdateWithHttpOperationResponse
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSets.deallocate
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSets.deallocate_2
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSets.deallocate_1
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachineScaleSets.deallocateWithHttpOperationResponse
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSets.deleteInstances
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSets.deleteInstances_2
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSets.deleteInstances_1
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachineScaleSets.deleteInstancesWithHttpOperationResponse
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSets.deleteMethod
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSets.deleteMethod_2
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSets.deleteMethod_1
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachineScaleSets.deleteMethodWithHttpOperationResponse
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachineScaleSets.forceRecoveryServiceFabricPlatformUpdateDomainWalk
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachineScaleSets.forceRecoveryServiceFabricPlatformUpdateDomainWalk_2
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachineScaleSets.forceRecoveryServiceFabricPlatformUpdateDomainWalk_1
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachineScaleSets.forceRecoveryServiceFabricPlatformUpdateDomainWalkWithHttpOperationResponse
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSets.get
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSets.get_2
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSets.get_1
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSets.getInstanceView
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSets.getInstanceView_2
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSets.getInstanceView_1
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachineScaleSets.getInstanceViewWithHttpOperationResponse
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSets.getOSUpgradeHistory
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachineScaleSets.getOSUpgradeHistory_2
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachineScaleSets.getOSUpgradeHistory_1
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachineScaleSets.getOSUpgradeHistoryNext
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachineScaleSets.getOSUpgradeHistoryNext_2
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachineScaleSets.getOSUpgradeHistoryNext_1
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachineScaleSets.getOSUpgradeHistoryNextWithHttpOperationResponse
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachineScaleSets.getOSUpgradeHistoryWithHttpOperationResponse
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachineScaleSets.getWithHttpOperationResponse
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSets.list
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSets.list_2
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSets.list_1
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSets.listAll
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSets.listAll_2
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSets.listAll_1
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSets.listAllNext
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSets.listAllNext_2
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSets.listAllNext_1
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachineScaleSets.listAllNextWithHttpOperationResponse
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachineScaleSets.listAllWithHttpOperationResponse
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSets.listNext
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSets.listNext_2
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSets.listNext_1
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachineScaleSets.listNextWithHttpOperationResponse
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSets.listSkus
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSets.listSkus_2
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSets.listSkus_1
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSets.listSkusNext
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSets.listSkusNext_2
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSets.listSkusNext_1
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachineScaleSets.listSkusNextWithHttpOperationResponse
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachineScaleSets.listSkusWithHttpOperationResponse
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachineScaleSets.listWithHttpOperationResponse
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSets.performMaintenance
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSets.performMaintenance_2
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSets.performMaintenance_1
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachineScaleSets.performMaintenanceWithHttpOperationResponse
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSets.powerOff
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSets.powerOff_2
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSets.powerOff_1
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachineScaleSets.powerOffWithHttpOperationResponse
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSets.redeploy
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSets.redeploy_2
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSets.redeploy_1
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachineScaleSets.redeployWithHttpOperationResponse
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSets.reimage
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSets.reimage_2
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSets.reimage_1
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSets.reimageAll
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSets.reimageAll_2
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSets.reimageAll_1
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachineScaleSets.reimageAllWithHttpOperationResponse
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachineScaleSets.reimageWithHttpOperationResponse
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSets.restart
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSets.restart_2
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSets.restart_1
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachineScaleSets.restartWithHttpOperationResponse
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSets.start
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSets.start_2
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSets.start_1
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachineScaleSets.startWithHttpOperationResponse
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSets.update
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSets.update_2
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSets.update_1
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSets.updateInstances
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSets.updateInstances_2
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSets.updateInstances_1
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachineScaleSets.updateInstancesWithHttpOperationResponse
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachineScaleSets.updateWithHttpOperationResponse
    langs:
      - typeScript
    type: interface
    summary: ''
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSets.beginCreateOrUpdate
    name: 'beginCreateOrUpdate(string, string, VirtualMachineScaleSet, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Create or update a VM scale set.
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string, vmScaleSetName:
        string, parameters: VirtualMachineScaleSet, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set to create or
            update.
        - id: parameters
          type:
            - azure-arm-compute - v10.0.0.VirtualMachineScaleSet
          description: |
            The scale set object.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.VirtualMachineScaleSet>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VirtualMachineScaleSet} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VirtualMachineScaleSet} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachineScaleSet} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSets.beginCreateOrUpdate_2
    name: >-
      beginCreateOrUpdate(string, string, VirtualMachineScaleSet, Object,
      ServiceCallback<VirtualMachineScaleSet>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Create or update a VM scale set.
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string, vmScaleSetName:
        string, parameters: VirtualMachineScaleSet, options: Object, callback:
        ServiceCallback<VirtualMachineScaleSet>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-compute - v10.0.0.VirtualMachineScaleSet
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<azure-arm-compute -
              v10.0.0.VirtualMachineScaleSet>
          description: ''
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.VirtualMachineScaleSet>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VirtualMachineScaleSet} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VirtualMachineScaleSet} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachineScaleSet} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSets.beginCreateOrUpdate_1
    name: >-
      beginCreateOrUpdate(string, string, VirtualMachineScaleSet,
      ServiceCallback<VirtualMachineScaleSet>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Create or update a VM scale set.
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string, vmScaleSetName:
        string, parameters: VirtualMachineScaleSet, callback:
        ServiceCallback<VirtualMachineScaleSet>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-compute - v10.0.0.VirtualMachineScaleSet
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<azure-arm-compute -
              v10.0.0.VirtualMachineScaleSet>
          description: ''
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.VirtualMachineScaleSet>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VirtualMachineScaleSet} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VirtualMachineScaleSet} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachineScaleSet} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.VirtualMachineScaleSets.beginCreateOrUpdateWithHttpOperationResponse
    name: >-
      beginCreateOrUpdateWithHttpOperationResponse(string, string,
      VirtualMachineScaleSet, Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: Create or update a VM scale set.
    syntax:
      content: >-
        function beginCreateOrUpdateWithHttpOperationResponse(resourceGroupName:
        string, vmScaleSetName: string, parameters: VirtualMachineScaleSet,
        options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set to create or
            update.
        - id: parameters
          type:
            - azure-arm-compute - v10.0.0.VirtualMachineScaleSet
          description: |
            The scale set object.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-compute -
            v10.0.0.VirtualMachineScaleSet>>
        description: A promise is returned
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSets.beginDeallocate
    name: 'beginDeallocate(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Deallocates specific virtual machines in a VM scale set. Shuts down the

      virtual machines and releases the compute resources. You are not billed
      for

      the compute resources that this virtual machine scale set deallocates.
    syntax:
      content: >-
        function beginDeallocate(resourceGroupName: string, vmScaleSetName:
        string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSets.beginDeallocate_2
    name: 'beginDeallocate(string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Deallocates specific virtual machines in a VM scale set. Shuts down the

      virtual machines and releases the compute resources. You are not billed
      for

      the compute resources that this virtual machine scale set deallocates.
    syntax:
      content: >-
        function beginDeallocate(resourceGroupName: string, vmScaleSetName:
        string, options: Object, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSets.beginDeallocate_1
    name: 'beginDeallocate(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Deallocates specific virtual machines in a VM scale set. Shuts down the

      virtual machines and releases the compute resources. You are not billed
      for

      the compute resources that this virtual machine scale set deallocates.
    syntax:
      content: >-
        function beginDeallocate(resourceGroupName: string, vmScaleSetName:
        string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.VirtualMachineScaleSets.beginDeallocateWithHttpOperationResponse
    name: 'beginDeallocateWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Deallocates specific virtual machines in a VM scale set. Shuts down the

      virtual machines and releases the compute resources. You are not billed
      for

      the compute resources that this virtual machine scale set deallocates.
    syntax:
      content: >-
        function beginDeallocateWithHttpOperationResponse(resourceGroupName:
        string, vmScaleSetName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
        description: A promise is returned
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSets.beginDeleteInstances
    name: 'beginDeleteInstances(string, string, string[], Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes virtual machines in a VM scale set.
    syntax:
      content: >-
        function beginDeleteInstances(resourceGroupName: string, vmScaleSetName:
        string, instanceIds: string[], options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: instanceIds
          type:
            - 'string[]'
          description: |
            The virtual machine scale set instance ids.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSets.beginDeleteInstances_2
    name: >-
      beginDeleteInstances(string, string, string[], Object,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes virtual machines in a VM scale set.
    syntax:
      content: >-
        function beginDeleteInstances(resourceGroupName: string, vmScaleSetName:
        string, instanceIds: string[], options: Object, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: instanceIds
          type:
            - 'string[]'
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSets.beginDeleteInstances_1
    name: 'beginDeleteInstances(string, string, string[], ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes virtual machines in a VM scale set.
    syntax:
      content: >-
        function beginDeleteInstances(resourceGroupName: string, vmScaleSetName:
        string, instanceIds: string[], callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: instanceIds
          type:
            - 'string[]'
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.VirtualMachineScaleSets.beginDeleteInstancesWithHttpOperationResponse
    name: >-
      beginDeleteInstancesWithHttpOperationResponse(string, string, string[],
      Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes virtual machines in a VM scale set.
    syntax:
      content: >-
        function
        beginDeleteInstancesWithHttpOperationResponse(resourceGroupName: string,
        vmScaleSetName: string, instanceIds: string[], options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: instanceIds
          type:
            - 'string[]'
          description: |
            The virtual machine scale set instance ids.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
        description: A promise is returned
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSets.beginDeleteMethod
    name: 'beginDeleteMethod(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes a VM scale set.
    syntax:
      content: >-
        function beginDeleteMethod(resourceGroupName: string, vmScaleSetName:
        string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSets.beginDeleteMethod_2
    name: 'beginDeleteMethod(string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes a VM scale set.
    syntax:
      content: >-
        function beginDeleteMethod(resourceGroupName: string, vmScaleSetName:
        string, options: Object, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSets.beginDeleteMethod_1
    name: 'beginDeleteMethod(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes a VM scale set.
    syntax:
      content: >-
        function beginDeleteMethod(resourceGroupName: string, vmScaleSetName:
        string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.VirtualMachineScaleSets.beginDeleteMethodWithHttpOperationResponse
    name: 'beginDeleteMethodWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes a VM scale set.
    syntax:
      content: >-
        function beginDeleteMethodWithHttpOperationResponse(resourceGroupName:
        string, vmScaleSetName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
        description: A promise is returned
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.VirtualMachineScaleSets.beginPerformMaintenance
    name: 'beginPerformMaintenance(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Perform maintenance on one or more virtual machines in a VM scale set.

      Operation on instances which are not eligible for perform maintenance will

      be failed. Please refer to best practices for more details:

      https://docs.microsoft.com/en-us/azure/virtual-machine-scale-sets/virtual-machine-scale-sets-maintenance-notifications
    syntax:
      content: >-
        function beginPerformMaintenance(resourceGroupName: string,
        vmScaleSetName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.VirtualMachineScaleSets.beginPerformMaintenance_2
    name: 'beginPerformMaintenance(string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Perform maintenance on one or more virtual machines in a VM scale set.

      Operation on instances which are not eligible for perform maintenance will

      be failed. Please refer to best practices for more details:

      https://docs.microsoft.com/en-us/azure/virtual-machine-scale-sets/virtual-machine-scale-sets-maintenance-notifications
    syntax:
      content: >-
        function beginPerformMaintenance(resourceGroupName: string,
        vmScaleSetName: string, options: Object, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.VirtualMachineScaleSets.beginPerformMaintenance_1
    name: 'beginPerformMaintenance(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Perform maintenance on one or more virtual machines in a VM scale set.

      Operation on instances which are not eligible for perform maintenance will

      be failed. Please refer to best practices for more details:

      https://docs.microsoft.com/en-us/azure/virtual-machine-scale-sets/virtual-machine-scale-sets-maintenance-notifications
    syntax:
      content: >-
        function beginPerformMaintenance(resourceGroupName: string,
        vmScaleSetName: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.VirtualMachineScaleSets.beginPerformMaintenanceWithHttpOperationResponse
    name: 'beginPerformMaintenanceWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Perform maintenance on one or more virtual machines in a VM scale set.

      Operation on instances which are not eligible for perform maintenance will

      be failed. Please refer to best practices for more details:

      https://docs.microsoft.com/en-us/azure/virtual-machine-scale-sets/virtual-machine-scale-sets-maintenance-notifications
    syntax:
      content: >-
        function
        beginPerformMaintenanceWithHttpOperationResponse(resourceGroupName:
        string, vmScaleSetName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
        description: A promise is returned
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSets.beginPowerOff
    name: 'beginPowerOff(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Power off (stop) one or more virtual machines in a VM scale set. Note that

      resources are still attached and you are getting charged for the
      resources.

      Instead, use deallocate to release resources and avoid charges.
    syntax:
      content: >-
        function beginPowerOff(resourceGroupName: string, vmScaleSetName:
        string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSets.beginPowerOff_2
    name: 'beginPowerOff(string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Power off (stop) one or more virtual machines in a VM scale set. Note that

      resources are still attached and you are getting charged for the
      resources.

      Instead, use deallocate to release resources and avoid charges.
    syntax:
      content: >-
        function beginPowerOff(resourceGroupName: string, vmScaleSetName:
        string, options: Object, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSets.beginPowerOff_1
    name: 'beginPowerOff(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Power off (stop) one or more virtual machines in a VM scale set. Note that

      resources are still attached and you are getting charged for the
      resources.

      Instead, use deallocate to release resources and avoid charges.
    syntax:
      content: >-
        function beginPowerOff(resourceGroupName: string, vmScaleSetName:
        string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.VirtualMachineScaleSets.beginPowerOffWithHttpOperationResponse
    name: 'beginPowerOffWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Power off (stop) one or more virtual machines in a VM scale set. Note that

      resources are still attached and you are getting charged for the
      resources.

      Instead, use deallocate to release resources and avoid charges.
    syntax:
      content: >-
        function beginPowerOffWithHttpOperationResponse(resourceGroupName:
        string, vmScaleSetName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
        description: A promise is returned
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSets.beginRedeploy
    name: 'beginRedeploy(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Redeploy one or more virtual machines in a VM scale set.
    syntax:
      content: >-
        function beginRedeploy(resourceGroupName: string, vmScaleSetName:
        string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSets.beginRedeploy_2
    name: 'beginRedeploy(string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Redeploy one or more virtual machines in a VM scale set.
    syntax:
      content: >-
        function beginRedeploy(resourceGroupName: string, vmScaleSetName:
        string, options: Object, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSets.beginRedeploy_1
    name: 'beginRedeploy(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Redeploy one or more virtual machines in a VM scale set.
    syntax:
      content: >-
        function beginRedeploy(resourceGroupName: string, vmScaleSetName:
        string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.VirtualMachineScaleSets.beginRedeployWithHttpOperationResponse
    name: 'beginRedeployWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Redeploy one or more virtual machines in a VM scale set.
    syntax:
      content: >-
        function beginRedeployWithHttpOperationResponse(resourceGroupName:
        string, vmScaleSetName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
        description: A promise is returned
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSets.beginReimage
    name: 'beginReimage(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Reimages (upgrade the operating system) one or more virtual machines in a
      VM

      scale set which don't have a ephemeral OS disk, for virtual machines who

      have a ephemeral OS disk the virtual machine is reset to initial state.
    syntax:
      content: >-
        function beginReimage(resourceGroupName: string, vmScaleSetName: string,
        options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSets.beginReimage_2
    name: 'beginReimage(string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Reimages (upgrade the operating system) one or more virtual machines in a
      VM

      scale set which don't have a ephemeral OS disk, for virtual machines who

      have a ephemeral OS disk the virtual machine is reset to initial state.
    syntax:
      content: >-
        function beginReimage(resourceGroupName: string, vmScaleSetName: string,
        options: Object, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSets.beginReimage_1
    name: 'beginReimage(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Reimages (upgrade the operating system) one or more virtual machines in a
      VM

      scale set which don't have a ephemeral OS disk, for virtual machines who

      have a ephemeral OS disk the virtual machine is reset to initial state.
    syntax:
      content: >-
        function beginReimage(resourceGroupName: string, vmScaleSetName: string,
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSets.beginReimageAll
    name: 'beginReimageAll(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Reimages all the disks ( including data disks ) in the virtual machines in
      a

      VM scale set. This operation is only supported for managed disks.
    syntax:
      content: >-
        function beginReimageAll(resourceGroupName: string, vmScaleSetName:
        string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSets.beginReimageAll_2
    name: 'beginReimageAll(string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Reimages all the disks ( including data disks ) in the virtual machines in
      a

      VM scale set. This operation is only supported for managed disks.
    syntax:
      content: >-
        function beginReimageAll(resourceGroupName: string, vmScaleSetName:
        string, options: Object, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSets.beginReimageAll_1
    name: 'beginReimageAll(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Reimages all the disks ( including data disks ) in the virtual machines in
      a

      VM scale set. This operation is only supported for managed disks.
    syntax:
      content: >-
        function beginReimageAll(resourceGroupName: string, vmScaleSetName:
        string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.VirtualMachineScaleSets.beginReimageAllWithHttpOperationResponse
    name: 'beginReimageAllWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Reimages all the disks ( including data disks ) in the virtual machines in
      a

      VM scale set. This operation is only supported for managed disks.
    syntax:
      content: >-
        function beginReimageAllWithHttpOperationResponse(resourceGroupName:
        string, vmScaleSetName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
        description: A promise is returned
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.VirtualMachineScaleSets.beginReimageWithHttpOperationResponse
    name: 'beginReimageWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Reimages (upgrade the operating system) one or more virtual machines in a
      VM

      scale set which don't have a ephemeral OS disk, for virtual machines who

      have a ephemeral OS disk the virtual machine is reset to initial state.
    syntax:
      content: >-
        function beginReimageWithHttpOperationResponse(resourceGroupName:
        string, vmScaleSetName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
        description: A promise is returned
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSets.beginRestart
    name: 'beginRestart(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Restarts one or more virtual machines in a VM scale set.
    syntax:
      content: >-
        function beginRestart(resourceGroupName: string, vmScaleSetName: string,
        options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSets.beginRestart_2
    name: 'beginRestart(string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Restarts one or more virtual machines in a VM scale set.
    syntax:
      content: >-
        function beginRestart(resourceGroupName: string, vmScaleSetName: string,
        options: Object, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSets.beginRestart_1
    name: 'beginRestart(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Restarts one or more virtual machines in a VM scale set.
    syntax:
      content: >-
        function beginRestart(resourceGroupName: string, vmScaleSetName: string,
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.VirtualMachineScaleSets.beginRestartWithHttpOperationResponse
    name: 'beginRestartWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Restarts one or more virtual machines in a VM scale set.
    syntax:
      content: >-
        function beginRestartWithHttpOperationResponse(resourceGroupName:
        string, vmScaleSetName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
        description: A promise is returned
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSets.beginStart
    name: 'beginStart(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Starts one or more virtual machines in a VM scale set.
    syntax:
      content: >-
        function beginStart(resourceGroupName: string, vmScaleSetName: string,
        options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSets.beginStart_2
    name: 'beginStart(string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Starts one or more virtual machines in a VM scale set.
    syntax:
      content: >-
        function beginStart(resourceGroupName: string, vmScaleSetName: string,
        options: Object, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSets.beginStart_1
    name: 'beginStart(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Starts one or more virtual machines in a VM scale set.
    syntax:
      content: >-
        function beginStart(resourceGroupName: string, vmScaleSetName: string,
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.VirtualMachineScaleSets.beginStartWithHttpOperationResponse
    name: 'beginStartWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Starts one or more virtual machines in a VM scale set.
    syntax:
      content: >-
        function beginStartWithHttpOperationResponse(resourceGroupName: string,
        vmScaleSetName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
        description: A promise is returned
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSets.beginUpdate
    name: 'beginUpdate(string, string, VirtualMachineScaleSetUpdate, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Update a VM scale set.
    syntax:
      content: >-
        function beginUpdate(resourceGroupName: string, vmScaleSetName: string,
        parameters: VirtualMachineScaleSetUpdate, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set to create or
            update.
        - id: parameters
          type:
            - azure-arm-compute - v10.0.0.VirtualMachineScaleSetUpdate
          description: |
            The scale set object.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.VirtualMachineScaleSet>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VirtualMachineScaleSet} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VirtualMachineScaleSet} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachineScaleSet} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSets.beginUpdate_2
    name: >-
      beginUpdate(string, string, VirtualMachineScaleSetUpdate, Object,
      ServiceCallback<VirtualMachineScaleSet>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Update a VM scale set.
    syntax:
      content: >-
        function beginUpdate(resourceGroupName: string, vmScaleSetName: string,
        parameters: VirtualMachineScaleSetUpdate, options: Object, callback:
        ServiceCallback<VirtualMachineScaleSet>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-compute - v10.0.0.VirtualMachineScaleSetUpdate
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<azure-arm-compute -
              v10.0.0.VirtualMachineScaleSet>
          description: ''
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.VirtualMachineScaleSet>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VirtualMachineScaleSet} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VirtualMachineScaleSet} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachineScaleSet} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSets.beginUpdate_1
    name: >-
      beginUpdate(string, string, VirtualMachineScaleSetUpdate,
      ServiceCallback<VirtualMachineScaleSet>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Update a VM scale set.
    syntax:
      content: >-
        function beginUpdate(resourceGroupName: string, vmScaleSetName: string,
        parameters: VirtualMachineScaleSetUpdate, callback:
        ServiceCallback<VirtualMachineScaleSet>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-compute - v10.0.0.VirtualMachineScaleSetUpdate
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<azure-arm-compute -
              v10.0.0.VirtualMachineScaleSet>
          description: ''
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.VirtualMachineScaleSet>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VirtualMachineScaleSet} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VirtualMachineScaleSet} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachineScaleSet} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSets.beginUpdateInstances
    name: 'beginUpdateInstances(string, string, string[], Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Upgrades one or more virtual machines to the latest SKU set in the VM
      scale

      set model.
    syntax:
      content: >-
        function beginUpdateInstances(resourceGroupName: string, vmScaleSetName:
        string, instanceIds: string[], options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: instanceIds
          type:
            - 'string[]'
          description: |
            The virtual machine scale set instance ids.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSets.beginUpdateInstances_2
    name: >-
      beginUpdateInstances(string, string, string[], Object,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Upgrades one or more virtual machines to the latest SKU set in the VM
      scale

      set model.
    syntax:
      content: >-
        function beginUpdateInstances(resourceGroupName: string, vmScaleSetName:
        string, instanceIds: string[], options: Object, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: instanceIds
          type:
            - 'string[]'
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSets.beginUpdateInstances_1
    name: 'beginUpdateInstances(string, string, string[], ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Upgrades one or more virtual machines to the latest SKU set in the VM
      scale

      set model.
    syntax:
      content: >-
        function beginUpdateInstances(resourceGroupName: string, vmScaleSetName:
        string, instanceIds: string[], callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: instanceIds
          type:
            - 'string[]'
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.VirtualMachineScaleSets.beginUpdateInstancesWithHttpOperationResponse
    name: >-
      beginUpdateInstancesWithHttpOperationResponse(string, string, string[],
      Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Upgrades one or more virtual machines to the latest SKU set in the VM
      scale

      set model.
    syntax:
      content: >-
        function
        beginUpdateInstancesWithHttpOperationResponse(resourceGroupName: string,
        vmScaleSetName: string, instanceIds: string[], options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: instanceIds
          type:
            - 'string[]'
          description: |
            The virtual machine scale set instance ids.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
        description: A promise is returned
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.VirtualMachineScaleSets.beginUpdateWithHttpOperationResponse
    name: >-
      beginUpdateWithHttpOperationResponse(string, string,
      VirtualMachineScaleSetUpdate, Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: Update a VM scale set.
    syntax:
      content: >-
        function beginUpdateWithHttpOperationResponse(resourceGroupName: string,
        vmScaleSetName: string, parameters: VirtualMachineScaleSetUpdate,
        options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set to create or
            update.
        - id: parameters
          type:
            - azure-arm-compute - v10.0.0.VirtualMachineScaleSetUpdate
          description: |
            The scale set object.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-compute -
            v10.0.0.VirtualMachineScaleSet>>
        description: A promise is returned
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSets.createOrUpdate
    name: 'createOrUpdate(string, string, VirtualMachineScaleSet, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Create or update a VM scale set.
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, vmScaleSetName:
        string, parameters: VirtualMachineScaleSet, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set to create or
            update.
        - id: parameters
          type:
            - azure-arm-compute - v10.0.0.VirtualMachineScaleSet
          description: |
            The scale set object.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.VirtualMachineScaleSet>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VirtualMachineScaleSet} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VirtualMachineScaleSet} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachineScaleSet} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSets.createOrUpdate_2
    name: >-
      createOrUpdate(string, string, VirtualMachineScaleSet, Object,
      ServiceCallback<VirtualMachineScaleSet>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Create or update a VM scale set.
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, vmScaleSetName:
        string, parameters: VirtualMachineScaleSet, options: Object, callback:
        ServiceCallback<VirtualMachineScaleSet>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-compute - v10.0.0.VirtualMachineScaleSet
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<azure-arm-compute -
              v10.0.0.VirtualMachineScaleSet>
          description: ''
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.VirtualMachineScaleSet>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VirtualMachineScaleSet} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VirtualMachineScaleSet} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachineScaleSet} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSets.createOrUpdate_1
    name: >-
      createOrUpdate(string, string, VirtualMachineScaleSet,
      ServiceCallback<VirtualMachineScaleSet>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Create or update a VM scale set.
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, vmScaleSetName:
        string, parameters: VirtualMachineScaleSet, callback:
        ServiceCallback<VirtualMachineScaleSet>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-compute - v10.0.0.VirtualMachineScaleSet
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<azure-arm-compute -
              v10.0.0.VirtualMachineScaleSet>
          description: ''
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.VirtualMachineScaleSet>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VirtualMachineScaleSet} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VirtualMachineScaleSet} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachineScaleSet} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.VirtualMachineScaleSets.createOrUpdateWithHttpOperationResponse
    name: >-
      createOrUpdateWithHttpOperationResponse(string, string,
      VirtualMachineScaleSet, Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: Create or update a VM scale set.
    syntax:
      content: >-
        function createOrUpdateWithHttpOperationResponse(resourceGroupName:
        string, vmScaleSetName: string, parameters: VirtualMachineScaleSet,
        options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set to create or
            update.
        - id: parameters
          type:
            - azure-arm-compute - v10.0.0.VirtualMachineScaleSet
          description: |
            The scale set object.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-compute -
            v10.0.0.VirtualMachineScaleSet>>
        description: A promise is returned
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSets.deallocate
    name: 'deallocate(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Deallocates specific virtual machines in a VM scale set. Shuts down the

      virtual machines and releases the compute resources. You are not billed
      for

      the compute resources that this virtual machine scale set deallocates.
    syntax:
      content: >-
        function deallocate(resourceGroupName: string, vmScaleSetName: string,
        options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSets.deallocate_2
    name: 'deallocate(string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Deallocates specific virtual machines in a VM scale set. Shuts down the

      virtual machines and releases the compute resources. You are not billed
      for

      the compute resources that this virtual machine scale set deallocates.
    syntax:
      content: >-
        function deallocate(resourceGroupName: string, vmScaleSetName: string,
        options: Object, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSets.deallocate_1
    name: 'deallocate(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Deallocates specific virtual machines in a VM scale set. Shuts down the

      virtual machines and releases the compute resources. You are not billed
      for

      the compute resources that this virtual machine scale set deallocates.
    syntax:
      content: >-
        function deallocate(resourceGroupName: string, vmScaleSetName: string,
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.VirtualMachineScaleSets.deallocateWithHttpOperationResponse
    name: 'deallocateWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Deallocates specific virtual machines in a VM scale set. Shuts down the

      virtual machines and releases the compute resources. You are not billed
      for

      the compute resources that this virtual machine scale set deallocates.
    syntax:
      content: >-
        function deallocateWithHttpOperationResponse(resourceGroupName: string,
        vmScaleSetName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
        description: A promise is returned
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSets.deleteInstances
    name: 'deleteInstances(string, string, string[], Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes virtual machines in a VM scale set.
    syntax:
      content: >-
        function deleteInstances(resourceGroupName: string, vmScaleSetName:
        string, instanceIds: string[], options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: instanceIds
          type:
            - 'string[]'
          description: |
            The virtual machine scale set instance ids.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSets.deleteInstances_2
    name: 'deleteInstances(string, string, string[], Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes virtual machines in a VM scale set.
    syntax:
      content: >-
        function deleteInstances(resourceGroupName: string, vmScaleSetName:
        string, instanceIds: string[], options: Object, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: instanceIds
          type:
            - 'string[]'
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSets.deleteInstances_1
    name: 'deleteInstances(string, string, string[], ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes virtual machines in a VM scale set.
    syntax:
      content: >-
        function deleteInstances(resourceGroupName: string, vmScaleSetName:
        string, instanceIds: string[], callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: instanceIds
          type:
            - 'string[]'
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.VirtualMachineScaleSets.deleteInstancesWithHttpOperationResponse
    name: 'deleteInstancesWithHttpOperationResponse(string, string, string[], Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes virtual machines in a VM scale set.
    syntax:
      content: >-
        function deleteInstancesWithHttpOperationResponse(resourceGroupName:
        string, vmScaleSetName: string, instanceIds: string[], options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: instanceIds
          type:
            - 'string[]'
          description: |
            The virtual machine scale set instance ids.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
        description: A promise is returned
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSets.deleteMethod
    name: 'deleteMethod(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes a VM scale set.
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, vmScaleSetName: string,
        options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSets.deleteMethod_2
    name: 'deleteMethod(string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes a VM scale set.
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, vmScaleSetName: string,
        options: Object, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSets.deleteMethod_1
    name: 'deleteMethod(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes a VM scale set.
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, vmScaleSetName: string,
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.VirtualMachineScaleSets.deleteMethodWithHttpOperationResponse
    name: 'deleteMethodWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes a VM scale set.
    syntax:
      content: >-
        function deleteMethodWithHttpOperationResponse(resourceGroupName:
        string, vmScaleSetName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
        description: A promise is returned
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.VirtualMachineScaleSets.forceRecoveryServiceFabricPlatformUpdateDomainWalk
    name: >-
      forceRecoveryServiceFabricPlatformUpdateDomainWalk(string, string, number,
      Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Manual platform update domain walk to update virtual machines in a service
      fabric virtual machine scale set.
    syntax:
      content: >-
        function
        forceRecoveryServiceFabricPlatformUpdateDomainWalk(resourceGroupName:
        string, vmScaleSetName: string, platformUpdateDomain: number, options?:
        Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: platformUpdateDomain
          type:
            - number
          description: |
            The platform update domain for which a
            manual recovery walk is requested
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.RecoveryWalkResponse>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {RecoveryWalkResponse} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {RecoveryWalkResponse} [result]   - The deserialized result object if an error did not occur.
                               See {@link RecoveryWalkResponse} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.VirtualMachineScaleSets.forceRecoveryServiceFabricPlatformUpdateDomainWalk_2
    name: >-
      forceRecoveryServiceFabricPlatformUpdateDomainWalk(string, string, number,
      Object, ServiceCallback<RecoveryWalkResponse>)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Manual platform update domain walk to update virtual machines in a service
      fabric virtual machine scale set.
    syntax:
      content: >-
        function
        forceRecoveryServiceFabricPlatformUpdateDomainWalk(resourceGroupName:
        string, vmScaleSetName: string, platformUpdateDomain: number, options:
        Object, callback: ServiceCallback<RecoveryWalkResponse>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: platformUpdateDomain
          type:
            - number
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-compute - v10.0.0.RecoveryWalkResponse>
          description: ''
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.RecoveryWalkResponse>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {RecoveryWalkResponse} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {RecoveryWalkResponse} [result]   - The deserialized result object if an error did not occur.
                               See {@link RecoveryWalkResponse} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.VirtualMachineScaleSets.forceRecoveryServiceFabricPlatformUpdateDomainWalk_1
    name: >-
      forceRecoveryServiceFabricPlatformUpdateDomainWalk(string, string, number,
      ServiceCallback<RecoveryWalkResponse>)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Manual platform update domain walk to update virtual machines in a service
      fabric virtual machine scale set.
    syntax:
      content: >-
        function
        forceRecoveryServiceFabricPlatformUpdateDomainWalk(resourceGroupName:
        string, vmScaleSetName: string, platformUpdateDomain: number, callback:
        ServiceCallback<RecoveryWalkResponse>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: platformUpdateDomain
          type:
            - number
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-compute - v10.0.0.RecoveryWalkResponse>
          description: ''
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.RecoveryWalkResponse>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {RecoveryWalkResponse} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {RecoveryWalkResponse} [result]   - The deserialized result object if an error did not occur.
                               See {@link RecoveryWalkResponse} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.VirtualMachineScaleSets.forceRecoveryServiceFabricPlatformUpdateDomainWalkWithHttpOperationResponse
    name: >-
      forceRecoveryServiceFabricPlatformUpdateDomainWalkWithHttpOperationResponse(string,
      string, number, Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Manual platform update domain walk to update virtual machines in a service
      fabric virtual machine scale set.
    syntax:
      content: >-
        function
        forceRecoveryServiceFabricPlatformUpdateDomainWalkWithHttpOperationResponse(resourceGroupName:
        string, vmScaleSetName: string, platformUpdateDomain: number, options?:
        Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: platformUpdateDomain
          type:
            - number
          description: |
            The platform update domain for which a
            manual recovery walk is requested
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-compute -
            v10.0.0.RecoveryWalkResponse>>
        description: A promise is returned
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSets.get
    name: 'get(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Display information about a virtual machine scale set.
    syntax:
      content: >-
        function get(resourceGroupName: string, vmScaleSetName: string,
        options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.VirtualMachineScaleSet>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VirtualMachineScaleSet} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VirtualMachineScaleSet} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachineScaleSet} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSets.get_2
    name: 'get(string, string, Object, ServiceCallback<VirtualMachineScaleSet>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Display information about a virtual machine scale set.
    syntax:
      content: >-
        function get(resourceGroupName: string, vmScaleSetName: string, options:
        Object, callback: ServiceCallback<VirtualMachineScaleSet>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<azure-arm-compute -
              v10.0.0.VirtualMachineScaleSet>
          description: ''
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.VirtualMachineScaleSet>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VirtualMachineScaleSet} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VirtualMachineScaleSet} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachineScaleSet} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSets.get_1
    name: 'get(string, string, ServiceCallback<VirtualMachineScaleSet>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Display information about a virtual machine scale set.
    syntax:
      content: >-
        function get(resourceGroupName: string, vmScaleSetName: string,
        callback: ServiceCallback<VirtualMachineScaleSet>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<azure-arm-compute -
              v10.0.0.VirtualMachineScaleSet>
          description: ''
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.VirtualMachineScaleSet>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VirtualMachineScaleSet} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VirtualMachineScaleSet} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachineScaleSet} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSets.getInstanceView
    name: 'getInstanceView(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the status of a VM scale set instance.
    syntax:
      content: >-
        function getInstanceView(resourceGroupName: string, vmScaleSetName:
        string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<azure-arm-compute -
            v10.0.0.VirtualMachineScaleSetInstanceView>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VirtualMachineScaleSetInstanceView} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VirtualMachineScaleSetInstanceView} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachineScaleSetInstanceView} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSets.getInstanceView_2
    name: >-
      getInstanceView(string, string, Object,
      ServiceCallback<VirtualMachineScaleSetInstanceView>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the status of a VM scale set instance.
    syntax:
      content: >-
        function getInstanceView(resourceGroupName: string, vmScaleSetName:
        string, options: Object, callback:
        ServiceCallback<VirtualMachineScaleSetInstanceView>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<azure-arm-compute -
              v10.0.0.VirtualMachineScaleSetInstanceView>
          description: ''
      return:
        type:
          - >-
            Promise<azure-arm-compute -
            v10.0.0.VirtualMachineScaleSetInstanceView>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VirtualMachineScaleSetInstanceView} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VirtualMachineScaleSetInstanceView} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachineScaleSetInstanceView} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSets.getInstanceView_1
    name: >-
      getInstanceView(string, string,
      ServiceCallback<VirtualMachineScaleSetInstanceView>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the status of a VM scale set instance.
    syntax:
      content: >-
        function getInstanceView(resourceGroupName: string, vmScaleSetName:
        string, callback: ServiceCallback<VirtualMachineScaleSetInstanceView>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<azure-arm-compute -
              v10.0.0.VirtualMachineScaleSetInstanceView>
          description: ''
      return:
        type:
          - >-
            Promise<azure-arm-compute -
            v10.0.0.VirtualMachineScaleSetInstanceView>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VirtualMachineScaleSetInstanceView} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VirtualMachineScaleSetInstanceView} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachineScaleSetInstanceView} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.VirtualMachineScaleSets.getInstanceViewWithHttpOperationResponse
    name: 'getInstanceViewWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the status of a VM scale set instance.
    syntax:
      content: >-
        function getInstanceViewWithHttpOperationResponse(resourceGroupName:
        string, vmScaleSetName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-compute -
            v10.0.0.VirtualMachineScaleSetInstanceView>>
        description: A promise is returned
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSets.getOSUpgradeHistory
    name: 'getOSUpgradeHistory(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets list of OS upgrades on a VM scale set instance.
    syntax:
      content: >-
        function getOSUpgradeHistory(resourceGroupName: string, vmScaleSetName:
        string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<azure-arm-compute -
            v10.0.0.VirtualMachineScaleSetListOSUpgradeHistory>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VirtualMachineScaleSetListOSUpgradeHistory} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VirtualMachineScaleSetListOSUpgradeHistory} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachineScaleSetListOSUpgradeHistory}
                               for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSets.getOSUpgradeHistory_2
    name: >-
      getOSUpgradeHistory(string, string, Object,
      ServiceCallback<VirtualMachineScaleSetListOSUpgradeHistory>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets list of OS upgrades on a VM scale set instance.
    syntax:
      content: >-
        function getOSUpgradeHistory(resourceGroupName: string, vmScaleSetName:
        string, options: Object, callback:
        ServiceCallback<VirtualMachineScaleSetListOSUpgradeHistory>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<azure-arm-compute -
              v10.0.0.VirtualMachineScaleSetListOSUpgradeHistory>
          description: ''
      return:
        type:
          - >-
            Promise<azure-arm-compute -
            v10.0.0.VirtualMachineScaleSetListOSUpgradeHistory>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VirtualMachineScaleSetListOSUpgradeHistory} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VirtualMachineScaleSetListOSUpgradeHistory} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachineScaleSetListOSUpgradeHistory}
                               for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSets.getOSUpgradeHistory_1
    name: >-
      getOSUpgradeHistory(string, string,
      ServiceCallback<VirtualMachineScaleSetListOSUpgradeHistory>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets list of OS upgrades on a VM scale set instance.
    syntax:
      content: >-
        function getOSUpgradeHistory(resourceGroupName: string, vmScaleSetName:
        string, callback:
        ServiceCallback<VirtualMachineScaleSetListOSUpgradeHistory>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<azure-arm-compute -
              v10.0.0.VirtualMachineScaleSetListOSUpgradeHistory>
          description: ''
      return:
        type:
          - >-
            Promise<azure-arm-compute -
            v10.0.0.VirtualMachineScaleSetListOSUpgradeHistory>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VirtualMachineScaleSetListOSUpgradeHistory} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VirtualMachineScaleSetListOSUpgradeHistory} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachineScaleSetListOSUpgradeHistory}
                               for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.VirtualMachineScaleSets.getOSUpgradeHistoryNext
    name: 'getOSUpgradeHistoryNext(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets list of OS upgrades on a VM scale set instance.
    syntax:
      content: 'function getOSUpgradeHistoryNext(nextPageLink: string, options?: Object)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<azure-arm-compute -
            v10.0.0.VirtualMachineScaleSetListOSUpgradeHistory>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VirtualMachineScaleSetListOSUpgradeHistory} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VirtualMachineScaleSetListOSUpgradeHistory} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachineScaleSetListOSUpgradeHistory}
                               for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.VirtualMachineScaleSets.getOSUpgradeHistoryNext_2
    name: >-
      getOSUpgradeHistoryNext(string, Object,
      ServiceCallback<VirtualMachineScaleSetListOSUpgradeHistory>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets list of OS upgrades on a VM scale set instance.
    syntax:
      content: >-
        function getOSUpgradeHistoryNext(nextPageLink: string, options: Object,
        callback: ServiceCallback<VirtualMachineScaleSetListOSUpgradeHistory>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<azure-arm-compute -
              v10.0.0.VirtualMachineScaleSetListOSUpgradeHistory>
          description: ''
      return:
        type:
          - >-
            Promise<azure-arm-compute -
            v10.0.0.VirtualMachineScaleSetListOSUpgradeHistory>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VirtualMachineScaleSetListOSUpgradeHistory} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VirtualMachineScaleSetListOSUpgradeHistory} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachineScaleSetListOSUpgradeHistory}
                               for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.VirtualMachineScaleSets.getOSUpgradeHistoryNext_1
    name: >-
      getOSUpgradeHistoryNext(string,
      ServiceCallback<VirtualMachineScaleSetListOSUpgradeHistory>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets list of OS upgrades on a VM scale set instance.
    syntax:
      content: >-
        function getOSUpgradeHistoryNext(nextPageLink: string, callback:
        ServiceCallback<VirtualMachineScaleSetListOSUpgradeHistory>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<azure-arm-compute -
              v10.0.0.VirtualMachineScaleSetListOSUpgradeHistory>
          description: ''
      return:
        type:
          - >-
            Promise<azure-arm-compute -
            v10.0.0.VirtualMachineScaleSetListOSUpgradeHistory>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VirtualMachineScaleSetListOSUpgradeHistory} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VirtualMachineScaleSetListOSUpgradeHistory} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachineScaleSetListOSUpgradeHistory}
                               for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.VirtualMachineScaleSets.getOSUpgradeHistoryNextWithHttpOperationResponse
    name: 'getOSUpgradeHistoryNextWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets list of OS upgrades on a VM scale set instance.
    syntax:
      content: >-
        function getOSUpgradeHistoryNextWithHttpOperationResponse(nextPageLink:
        string, options?: Object)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-compute -
            v10.0.0.VirtualMachineScaleSetListOSUpgradeHistory>>
        description: A promise is returned
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.VirtualMachineScaleSets.getOSUpgradeHistoryWithHttpOperationResponse
    name: 'getOSUpgradeHistoryWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets list of OS upgrades on a VM scale set instance.
    syntax:
      content: >-
        function getOSUpgradeHistoryWithHttpOperationResponse(resourceGroupName:
        string, vmScaleSetName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-compute -
            v10.0.0.VirtualMachineScaleSetListOSUpgradeHistory>>
        description: A promise is returned
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.VirtualMachineScaleSets.getWithHttpOperationResponse
    name: 'getWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Display information about a virtual machine scale set.
    syntax:
      content: >-
        function getWithHttpOperationResponse(resourceGroupName: string,
        vmScaleSetName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-compute -
            v10.0.0.VirtualMachineScaleSet>>
        description: A promise is returned
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSets.list
    name: 'list(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a list of all VM scale sets under a resource group.
    syntax:
      content: 'function list(resourceGroupName: string, options?: Object)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<azure-arm-compute -
            v10.0.0.VirtualMachineScaleSetListResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VirtualMachineScaleSetListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VirtualMachineScaleSetListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachineScaleSetListResult} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSets.list_2
    name: 'list(string, Object, ServiceCallback<VirtualMachineScaleSetListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a list of all VM scale sets under a resource group.
    syntax:
      content: >-
        function list(resourceGroupName: string, options: Object, callback:
        ServiceCallback<VirtualMachineScaleSetListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<azure-arm-compute -
              v10.0.0.VirtualMachineScaleSetListResult>
          description: ''
      return:
        type:
          - >-
            Promise<azure-arm-compute -
            v10.0.0.VirtualMachineScaleSetListResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VirtualMachineScaleSetListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VirtualMachineScaleSetListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachineScaleSetListResult} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSets.list_1
    name: 'list(string, ServiceCallback<VirtualMachineScaleSetListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a list of all VM scale sets under a resource group.
    syntax:
      content: >-
        function list(resourceGroupName: string, callback:
        ServiceCallback<VirtualMachineScaleSetListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<azure-arm-compute -
              v10.0.0.VirtualMachineScaleSetListResult>
          description: ''
      return:
        type:
          - >-
            Promise<azure-arm-compute -
            v10.0.0.VirtualMachineScaleSetListResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VirtualMachineScaleSetListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VirtualMachineScaleSetListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachineScaleSetListResult} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSets.listAll
    name: listAll(Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets a list of all VM Scale Sets in the subscription, regardless of the

      associated resource group. Use nextLink property in the response to get
      the

      next page of VM Scale Sets. Do this till nextLink is null to fetch all the

      VM Scale Sets.
    syntax:
      content: 'function listAll(options?: Object)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<azure-arm-compute -
            v10.0.0.VirtualMachineScaleSetListWithLinkResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VirtualMachineScaleSetListWithLinkResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VirtualMachineScaleSetListWithLinkResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachineScaleSetListWithLinkResult}
                               for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSets.listAll_2
    name: 'listAll(Object, ServiceCallback<VirtualMachineScaleSetListWithLinkResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets a list of all VM Scale Sets in the subscription, regardless of the

      associated resource group. Use nextLink property in the response to get
      the

      next page of VM Scale Sets. Do this till nextLink is null to fetch all the

      VM Scale Sets.
    syntax:
      content: >-
        function listAll(options: Object, callback:
        ServiceCallback<VirtualMachineScaleSetListWithLinkResult>)
      parameters:
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<azure-arm-compute -
              v10.0.0.VirtualMachineScaleSetListWithLinkResult>
          description: ''
      return:
        type:
          - >-
            Promise<azure-arm-compute -
            v10.0.0.VirtualMachineScaleSetListWithLinkResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VirtualMachineScaleSetListWithLinkResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VirtualMachineScaleSetListWithLinkResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachineScaleSetListWithLinkResult}
                               for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSets.listAll_1
    name: listAll(ServiceCallback<VirtualMachineScaleSetListWithLinkResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets a list of all VM Scale Sets in the subscription, regardless of the

      associated resource group. Use nextLink property in the response to get
      the

      next page of VM Scale Sets. Do this till nextLink is null to fetch all the

      VM Scale Sets.
    syntax:
      content: >-
        function listAll(callback:
        ServiceCallback<VirtualMachineScaleSetListWithLinkResult>)
      parameters:
        - id: callback
          type:
            - >-
              ServiceCallback<azure-arm-compute -
              v10.0.0.VirtualMachineScaleSetListWithLinkResult>
          description: ''
      return:
        type:
          - >-
            Promise<azure-arm-compute -
            v10.0.0.VirtualMachineScaleSetListWithLinkResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VirtualMachineScaleSetListWithLinkResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VirtualMachineScaleSetListWithLinkResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachineScaleSetListWithLinkResult}
                               for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSets.listAllNext
    name: 'listAllNext(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets a list of all VM Scale Sets in the subscription, regardless of the

      associated resource group. Use nextLink property in the response to get
      the

      next page of VM Scale Sets. Do this till nextLink is null to fetch all the

      VM Scale Sets.
    syntax:
      content: 'function listAllNext(nextPageLink: string, options?: Object)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<azure-arm-compute -
            v10.0.0.VirtualMachineScaleSetListWithLinkResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VirtualMachineScaleSetListWithLinkResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VirtualMachineScaleSetListWithLinkResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachineScaleSetListWithLinkResult}
                               for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSets.listAllNext_2
    name: >-
      listAllNext(string, Object,
      ServiceCallback<VirtualMachineScaleSetListWithLinkResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets a list of all VM Scale Sets in the subscription, regardless of the

      associated resource group. Use nextLink property in the response to get
      the

      next page of VM Scale Sets. Do this till nextLink is null to fetch all the

      VM Scale Sets.
    syntax:
      content: >-
        function listAllNext(nextPageLink: string, options: Object, callback:
        ServiceCallback<VirtualMachineScaleSetListWithLinkResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<azure-arm-compute -
              v10.0.0.VirtualMachineScaleSetListWithLinkResult>
          description: ''
      return:
        type:
          - >-
            Promise<azure-arm-compute -
            v10.0.0.VirtualMachineScaleSetListWithLinkResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VirtualMachineScaleSetListWithLinkResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VirtualMachineScaleSetListWithLinkResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachineScaleSetListWithLinkResult}
                               for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSets.listAllNext_1
    name: >-
      listAllNext(string,
      ServiceCallback<VirtualMachineScaleSetListWithLinkResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets a list of all VM Scale Sets in the subscription, regardless of the

      associated resource group. Use nextLink property in the response to get
      the

      next page of VM Scale Sets. Do this till nextLink is null to fetch all the

      VM Scale Sets.
    syntax:
      content: >-
        function listAllNext(nextPageLink: string, callback:
        ServiceCallback<VirtualMachineScaleSetListWithLinkResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<azure-arm-compute -
              v10.0.0.VirtualMachineScaleSetListWithLinkResult>
          description: ''
      return:
        type:
          - >-
            Promise<azure-arm-compute -
            v10.0.0.VirtualMachineScaleSetListWithLinkResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VirtualMachineScaleSetListWithLinkResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VirtualMachineScaleSetListWithLinkResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachineScaleSetListWithLinkResult}
                               for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.VirtualMachineScaleSets.listAllNextWithHttpOperationResponse
    name: 'listAllNextWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets a list of all VM Scale Sets in the subscription, regardless of the

      associated resource group. Use nextLink property in the response to get
      the

      next page of VM Scale Sets. Do this till nextLink is null to fetch all the

      VM Scale Sets.
    syntax:
      content: >-
        function listAllNextWithHttpOperationResponse(nextPageLink: string,
        options?: Object)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-compute -
            v10.0.0.VirtualMachineScaleSetListWithLinkResult>>
        description: A promise is returned
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.VirtualMachineScaleSets.listAllWithHttpOperationResponse
    name: listAllWithHttpOperationResponse(Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets a list of all VM Scale Sets in the subscription, regardless of the

      associated resource group. Use nextLink property in the response to get
      the

      next page of VM Scale Sets. Do this till nextLink is null to fetch all the

      VM Scale Sets.
    syntax:
      content: 'function listAllWithHttpOperationResponse(options?: Object)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-compute -
            v10.0.0.VirtualMachineScaleSetListWithLinkResult>>
        description: A promise is returned
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSets.listNext
    name: 'listNext(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a list of all VM scale sets under a resource group.
    syntax:
      content: 'function listNext(nextPageLink: string, options?: Object)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<azure-arm-compute -
            v10.0.0.VirtualMachineScaleSetListResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VirtualMachineScaleSetListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VirtualMachineScaleSetListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachineScaleSetListResult} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSets.listNext_2
    name: >-
      listNext(string, Object,
      ServiceCallback<VirtualMachineScaleSetListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a list of all VM scale sets under a resource group.
    syntax:
      content: >-
        function listNext(nextPageLink: string, options: Object, callback:
        ServiceCallback<VirtualMachineScaleSetListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<azure-arm-compute -
              v10.0.0.VirtualMachineScaleSetListResult>
          description: ''
      return:
        type:
          - >-
            Promise<azure-arm-compute -
            v10.0.0.VirtualMachineScaleSetListResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VirtualMachineScaleSetListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VirtualMachineScaleSetListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachineScaleSetListResult} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSets.listNext_1
    name: 'listNext(string, ServiceCallback<VirtualMachineScaleSetListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a list of all VM scale sets under a resource group.
    syntax:
      content: >-
        function listNext(nextPageLink: string, callback:
        ServiceCallback<VirtualMachineScaleSetListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<azure-arm-compute -
              v10.0.0.VirtualMachineScaleSetListResult>
          description: ''
      return:
        type:
          - >-
            Promise<azure-arm-compute -
            v10.0.0.VirtualMachineScaleSetListResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VirtualMachineScaleSetListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VirtualMachineScaleSetListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachineScaleSetListResult} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.VirtualMachineScaleSets.listNextWithHttpOperationResponse
    name: 'listNextWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a list of all VM scale sets under a resource group.
    syntax:
      content: >-
        function listNextWithHttpOperationResponse(nextPageLink: string,
        options?: Object)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-compute -
            v10.0.0.VirtualMachineScaleSetListResult>>
        description: A promise is returned
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSets.listSkus
    name: 'listSkus(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Gets a list of SKUs available for your VM scale set, including the minimum
      and maximum VM instances allowed for each SKU.
    syntax:
      content: >-
        function listSkus(resourceGroupName: string, vmScaleSetName: string,
        options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<azure-arm-compute -
            v10.0.0.VirtualMachineScaleSetListSkusResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VirtualMachineScaleSetListSkusResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VirtualMachineScaleSetListSkusResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachineScaleSetListSkusResult} for
                               more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSets.listSkus_2
    name: >-
      listSkus(string, string, Object,
      ServiceCallback<VirtualMachineScaleSetListSkusResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Gets a list of SKUs available for your VM scale set, including the minimum
      and maximum VM instances allowed for each SKU.
    syntax:
      content: >-
        function listSkus(resourceGroupName: string, vmScaleSetName: string,
        options: Object, callback:
        ServiceCallback<VirtualMachineScaleSetListSkusResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<azure-arm-compute -
              v10.0.0.VirtualMachineScaleSetListSkusResult>
          description: ''
      return:
        type:
          - >-
            Promise<azure-arm-compute -
            v10.0.0.VirtualMachineScaleSetListSkusResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VirtualMachineScaleSetListSkusResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VirtualMachineScaleSetListSkusResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachineScaleSetListSkusResult} for
                               more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSets.listSkus_1
    name: >-
      listSkus(string, string,
      ServiceCallback<VirtualMachineScaleSetListSkusResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Gets a list of SKUs available for your VM scale set, including the minimum
      and maximum VM instances allowed for each SKU.
    syntax:
      content: >-
        function listSkus(resourceGroupName: string, vmScaleSetName: string,
        callback: ServiceCallback<VirtualMachineScaleSetListSkusResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<azure-arm-compute -
              v10.0.0.VirtualMachineScaleSetListSkusResult>
          description: ''
      return:
        type:
          - >-
            Promise<azure-arm-compute -
            v10.0.0.VirtualMachineScaleSetListSkusResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VirtualMachineScaleSetListSkusResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VirtualMachineScaleSetListSkusResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachineScaleSetListSkusResult} for
                               more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSets.listSkusNext
    name: 'listSkusNext(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Gets a list of SKUs available for your VM scale set, including the minimum
      and maximum VM instances allowed for each SKU.
    syntax:
      content: 'function listSkusNext(nextPageLink: string, options?: Object)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<azure-arm-compute -
            v10.0.0.VirtualMachineScaleSetListSkusResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VirtualMachineScaleSetListSkusResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VirtualMachineScaleSetListSkusResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachineScaleSetListSkusResult} for
                               more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSets.listSkusNext_2
    name: >-
      listSkusNext(string, Object,
      ServiceCallback<VirtualMachineScaleSetListSkusResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Gets a list of SKUs available for your VM scale set, including the minimum
      and maximum VM instances allowed for each SKU.
    syntax:
      content: >-
        function listSkusNext(nextPageLink: string, options: Object, callback:
        ServiceCallback<VirtualMachineScaleSetListSkusResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<azure-arm-compute -
              v10.0.0.VirtualMachineScaleSetListSkusResult>
          description: ''
      return:
        type:
          - >-
            Promise<azure-arm-compute -
            v10.0.0.VirtualMachineScaleSetListSkusResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VirtualMachineScaleSetListSkusResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VirtualMachineScaleSetListSkusResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachineScaleSetListSkusResult} for
                               more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSets.listSkusNext_1
    name: >-
      listSkusNext(string,
      ServiceCallback<VirtualMachineScaleSetListSkusResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Gets a list of SKUs available for your VM scale set, including the minimum
      and maximum VM instances allowed for each SKU.
    syntax:
      content: >-
        function listSkusNext(nextPageLink: string, callback:
        ServiceCallback<VirtualMachineScaleSetListSkusResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<azure-arm-compute -
              v10.0.0.VirtualMachineScaleSetListSkusResult>
          description: ''
      return:
        type:
          - >-
            Promise<azure-arm-compute -
            v10.0.0.VirtualMachineScaleSetListSkusResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VirtualMachineScaleSetListSkusResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VirtualMachineScaleSetListSkusResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachineScaleSetListSkusResult} for
                               more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.VirtualMachineScaleSets.listSkusNextWithHttpOperationResponse
    name: 'listSkusNextWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Gets a list of SKUs available for your VM scale set, including the minimum
      and maximum VM instances allowed for each SKU.
    syntax:
      content: >-
        function listSkusNextWithHttpOperationResponse(nextPageLink: string,
        options?: Object)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-compute -
            v10.0.0.VirtualMachineScaleSetListSkusResult>>
        description: A promise is returned
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.VirtualMachineScaleSets.listSkusWithHttpOperationResponse
    name: 'listSkusWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Gets a list of SKUs available for your VM scale set, including the minimum
      and maximum VM instances allowed for each SKU.
    syntax:
      content: >-
        function listSkusWithHttpOperationResponse(resourceGroupName: string,
        vmScaleSetName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-compute -
            v10.0.0.VirtualMachineScaleSetListSkusResult>>
        description: A promise is returned
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.VirtualMachineScaleSets.listWithHttpOperationResponse
    name: 'listWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a list of all VM scale sets under a resource group.
    syntax:
      content: >-
        function listWithHttpOperationResponse(resourceGroupName: string,
        options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-compute -
            v10.0.0.VirtualMachineScaleSetListResult>>
        description: A promise is returned
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSets.performMaintenance
    name: 'performMaintenance(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Perform maintenance on one or more virtual machines in a VM scale set.

      Operation on instances which are not eligible for perform maintenance will

      be failed. Please refer to best practices for more details:

      https://docs.microsoft.com/en-us/azure/virtual-machine-scale-sets/virtual-machine-scale-sets-maintenance-notifications
    syntax:
      content: >-
        function performMaintenance(resourceGroupName: string, vmScaleSetName:
        string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSets.performMaintenance_2
    name: 'performMaintenance(string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Perform maintenance on one or more virtual machines in a VM scale set.

      Operation on instances which are not eligible for perform maintenance will

      be failed. Please refer to best practices for more details:

      https://docs.microsoft.com/en-us/azure/virtual-machine-scale-sets/virtual-machine-scale-sets-maintenance-notifications
    syntax:
      content: >-
        function performMaintenance(resourceGroupName: string, vmScaleSetName:
        string, options: Object, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSets.performMaintenance_1
    name: 'performMaintenance(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Perform maintenance on one or more virtual machines in a VM scale set.

      Operation on instances which are not eligible for perform maintenance will

      be failed. Please refer to best practices for more details:

      https://docs.microsoft.com/en-us/azure/virtual-machine-scale-sets/virtual-machine-scale-sets-maintenance-notifications
    syntax:
      content: >-
        function performMaintenance(resourceGroupName: string, vmScaleSetName:
        string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.VirtualMachineScaleSets.performMaintenanceWithHttpOperationResponse
    name: 'performMaintenanceWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Perform maintenance on one or more virtual machines in a VM scale set.

      Operation on instances which are not eligible for perform maintenance will

      be failed. Please refer to best practices for more details:

      https://docs.microsoft.com/en-us/azure/virtual-machine-scale-sets/virtual-machine-scale-sets-maintenance-notifications
    syntax:
      content: >-
        function performMaintenanceWithHttpOperationResponse(resourceGroupName:
        string, vmScaleSetName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
        description: A promise is returned
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSets.powerOff
    name: 'powerOff(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Power off (stop) one or more virtual machines in a VM scale set. Note that

      resources are still attached and you are getting charged for the
      resources.

      Instead, use deallocate to release resources and avoid charges.
    syntax:
      content: >-
        function powerOff(resourceGroupName: string, vmScaleSetName: string,
        options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSets.powerOff_2
    name: 'powerOff(string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Power off (stop) one or more virtual machines in a VM scale set. Note that

      resources are still attached and you are getting charged for the
      resources.

      Instead, use deallocate to release resources and avoid charges.
    syntax:
      content: >-
        function powerOff(resourceGroupName: string, vmScaleSetName: string,
        options: Object, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSets.powerOff_1
    name: 'powerOff(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Power off (stop) one or more virtual machines in a VM scale set. Note that

      resources are still attached and you are getting charged for the
      resources.

      Instead, use deallocate to release resources and avoid charges.
    syntax:
      content: >-
        function powerOff(resourceGroupName: string, vmScaleSetName: string,
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.VirtualMachineScaleSets.powerOffWithHttpOperationResponse
    name: 'powerOffWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Power off (stop) one or more virtual machines in a VM scale set. Note that

      resources are still attached and you are getting charged for the
      resources.

      Instead, use deallocate to release resources and avoid charges.
    syntax:
      content: >-
        function powerOffWithHttpOperationResponse(resourceGroupName: string,
        vmScaleSetName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
        description: A promise is returned
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSets.redeploy
    name: 'redeploy(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Redeploy one or more virtual machines in a VM scale set.
    syntax:
      content: >-
        function redeploy(resourceGroupName: string, vmScaleSetName: string,
        options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSets.redeploy_2
    name: 'redeploy(string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Redeploy one or more virtual machines in a VM scale set.
    syntax:
      content: >-
        function redeploy(resourceGroupName: string, vmScaleSetName: string,
        options: Object, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSets.redeploy_1
    name: 'redeploy(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Redeploy one or more virtual machines in a VM scale set.
    syntax:
      content: >-
        function redeploy(resourceGroupName: string, vmScaleSetName: string,
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.VirtualMachineScaleSets.redeployWithHttpOperationResponse
    name: 'redeployWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Redeploy one or more virtual machines in a VM scale set.
    syntax:
      content: >-
        function redeployWithHttpOperationResponse(resourceGroupName: string,
        vmScaleSetName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
        description: A promise is returned
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSets.reimage
    name: 'reimage(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Reimages (upgrade the operating system) one or more virtual machines in a
      VM

      scale set which don't have a ephemeral OS disk, for virtual machines who

      have a ephemeral OS disk the virtual machine is reset to initial state.
    syntax:
      content: >-
        function reimage(resourceGroupName: string, vmScaleSetName: string,
        options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSets.reimage_2
    name: 'reimage(string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Reimages (upgrade the operating system) one or more virtual machines in a
      VM

      scale set which don't have a ephemeral OS disk, for virtual machines who

      have a ephemeral OS disk the virtual machine is reset to initial state.
    syntax:
      content: >-
        function reimage(resourceGroupName: string, vmScaleSetName: string,
        options: Object, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSets.reimage_1
    name: 'reimage(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Reimages (upgrade the operating system) one or more virtual machines in a
      VM

      scale set which don't have a ephemeral OS disk, for virtual machines who

      have a ephemeral OS disk the virtual machine is reset to initial state.
    syntax:
      content: >-
        function reimage(resourceGroupName: string, vmScaleSetName: string,
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSets.reimageAll
    name: 'reimageAll(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Reimages all the disks ( including data disks ) in the virtual machines in
      a

      VM scale set. This operation is only supported for managed disks.
    syntax:
      content: >-
        function reimageAll(resourceGroupName: string, vmScaleSetName: string,
        options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSets.reimageAll_2
    name: 'reimageAll(string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Reimages all the disks ( including data disks ) in the virtual machines in
      a

      VM scale set. This operation is only supported for managed disks.
    syntax:
      content: >-
        function reimageAll(resourceGroupName: string, vmScaleSetName: string,
        options: Object, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSets.reimageAll_1
    name: 'reimageAll(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Reimages all the disks ( including data disks ) in the virtual machines in
      a

      VM scale set. This operation is only supported for managed disks.
    syntax:
      content: >-
        function reimageAll(resourceGroupName: string, vmScaleSetName: string,
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.VirtualMachineScaleSets.reimageAllWithHttpOperationResponse
    name: 'reimageAllWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Reimages all the disks ( including data disks ) in the virtual machines in
      a

      VM scale set. This operation is only supported for managed disks.
    syntax:
      content: >-
        function reimageAllWithHttpOperationResponse(resourceGroupName: string,
        vmScaleSetName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
        description: A promise is returned
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.VirtualMachineScaleSets.reimageWithHttpOperationResponse
    name: 'reimageWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Reimages (upgrade the operating system) one or more virtual machines in a
      VM

      scale set which don't have a ephemeral OS disk, for virtual machines who

      have a ephemeral OS disk the virtual machine is reset to initial state.
    syntax:
      content: >-
        function reimageWithHttpOperationResponse(resourceGroupName: string,
        vmScaleSetName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
        description: A promise is returned
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSets.restart
    name: 'restart(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Restarts one or more virtual machines in a VM scale set.
    syntax:
      content: >-
        function restart(resourceGroupName: string, vmScaleSetName: string,
        options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSets.restart_2
    name: 'restart(string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Restarts one or more virtual machines in a VM scale set.
    syntax:
      content: >-
        function restart(resourceGroupName: string, vmScaleSetName: string,
        options: Object, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSets.restart_1
    name: 'restart(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Restarts one or more virtual machines in a VM scale set.
    syntax:
      content: >-
        function restart(resourceGroupName: string, vmScaleSetName: string,
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.VirtualMachineScaleSets.restartWithHttpOperationResponse
    name: 'restartWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Restarts one or more virtual machines in a VM scale set.
    syntax:
      content: >-
        function restartWithHttpOperationResponse(resourceGroupName: string,
        vmScaleSetName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
        description: A promise is returned
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSets.start
    name: 'start(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Starts one or more virtual machines in a VM scale set.
    syntax:
      content: >-
        function start(resourceGroupName: string, vmScaleSetName: string,
        options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSets.start_2
    name: 'start(string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Starts one or more virtual machines in a VM scale set.
    syntax:
      content: >-
        function start(resourceGroupName: string, vmScaleSetName: string,
        options: Object, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSets.start_1
    name: 'start(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Starts one or more virtual machines in a VM scale set.
    syntax:
      content: >-
        function start(resourceGroupName: string, vmScaleSetName: string,
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.VirtualMachineScaleSets.startWithHttpOperationResponse
    name: 'startWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Starts one or more virtual machines in a VM scale set.
    syntax:
      content: >-
        function startWithHttpOperationResponse(resourceGroupName: string,
        vmScaleSetName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
        description: A promise is returned
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSets.update
    name: 'update(string, string, VirtualMachineScaleSetUpdate, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Update a VM scale set.
    syntax:
      content: >-
        function update(resourceGroupName: string, vmScaleSetName: string,
        parameters: VirtualMachineScaleSetUpdate, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set to create or
            update.
        - id: parameters
          type:
            - azure-arm-compute - v10.0.0.VirtualMachineScaleSetUpdate
          description: |
            The scale set object.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.VirtualMachineScaleSet>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VirtualMachineScaleSet} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VirtualMachineScaleSet} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachineScaleSet} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSets.update_2
    name: >-
      update(string, string, VirtualMachineScaleSetUpdate, Object,
      ServiceCallback<VirtualMachineScaleSet>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Update a VM scale set.
    syntax:
      content: >-
        function update(resourceGroupName: string, vmScaleSetName: string,
        parameters: VirtualMachineScaleSetUpdate, options: Object, callback:
        ServiceCallback<VirtualMachineScaleSet>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-compute - v10.0.0.VirtualMachineScaleSetUpdate
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<azure-arm-compute -
              v10.0.0.VirtualMachineScaleSet>
          description: ''
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.VirtualMachineScaleSet>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VirtualMachineScaleSet} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VirtualMachineScaleSet} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachineScaleSet} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSets.update_1
    name: >-
      update(string, string, VirtualMachineScaleSetUpdate,
      ServiceCallback<VirtualMachineScaleSet>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Update a VM scale set.
    syntax:
      content: >-
        function update(resourceGroupName: string, vmScaleSetName: string,
        parameters: VirtualMachineScaleSetUpdate, callback:
        ServiceCallback<VirtualMachineScaleSet>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-compute - v10.0.0.VirtualMachineScaleSetUpdate
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<azure-arm-compute -
              v10.0.0.VirtualMachineScaleSet>
          description: ''
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.VirtualMachineScaleSet>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VirtualMachineScaleSet} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VirtualMachineScaleSet} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachineScaleSet} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSets.updateInstances
    name: 'updateInstances(string, string, string[], Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Upgrades one or more virtual machines to the latest SKU set in the VM
      scale

      set model.
    syntax:
      content: >-
        function updateInstances(resourceGroupName: string, vmScaleSetName:
        string, instanceIds: string[], options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: instanceIds
          type:
            - 'string[]'
          description: |
            The virtual machine scale set instance ids.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSets.updateInstances_2
    name: 'updateInstances(string, string, string[], Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Upgrades one or more virtual machines to the latest SKU set in the VM
      scale

      set model.
    syntax:
      content: >-
        function updateInstances(resourceGroupName: string, vmScaleSetName:
        string, instanceIds: string[], options: Object, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: instanceIds
          type:
            - 'string[]'
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSets.updateInstances_1
    name: 'updateInstances(string, string, string[], ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Upgrades one or more virtual machines to the latest SKU set in the VM
      scale

      set model.
    syntax:
      content: >-
        function updateInstances(resourceGroupName: string, vmScaleSetName:
        string, instanceIds: string[], callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: instanceIds
          type:
            - 'string[]'
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.VirtualMachineScaleSets.updateInstancesWithHttpOperationResponse
    name: 'updateInstancesWithHttpOperationResponse(string, string, string[], Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Upgrades one or more virtual machines to the latest SKU set in the VM
      scale

      set model.
    syntax:
      content: >-
        function updateInstancesWithHttpOperationResponse(resourceGroupName:
        string, vmScaleSetName: string, instanceIds: string[], options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: instanceIds
          type:
            - 'string[]'
          description: |
            The virtual machine scale set instance ids.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
        description: A promise is returned
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.VirtualMachineScaleSets.updateWithHttpOperationResponse
    name: >-
      updateWithHttpOperationResponse(string, string,
      VirtualMachineScaleSetUpdate, Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: Update a VM scale set.
    syntax:
      content: >-
        function updateWithHttpOperationResponse(resourceGroupName: string,
        vmScaleSetName: string, parameters: VirtualMachineScaleSetUpdate,
        options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set to create or
            update.
        - id: parameters
          type:
            - azure-arm-compute - v10.0.0.VirtualMachineScaleSetUpdate
          description: |
            The scale set object.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-compute -
            v10.0.0.VirtualMachineScaleSet>>
        description: A promise is returned
    package: azure-arm-compute - v10
references:
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSet
    name: VirtualMachineScaleSet
    spec.typeScript:
      - name: VirtualMachineScaleSet
        fullName: VirtualMachineScaleSet
        uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSet
  - uid: Promise<azure-arm-compute - v10.0.0.VirtualMachineScaleSet>
    name: VirtualMachineScaleSet>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: VirtualMachineScaleSet
        fullName: VirtualMachineScaleSet
        uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSet
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-arm-compute - v10.0.0.VirtualMachineScaleSet>
    name: VirtualMachineScaleSet>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: VirtualMachineScaleSet
        fullName: VirtualMachineScaleSet
        uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSet
      - name: '>'
        fullName: '>'
  - uid: >-
      Promise<HttpOperationResponse<azure-arm-compute -
      v10.0.0.VirtualMachineScaleSet>>
    name: VirtualMachineScaleSet>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: VirtualMachineScaleSet
        fullName: VirtualMachineScaleSet
        uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSet
      - name: '>>'
        fullName: '>>'
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSetUpdate
    name: VirtualMachineScaleSetUpdate
    spec.typeScript:
      - name: VirtualMachineScaleSetUpdate
        fullName: VirtualMachineScaleSetUpdate
        uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSetUpdate
  - uid: Promise<azure-arm-compute - v10.0.0.RecoveryWalkResponse>
    name: RecoveryWalkResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: RecoveryWalkResponse
        fullName: RecoveryWalkResponse
        uid: azure-arm-compute - v10.0.0.RecoveryWalkResponse
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-arm-compute - v10.0.0.RecoveryWalkResponse>
    name: RecoveryWalkResponse>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: RecoveryWalkResponse
        fullName: RecoveryWalkResponse
        uid: azure-arm-compute - v10.0.0.RecoveryWalkResponse
      - name: '>'
        fullName: '>'
  - uid: >-
      Promise<HttpOperationResponse<azure-arm-compute -
      v10.0.0.RecoveryWalkResponse>>
    name: RecoveryWalkResponse>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: RecoveryWalkResponse
        fullName: RecoveryWalkResponse
        uid: azure-arm-compute - v10.0.0.RecoveryWalkResponse
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-arm-compute - v10.0.0.VirtualMachineScaleSetInstanceView>
    name: VirtualMachineScaleSetInstanceView>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: VirtualMachineScaleSetInstanceView
        fullName: VirtualMachineScaleSetInstanceView
        uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSetInstanceView
      - name: '>'
        fullName: '>'
  - uid: >-
      ServiceCallback<azure-arm-compute -
      v10.0.0.VirtualMachineScaleSetInstanceView>
    name: VirtualMachineScaleSetInstanceView>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: VirtualMachineScaleSetInstanceView
        fullName: VirtualMachineScaleSetInstanceView
        uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSetInstanceView
      - name: '>'
        fullName: '>'
  - uid: >-
      Promise<HttpOperationResponse<azure-arm-compute -
      v10.0.0.VirtualMachineScaleSetInstanceView>>
    name: VirtualMachineScaleSetInstanceView>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: VirtualMachineScaleSetInstanceView
        fullName: VirtualMachineScaleSetInstanceView
        uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSetInstanceView
      - name: '>>'
        fullName: '>>'
  - uid: >-
      Promise<azure-arm-compute -
      v10.0.0.VirtualMachineScaleSetListOSUpgradeHistory>
    name: VirtualMachineScaleSetListOSUpgradeHistory>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: VirtualMachineScaleSetListOSUpgradeHistory
        fullName: VirtualMachineScaleSetListOSUpgradeHistory
        uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSetListOSUpgradeHistory
      - name: '>'
        fullName: '>'
  - uid: >-
      ServiceCallback<azure-arm-compute -
      v10.0.0.VirtualMachineScaleSetListOSUpgradeHistory>
    name: VirtualMachineScaleSetListOSUpgradeHistory>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: VirtualMachineScaleSetListOSUpgradeHistory
        fullName: VirtualMachineScaleSetListOSUpgradeHistory
        uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSetListOSUpgradeHistory
      - name: '>'
        fullName: '>'
  - uid: >-
      Promise<HttpOperationResponse<azure-arm-compute -
      v10.0.0.VirtualMachineScaleSetListOSUpgradeHistory>>
    name: VirtualMachineScaleSetListOSUpgradeHistory>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: VirtualMachineScaleSetListOSUpgradeHistory
        fullName: VirtualMachineScaleSetListOSUpgradeHistory
        uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSetListOSUpgradeHistory
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-arm-compute - v10.0.0.VirtualMachineScaleSetListResult>
    name: VirtualMachineScaleSetListResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: VirtualMachineScaleSetListResult
        fullName: VirtualMachineScaleSetListResult
        uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSetListResult
      - name: '>'
        fullName: '>'
  - uid: >-
      ServiceCallback<azure-arm-compute -
      v10.0.0.VirtualMachineScaleSetListResult>
    name: VirtualMachineScaleSetListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: VirtualMachineScaleSetListResult
        fullName: VirtualMachineScaleSetListResult
        uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSetListResult
      - name: '>'
        fullName: '>'
  - uid: >-
      Promise<azure-arm-compute -
      v10.0.0.VirtualMachineScaleSetListWithLinkResult>
    name: VirtualMachineScaleSetListWithLinkResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: VirtualMachineScaleSetListWithLinkResult
        fullName: VirtualMachineScaleSetListWithLinkResult
        uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSetListWithLinkResult
      - name: '>'
        fullName: '>'
  - uid: >-
      ServiceCallback<azure-arm-compute -
      v10.0.0.VirtualMachineScaleSetListWithLinkResult>
    name: VirtualMachineScaleSetListWithLinkResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: VirtualMachineScaleSetListWithLinkResult
        fullName: VirtualMachineScaleSetListWithLinkResult
        uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSetListWithLinkResult
      - name: '>'
        fullName: '>'
  - uid: >-
      Promise<HttpOperationResponse<azure-arm-compute -
      v10.0.0.VirtualMachineScaleSetListWithLinkResult>>
    name: VirtualMachineScaleSetListWithLinkResult>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: VirtualMachineScaleSetListWithLinkResult
        fullName: VirtualMachineScaleSetListWithLinkResult
        uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSetListWithLinkResult
      - name: '>>'
        fullName: '>>'
  - uid: >-
      Promise<HttpOperationResponse<azure-arm-compute -
      v10.0.0.VirtualMachineScaleSetListResult>>
    name: VirtualMachineScaleSetListResult>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: VirtualMachineScaleSetListResult
        fullName: VirtualMachineScaleSetListResult
        uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSetListResult
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-arm-compute - v10.0.0.VirtualMachineScaleSetListSkusResult>
    name: VirtualMachineScaleSetListSkusResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: VirtualMachineScaleSetListSkusResult
        fullName: VirtualMachineScaleSetListSkusResult
        uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSetListSkusResult
      - name: '>'
        fullName: '>'
  - uid: >-
      ServiceCallback<azure-arm-compute -
      v10.0.0.VirtualMachineScaleSetListSkusResult>
    name: VirtualMachineScaleSetListSkusResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: VirtualMachineScaleSetListSkusResult
        fullName: VirtualMachineScaleSetListSkusResult
        uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSetListSkusResult
      - name: '>'
        fullName: '>'
  - uid: >-
      Promise<HttpOperationResponse<azure-arm-compute -
      v10.0.0.VirtualMachineScaleSetListSkusResult>>
    name: VirtualMachineScaleSetListSkusResult>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: VirtualMachineScaleSetListSkusResult
        fullName: VirtualMachineScaleSetListSkusResult
        uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSetListSkusResult
      - name: '>>'
        fullName: '>>'
