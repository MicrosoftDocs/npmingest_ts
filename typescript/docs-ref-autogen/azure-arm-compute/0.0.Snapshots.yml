### YamlMime:UniversalReference
items:
  - uid: azure-arm-compute - v10.0.0.Snapshots
    name: Snapshots
    fullName: Snapshots
    children:
      - azure-arm-compute - v10.0.0.Snapshots.beginCreateOrUpdate
      - azure-arm-compute - v10.0.0.Snapshots.beginCreateOrUpdate_2
      - azure-arm-compute - v10.0.0.Snapshots.beginCreateOrUpdate_1
      - >-
        azure-arm-compute -
        v10.0.0.Snapshots.beginCreateOrUpdateWithHttpOperationResponse
      - azure-arm-compute - v10.0.0.Snapshots.beginDeleteMethod
      - azure-arm-compute - v10.0.0.Snapshots.beginDeleteMethod_2
      - azure-arm-compute - v10.0.0.Snapshots.beginDeleteMethod_1
      - >-
        azure-arm-compute -
        v10.0.0.Snapshots.beginDeleteMethodWithHttpOperationResponse
      - azure-arm-compute - v10.0.0.Snapshots.beginGrantAccess
      - azure-arm-compute - v10.0.0.Snapshots.beginGrantAccess_2
      - azure-arm-compute - v10.0.0.Snapshots.beginGrantAccess_1
      - >-
        azure-arm-compute -
        v10.0.0.Snapshots.beginGrantAccessWithHttpOperationResponse
      - azure-arm-compute - v10.0.0.Snapshots.beginRevokeAccess
      - azure-arm-compute - v10.0.0.Snapshots.beginRevokeAccess_2
      - azure-arm-compute - v10.0.0.Snapshots.beginRevokeAccess_1
      - >-
        azure-arm-compute -
        v10.0.0.Snapshots.beginRevokeAccessWithHttpOperationResponse
      - azure-arm-compute - v10.0.0.Snapshots.beginUpdate
      - azure-arm-compute - v10.0.0.Snapshots.beginUpdate_2
      - azure-arm-compute - v10.0.0.Snapshots.beginUpdate_1
      - >-
        azure-arm-compute -
        v10.0.0.Snapshots.beginUpdateWithHttpOperationResponse
      - azure-arm-compute - v10.0.0.Snapshots.createOrUpdate
      - azure-arm-compute - v10.0.0.Snapshots.createOrUpdate_2
      - azure-arm-compute - v10.0.0.Snapshots.createOrUpdate_1
      - >-
        azure-arm-compute -
        v10.0.0.Snapshots.createOrUpdateWithHttpOperationResponse
      - azure-arm-compute - v10.0.0.Snapshots.deleteMethod
      - azure-arm-compute - v10.0.0.Snapshots.deleteMethod_2
      - azure-arm-compute - v10.0.0.Snapshots.deleteMethod_1
      - >-
        azure-arm-compute -
        v10.0.0.Snapshots.deleteMethodWithHttpOperationResponse
      - azure-arm-compute - v10.0.0.Snapshots.get
      - azure-arm-compute - v10.0.0.Snapshots.get_2
      - azure-arm-compute - v10.0.0.Snapshots.get_1
      - azure-arm-compute - v10.0.0.Snapshots.getWithHttpOperationResponse
      - azure-arm-compute - v10.0.0.Snapshots.grantAccess
      - azure-arm-compute - v10.0.0.Snapshots.grantAccess_2
      - azure-arm-compute - v10.0.0.Snapshots.grantAccess_1
      - >-
        azure-arm-compute -
        v10.0.0.Snapshots.grantAccessWithHttpOperationResponse
      - azure-arm-compute - v10.0.0.Snapshots.list
      - azure-arm-compute - v10.0.0.Snapshots.list_2
      - azure-arm-compute - v10.0.0.Snapshots.list_1
      - azure-arm-compute - v10.0.0.Snapshots.listByResourceGroup
      - azure-arm-compute - v10.0.0.Snapshots.listByResourceGroup_2
      - azure-arm-compute - v10.0.0.Snapshots.listByResourceGroup_1
      - azure-arm-compute - v10.0.0.Snapshots.listByResourceGroupNext
      - azure-arm-compute - v10.0.0.Snapshots.listByResourceGroupNext_2
      - azure-arm-compute - v10.0.0.Snapshots.listByResourceGroupNext_1
      - >-
        azure-arm-compute -
        v10.0.0.Snapshots.listByResourceGroupNextWithHttpOperationResponse
      - >-
        azure-arm-compute -
        v10.0.0.Snapshots.listByResourceGroupWithHttpOperationResponse
      - azure-arm-compute - v10.0.0.Snapshots.listNext
      - azure-arm-compute - v10.0.0.Snapshots.listNext_2
      - azure-arm-compute - v10.0.0.Snapshots.listNext_1
      - azure-arm-compute - v10.0.0.Snapshots.listNextWithHttpOperationResponse
      - azure-arm-compute - v10.0.0.Snapshots.listWithHttpOperationResponse
      - azure-arm-compute - v10.0.0.Snapshots.revokeAccess
      - azure-arm-compute - v10.0.0.Snapshots.revokeAccess_2
      - azure-arm-compute - v10.0.0.Snapshots.revokeAccess_1
      - >-
        azure-arm-compute -
        v10.0.0.Snapshots.revokeAccessWithHttpOperationResponse
      - azure-arm-compute - v10.0.0.Snapshots.update
      - azure-arm-compute - v10.0.0.Snapshots.update_2
      - azure-arm-compute - v10.0.0.Snapshots.update_1
      - azure-arm-compute - v10.0.0.Snapshots.updateWithHttpOperationResponse
    langs:
      - typeScript
    type: interface
    summary: ''
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.Snapshots.beginCreateOrUpdate
    name: 'beginCreateOrUpdate(string, string, Snapshot, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates or updates a snapshot.
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string, snapshotName:
        string, snapshot: Snapshot, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: snapshotName
          type:
            - string
          description: >
            The name of the snapshot that is being created.

            The name can't be changed after the snapshot is created. Supported

            characters for the name are a-z, A-Z, 0-9 and _. The max name length
            is 80

            characters.
        - id: snapshot
          type:
            - azure-arm-compute - v10.0.0.Snapshot
          description: |
            Snapshot object supplied in the body of the Put
            disk operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.Snapshot>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {Snapshot} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {Snapshot} [result]   - The deserialized result object if an error did not occur.
                               See {@link Snapshot} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.Snapshots.beginCreateOrUpdate_2
    name: >-
      beginCreateOrUpdate(string, string, Snapshot, Object,
      ServiceCallback<Snapshot>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates or updates a snapshot.
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string, snapshotName:
        string, snapshot: Snapshot, options: Object, callback:
        ServiceCallback<Snapshot>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: snapshotName
          type:
            - string
          description: ''
        - id: snapshot
          type:
            - azure-arm-compute - v10.0.0.Snapshot
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-compute - v10.0.0.Snapshot>
          description: ''
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.Snapshot>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {Snapshot} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {Snapshot} [result]   - The deserialized result object if an error did not occur.
                               See {@link Snapshot} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.Snapshots.beginCreateOrUpdate_1
    name: 'beginCreateOrUpdate(string, string, Snapshot, ServiceCallback<Snapshot>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates or updates a snapshot.
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string, snapshotName:
        string, snapshot: Snapshot, callback: ServiceCallback<Snapshot>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: snapshotName
          type:
            - string
          description: ''
        - id: snapshot
          type:
            - azure-arm-compute - v10.0.0.Snapshot
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-compute - v10.0.0.Snapshot>
          description: ''
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.Snapshot>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {Snapshot} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {Snapshot} [result]   - The deserialized result object if an error did not occur.
                               See {@link Snapshot} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.Snapshots.beginCreateOrUpdateWithHttpOperationResponse
    name: >-
      beginCreateOrUpdateWithHttpOperationResponse(string, string, Snapshot,
      Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates or updates a snapshot.
    syntax:
      content: >-
        function beginCreateOrUpdateWithHttpOperationResponse(resourceGroupName:
        string, snapshotName: string, snapshot: Snapshot, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: snapshotName
          type:
            - string
          description: >
            The name of the snapshot that is being created.

            The name can't be changed after the snapshot is created. Supported

            characters for the name are a-z, A-Z, 0-9 and _. The max name length
            is 80

            characters.
        - id: snapshot
          type:
            - azure-arm-compute - v10.0.0.Snapshot
          description: |
            Snapshot object supplied in the body of the Put
            disk operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-arm-compute - v10.0.0.Snapshot>>
        description: A promise is returned
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.Snapshots.beginDeleteMethod
    name: 'beginDeleteMethod(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes a snapshot.
    syntax:
      content: >-
        function beginDeleteMethod(resourceGroupName: string, snapshotName:
        string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: snapshotName
          type:
            - string
          description: >
            The name of the snapshot that is being created.

            The name can't be changed after the snapshot is created. Supported

            characters for the name are a-z, A-Z, 0-9 and _. The max name length
            is 80

            characters.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.Snapshots.beginDeleteMethod_2
    name: 'beginDeleteMethod(string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes a snapshot.
    syntax:
      content: >-
        function beginDeleteMethod(resourceGroupName: string, snapshotName:
        string, options: Object, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: snapshotName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.Snapshots.beginDeleteMethod_1
    name: 'beginDeleteMethod(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes a snapshot.
    syntax:
      content: >-
        function beginDeleteMethod(resourceGroupName: string, snapshotName:
        string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: snapshotName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.Snapshots.beginDeleteMethodWithHttpOperationResponse
    name: 'beginDeleteMethodWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes a snapshot.
    syntax:
      content: >-
        function beginDeleteMethodWithHttpOperationResponse(resourceGroupName:
        string, snapshotName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: snapshotName
          type:
            - string
          description: >
            The name of the snapshot that is being created.

            The name can't be changed after the snapshot is created. Supported

            characters for the name are a-z, A-Z, 0-9 and _. The max name length
            is 80

            characters.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
        description: A promise is returned
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.Snapshots.beginGrantAccess
    name: 'beginGrantAccess(string, string, GrantAccessData, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Grants access to a snapshot.
    syntax:
      content: >-
        function beginGrantAccess(resourceGroupName: string, snapshotName:
        string, grantAccessData: GrantAccessData, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: snapshotName
          type:
            - string
          description: >
            The name of the snapshot that is being created.

            The name can't be changed after the snapshot is created. Supported

            characters for the name are a-z, A-Z, 0-9 and _. The max name length
            is 80

            characters.
        - id: grantAccessData
          type:
            - azure-arm-compute - v10.0.0.GrantAccessData
          description: |
            Access data object supplied in the body of
            the get snapshot access operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.AccessUri>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {AccessUri} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {AccessUri} [result]   - The deserialized result object if an error did not occur.
                               See {@link AccessUri} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.Snapshots.beginGrantAccess_2
    name: >-
      beginGrantAccess(string, string, GrantAccessData, Object,
      ServiceCallback<AccessUri>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Grants access to a snapshot.
    syntax:
      content: >-
        function beginGrantAccess(resourceGroupName: string, snapshotName:
        string, grantAccessData: GrantAccessData, options: Object, callback:
        ServiceCallback<AccessUri>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: snapshotName
          type:
            - string
          description: ''
        - id: grantAccessData
          type:
            - azure-arm-compute - v10.0.0.GrantAccessData
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-compute - v10.0.0.AccessUri>
          description: ''
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.AccessUri>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {AccessUri} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {AccessUri} [result]   - The deserialized result object if an error did not occur.
                               See {@link AccessUri} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.Snapshots.beginGrantAccess_1
    name: >-
      beginGrantAccess(string, string, GrantAccessData,
      ServiceCallback<AccessUri>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Grants access to a snapshot.
    syntax:
      content: >-
        function beginGrantAccess(resourceGroupName: string, snapshotName:
        string, grantAccessData: GrantAccessData, callback:
        ServiceCallback<AccessUri>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: snapshotName
          type:
            - string
          description: ''
        - id: grantAccessData
          type:
            - azure-arm-compute - v10.0.0.GrantAccessData
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-compute - v10.0.0.AccessUri>
          description: ''
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.AccessUri>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {AccessUri} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {AccessUri} [result]   - The deserialized result object if an error did not occur.
                               See {@link AccessUri} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.Snapshots.beginGrantAccessWithHttpOperationResponse
    name: >-
      beginGrantAccessWithHttpOperationResponse(string, string, GrantAccessData,
      Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: Grants access to a snapshot.
    syntax:
      content: >-
        function beginGrantAccessWithHttpOperationResponse(resourceGroupName:
        string, snapshotName: string, grantAccessData: GrantAccessData,
        options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: snapshotName
          type:
            - string
          description: >
            The name of the snapshot that is being created.

            The name can't be changed after the snapshot is created. Supported

            characters for the name are a-z, A-Z, 0-9 and _. The max name length
            is 80

            characters.
        - id: grantAccessData
          type:
            - azure-arm-compute - v10.0.0.GrantAccessData
          description: |
            Access data object supplied in the body of
            the get snapshot access operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-compute -
            v10.0.0.AccessUri>>
        description: A promise is returned
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.Snapshots.beginRevokeAccess
    name: 'beginRevokeAccess(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Revokes access to a snapshot.
    syntax:
      content: >-
        function beginRevokeAccess(resourceGroupName: string, snapshotName:
        string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: snapshotName
          type:
            - string
          description: >
            The name of the snapshot that is being created.

            The name can't be changed after the snapshot is created. Supported

            characters for the name are a-z, A-Z, 0-9 and _. The max name length
            is 80

            characters.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.Snapshots.beginRevokeAccess_2
    name: 'beginRevokeAccess(string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Revokes access to a snapshot.
    syntax:
      content: >-
        function beginRevokeAccess(resourceGroupName: string, snapshotName:
        string, options: Object, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: snapshotName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.Snapshots.beginRevokeAccess_1
    name: 'beginRevokeAccess(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Revokes access to a snapshot.
    syntax:
      content: >-
        function beginRevokeAccess(resourceGroupName: string, snapshotName:
        string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: snapshotName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.Snapshots.beginRevokeAccessWithHttpOperationResponse
    name: 'beginRevokeAccessWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Revokes access to a snapshot.
    syntax:
      content: >-
        function beginRevokeAccessWithHttpOperationResponse(resourceGroupName:
        string, snapshotName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: snapshotName
          type:
            - string
          description: >
            The name of the snapshot that is being created.

            The name can't be changed after the snapshot is created. Supported

            characters for the name are a-z, A-Z, 0-9 and _. The max name length
            is 80

            characters.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
        description: A promise is returned
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.Snapshots.beginUpdate
    name: 'beginUpdate(string, string, SnapshotUpdate, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates (patches) a snapshot.
    syntax:
      content: >-
        function beginUpdate(resourceGroupName: string, snapshotName: string,
        snapshot: SnapshotUpdate, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: snapshotName
          type:
            - string
          description: >
            The name of the snapshot that is being created.

            The name can't be changed after the snapshot is created. Supported

            characters for the name are a-z, A-Z, 0-9 and _. The max name length
            is 80

            characters.
        - id: snapshot
          type:
            - azure-arm-compute - v10.0.0.SnapshotUpdate
          description: |
            Snapshot object supplied in the body of the Patch
            snapshot operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.Snapshot>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {Snapshot} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {Snapshot} [result]   - The deserialized result object if an error did not occur.
                               See {@link Snapshot} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.Snapshots.beginUpdate_2
    name: >-
      beginUpdate(string, string, SnapshotUpdate, Object,
      ServiceCallback<Snapshot>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates (patches) a snapshot.
    syntax:
      content: >-
        function beginUpdate(resourceGroupName: string, snapshotName: string,
        snapshot: SnapshotUpdate, options: Object, callback:
        ServiceCallback<Snapshot>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: snapshotName
          type:
            - string
          description: ''
        - id: snapshot
          type:
            - azure-arm-compute - v10.0.0.SnapshotUpdate
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-compute - v10.0.0.Snapshot>
          description: ''
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.Snapshot>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {Snapshot} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {Snapshot} [result]   - The deserialized result object if an error did not occur.
                               See {@link Snapshot} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.Snapshots.beginUpdate_1
    name: 'beginUpdate(string, string, SnapshotUpdate, ServiceCallback<Snapshot>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates (patches) a snapshot.
    syntax:
      content: >-
        function beginUpdate(resourceGroupName: string, snapshotName: string,
        snapshot: SnapshotUpdate, callback: ServiceCallback<Snapshot>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: snapshotName
          type:
            - string
          description: ''
        - id: snapshot
          type:
            - azure-arm-compute - v10.0.0.SnapshotUpdate
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-compute - v10.0.0.Snapshot>
          description: ''
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.Snapshot>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {Snapshot} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {Snapshot} [result]   - The deserialized result object if an error did not occur.
                               See {@link Snapshot} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.Snapshots.beginUpdateWithHttpOperationResponse
    name: >-
      beginUpdateWithHttpOperationResponse(string, string, SnapshotUpdate,
      Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates (patches) a snapshot.
    syntax:
      content: >-
        function beginUpdateWithHttpOperationResponse(resourceGroupName: string,
        snapshotName: string, snapshot: SnapshotUpdate, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: snapshotName
          type:
            - string
          description: >
            The name of the snapshot that is being created.

            The name can't be changed after the snapshot is created. Supported

            characters for the name are a-z, A-Z, 0-9 and _. The max name length
            is 80

            characters.
        - id: snapshot
          type:
            - azure-arm-compute - v10.0.0.SnapshotUpdate
          description: |
            Snapshot object supplied in the body of the Patch
            snapshot operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-arm-compute - v10.0.0.Snapshot>>
        description: A promise is returned
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.Snapshots.createOrUpdate
    name: 'createOrUpdate(string, string, Snapshot, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates or updates a snapshot.
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, snapshotName: string,
        snapshot: Snapshot, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: snapshotName
          type:
            - string
          description: >
            The name of the snapshot that is being created.

            The name can't be changed after the snapshot is created. Supported

            characters for the name are a-z, A-Z, 0-9 and _. The max name length
            is 80

            characters.
        - id: snapshot
          type:
            - azure-arm-compute - v10.0.0.Snapshot
          description: |
            Snapshot object supplied in the body of the Put
            disk operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.Snapshot>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {Snapshot} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {Snapshot} [result]   - The deserialized result object if an error did not occur.
                               See {@link Snapshot} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.Snapshots.createOrUpdate_2
    name: >-
      createOrUpdate(string, string, Snapshot, Object,
      ServiceCallback<Snapshot>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates or updates a snapshot.
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, snapshotName: string,
        snapshot: Snapshot, options: Object, callback:
        ServiceCallback<Snapshot>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: snapshotName
          type:
            - string
          description: ''
        - id: snapshot
          type:
            - azure-arm-compute - v10.0.0.Snapshot
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-compute - v10.0.0.Snapshot>
          description: ''
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.Snapshot>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {Snapshot} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {Snapshot} [result]   - The deserialized result object if an error did not occur.
                               See {@link Snapshot} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.Snapshots.createOrUpdate_1
    name: 'createOrUpdate(string, string, Snapshot, ServiceCallback<Snapshot>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates or updates a snapshot.
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, snapshotName: string,
        snapshot: Snapshot, callback: ServiceCallback<Snapshot>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: snapshotName
          type:
            - string
          description: ''
        - id: snapshot
          type:
            - azure-arm-compute - v10.0.0.Snapshot
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-compute - v10.0.0.Snapshot>
          description: ''
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.Snapshot>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {Snapshot} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {Snapshot} [result]   - The deserialized result object if an error did not occur.
                               See {@link Snapshot} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.Snapshots.createOrUpdateWithHttpOperationResponse
    name: 'createOrUpdateWithHttpOperationResponse(string, string, Snapshot, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates or updates a snapshot.
    syntax:
      content: >-
        function createOrUpdateWithHttpOperationResponse(resourceGroupName:
        string, snapshotName: string, snapshot: Snapshot, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: snapshotName
          type:
            - string
          description: >
            The name of the snapshot that is being created.

            The name can't be changed after the snapshot is created. Supported

            characters for the name are a-z, A-Z, 0-9 and _. The max name length
            is 80

            characters.
        - id: snapshot
          type:
            - azure-arm-compute - v10.0.0.Snapshot
          description: |
            Snapshot object supplied in the body of the Put
            disk operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-arm-compute - v10.0.0.Snapshot>>
        description: A promise is returned
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.Snapshots.deleteMethod
    name: 'deleteMethod(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes a snapshot.
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, snapshotName: string,
        options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: snapshotName
          type:
            - string
          description: >
            The name of the snapshot that is being created.

            The name can't be changed after the snapshot is created. Supported

            characters for the name are a-z, A-Z, 0-9 and _. The max name length
            is 80

            characters.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.Snapshots.deleteMethod_2
    name: 'deleteMethod(string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes a snapshot.
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, snapshotName: string,
        options: Object, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: snapshotName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.Snapshots.deleteMethod_1
    name: 'deleteMethod(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes a snapshot.
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, snapshotName: string,
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: snapshotName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.Snapshots.deleteMethodWithHttpOperationResponse
    name: 'deleteMethodWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes a snapshot.
    syntax:
      content: >-
        function deleteMethodWithHttpOperationResponse(resourceGroupName:
        string, snapshotName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: snapshotName
          type:
            - string
          description: >
            The name of the snapshot that is being created.

            The name can't be changed after the snapshot is created. Supported

            characters for the name are a-z, A-Z, 0-9 and _. The max name length
            is 80

            characters.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
        description: A promise is returned
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.Snapshots.get
    name: 'get(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets information about a snapshot.
    syntax:
      content: >-
        function get(resourceGroupName: string, snapshotName: string, options?:
        Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: snapshotName
          type:
            - string
          description: >
            The name of the snapshot that is being created.

            The name can't be changed after the snapshot is created. Supported

            characters for the name are a-z, A-Z, 0-9 and _. The max name length
            is 80

            characters.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.Snapshot>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {Snapshot} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {Snapshot} [result]   - The deserialized result object if an error did not occur.
                               See {@link Snapshot} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.Snapshots.get_2
    name: 'get(string, string, Object, ServiceCallback<Snapshot>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets information about a snapshot.
    syntax:
      content: >-
        function get(resourceGroupName: string, snapshotName: string, options:
        Object, callback: ServiceCallback<Snapshot>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: snapshotName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-compute - v10.0.0.Snapshot>
          description: ''
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.Snapshot>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {Snapshot} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {Snapshot} [result]   - The deserialized result object if an error did not occur.
                               See {@link Snapshot} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.Snapshots.get_1
    name: 'get(string, string, ServiceCallback<Snapshot>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets information about a snapshot.
    syntax:
      content: >-
        function get(resourceGroupName: string, snapshotName: string, callback:
        ServiceCallback<Snapshot>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: snapshotName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-compute - v10.0.0.Snapshot>
          description: ''
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.Snapshot>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {Snapshot} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {Snapshot} [result]   - The deserialized result object if an error did not occur.
                               See {@link Snapshot} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.Snapshots.getWithHttpOperationResponse
    name: 'getWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets information about a snapshot.
    syntax:
      content: >-
        function getWithHttpOperationResponse(resourceGroupName: string,
        snapshotName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: snapshotName
          type:
            - string
          description: >
            The name of the snapshot that is being created.

            The name can't be changed after the snapshot is created. Supported

            characters for the name are a-z, A-Z, 0-9 and _. The max name length
            is 80

            characters.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-arm-compute - v10.0.0.Snapshot>>
        description: A promise is returned
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.Snapshots.grantAccess
    name: 'grantAccess(string, string, GrantAccessData, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Grants access to a snapshot.
    syntax:
      content: >-
        function grantAccess(resourceGroupName: string, snapshotName: string,
        grantAccessData: GrantAccessData, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: snapshotName
          type:
            - string
          description: >
            The name of the snapshot that is being created.

            The name can't be changed after the snapshot is created. Supported

            characters for the name are a-z, A-Z, 0-9 and _. The max name length
            is 80

            characters.
        - id: grantAccessData
          type:
            - azure-arm-compute - v10.0.0.GrantAccessData
          description: |
            Access data object supplied in the body of
            the get snapshot access operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.AccessUri>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {AccessUri} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {AccessUri} [result]   - The deserialized result object if an error did not occur.
                               See {@link AccessUri} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.Snapshots.grantAccess_2
    name: >-
      grantAccess(string, string, GrantAccessData, Object,
      ServiceCallback<AccessUri>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Grants access to a snapshot.
    syntax:
      content: >-
        function grantAccess(resourceGroupName: string, snapshotName: string,
        grantAccessData: GrantAccessData, options: Object, callback:
        ServiceCallback<AccessUri>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: snapshotName
          type:
            - string
          description: ''
        - id: grantAccessData
          type:
            - azure-arm-compute - v10.0.0.GrantAccessData
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-compute - v10.0.0.AccessUri>
          description: ''
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.AccessUri>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {AccessUri} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {AccessUri} [result]   - The deserialized result object if an error did not occur.
                               See {@link AccessUri} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.Snapshots.grantAccess_1
    name: 'grantAccess(string, string, GrantAccessData, ServiceCallback<AccessUri>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Grants access to a snapshot.
    syntax:
      content: >-
        function grantAccess(resourceGroupName: string, snapshotName: string,
        grantAccessData: GrantAccessData, callback: ServiceCallback<AccessUri>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: snapshotName
          type:
            - string
          description: ''
        - id: grantAccessData
          type:
            - azure-arm-compute - v10.0.0.GrantAccessData
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-compute - v10.0.0.AccessUri>
          description: ''
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.AccessUri>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {AccessUri} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {AccessUri} [result]   - The deserialized result object if an error did not occur.
                               See {@link AccessUri} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.Snapshots.grantAccessWithHttpOperationResponse
    name: >-
      grantAccessWithHttpOperationResponse(string, string, GrantAccessData,
      Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: Grants access to a snapshot.
    syntax:
      content: >-
        function grantAccessWithHttpOperationResponse(resourceGroupName: string,
        snapshotName: string, grantAccessData: GrantAccessData, options?:
        Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: snapshotName
          type:
            - string
          description: >
            The name of the snapshot that is being created.

            The name can't be changed after the snapshot is created. Supported

            characters for the name are a-z, A-Z, 0-9 and _. The max name length
            is 80

            characters.
        - id: grantAccessData
          type:
            - azure-arm-compute - v10.0.0.GrantAccessData
          description: |
            Access data object supplied in the body of
            the get snapshot access operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-compute -
            v10.0.0.AccessUri>>
        description: A promise is returned
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.Snapshots.list
    name: list(Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists snapshots under a subscription.
    syntax:
      content: 'function list(options?: Object)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.SnapshotList>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {SnapshotList} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {SnapshotList} [result]   - The deserialized result object if an error did not occur.
                               See {@link SnapshotList} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.Snapshots.list_2
    name: 'list(Object, ServiceCallback<SnapshotList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists snapshots under a subscription.
    syntax:
      content: 'function list(options: Object, callback: ServiceCallback<SnapshotList>)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-compute - v10.0.0.SnapshotList>
          description: ''
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.SnapshotList>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {SnapshotList} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {SnapshotList} [result]   - The deserialized result object if an error did not occur.
                               See {@link SnapshotList} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.Snapshots.list_1
    name: list(ServiceCallback<SnapshotList>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists snapshots under a subscription.
    syntax:
      content: 'function list(callback: ServiceCallback<SnapshotList>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<azure-arm-compute - v10.0.0.SnapshotList>
          description: ''
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.SnapshotList>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {SnapshotList} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {SnapshotList} [result]   - The deserialized result object if an error did not occur.
                               See {@link SnapshotList} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.Snapshots.listByResourceGroup
    name: 'listByResourceGroup(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists snapshots under a resource group.
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options?:
        Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.SnapshotList>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {SnapshotList} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {SnapshotList} [result]   - The deserialized result object if an error did not occur.
                               See {@link SnapshotList} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.Snapshots.listByResourceGroup_2
    name: 'listByResourceGroup(string, Object, ServiceCallback<SnapshotList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists snapshots under a resource group.
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options: Object,
        callback: ServiceCallback<SnapshotList>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-compute - v10.0.0.SnapshotList>
          description: ''
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.SnapshotList>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {SnapshotList} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {SnapshotList} [result]   - The deserialized result object if an error did not occur.
                               See {@link SnapshotList} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.Snapshots.listByResourceGroup_1
    name: 'listByResourceGroup(string, ServiceCallback<SnapshotList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists snapshots under a resource group.
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, callback:
        ServiceCallback<SnapshotList>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-compute - v10.0.0.SnapshotList>
          description: ''
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.SnapshotList>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {SnapshotList} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {SnapshotList} [result]   - The deserialized result object if an error did not occur.
                               See {@link SnapshotList} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.Snapshots.listByResourceGroupNext
    name: 'listByResourceGroupNext(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists snapshots under a resource group.
    syntax:
      content: 'function listByResourceGroupNext(nextPageLink: string, options?: Object)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.SnapshotList>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {SnapshotList} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {SnapshotList} [result]   - The deserialized result object if an error did not occur.
                               See {@link SnapshotList} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.Snapshots.listByResourceGroupNext_2
    name: 'listByResourceGroupNext(string, Object, ServiceCallback<SnapshotList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists snapshots under a resource group.
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, options: Object,
        callback: ServiceCallback<SnapshotList>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-compute - v10.0.0.SnapshotList>
          description: ''
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.SnapshotList>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {SnapshotList} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {SnapshotList} [result]   - The deserialized result object if an error did not occur.
                               See {@link SnapshotList} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.Snapshots.listByResourceGroupNext_1
    name: 'listByResourceGroupNext(string, ServiceCallback<SnapshotList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists snapshots under a resource group.
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, callback:
        ServiceCallback<SnapshotList>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-compute - v10.0.0.SnapshotList>
          description: ''
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.SnapshotList>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {SnapshotList} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {SnapshotList} [result]   - The deserialized result object if an error did not occur.
                               See {@link SnapshotList} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.Snapshots.listByResourceGroupNextWithHttpOperationResponse
    name: 'listByResourceGroupNextWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists snapshots under a resource group.
    syntax:
      content: >-
        function listByResourceGroupNextWithHttpOperationResponse(nextPageLink:
        string, options?: Object)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-compute -
            v10.0.0.SnapshotList>>
        description: A promise is returned
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.Snapshots.listByResourceGroupWithHttpOperationResponse
    name: 'listByResourceGroupWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists snapshots under a resource group.
    syntax:
      content: >-
        function listByResourceGroupWithHttpOperationResponse(resourceGroupName:
        string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-compute -
            v10.0.0.SnapshotList>>
        description: A promise is returned
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.Snapshots.listNext
    name: 'listNext(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists snapshots under a subscription.
    syntax:
      content: 'function listNext(nextPageLink: string, options?: Object)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.SnapshotList>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {SnapshotList} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {SnapshotList} [result]   - The deserialized result object if an error did not occur.
                               See {@link SnapshotList} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.Snapshots.listNext_2
    name: 'listNext(string, Object, ServiceCallback<SnapshotList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists snapshots under a subscription.
    syntax:
      content: >-
        function listNext(nextPageLink: string, options: Object, callback:
        ServiceCallback<SnapshotList>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-compute - v10.0.0.SnapshotList>
          description: ''
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.SnapshotList>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {SnapshotList} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {SnapshotList} [result]   - The deserialized result object if an error did not occur.
                               See {@link SnapshotList} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.Snapshots.listNext_1
    name: 'listNext(string, ServiceCallback<SnapshotList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists snapshots under a subscription.
    syntax:
      content: >-
        function listNext(nextPageLink: string, callback:
        ServiceCallback<SnapshotList>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-compute - v10.0.0.SnapshotList>
          description: ''
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.SnapshotList>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {SnapshotList} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {SnapshotList} [result]   - The deserialized result object if an error did not occur.
                               See {@link SnapshotList} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.Snapshots.listNextWithHttpOperationResponse
    name: 'listNextWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists snapshots under a subscription.
    syntax:
      content: >-
        function listNextWithHttpOperationResponse(nextPageLink: string,
        options?: Object)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-compute -
            v10.0.0.SnapshotList>>
        description: A promise is returned
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.Snapshots.listWithHttpOperationResponse
    name: listWithHttpOperationResponse(Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists snapshots under a subscription.
    syntax:
      content: 'function listWithHttpOperationResponse(options?: Object)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-compute -
            v10.0.0.SnapshotList>>
        description: A promise is returned
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.Snapshots.revokeAccess
    name: 'revokeAccess(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Revokes access to a snapshot.
    syntax:
      content: >-
        function revokeAccess(resourceGroupName: string, snapshotName: string,
        options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: snapshotName
          type:
            - string
          description: >
            The name of the snapshot that is being created.

            The name can't be changed after the snapshot is created. Supported

            characters for the name are a-z, A-Z, 0-9 and _. The max name length
            is 80

            characters.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.Snapshots.revokeAccess_2
    name: 'revokeAccess(string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Revokes access to a snapshot.
    syntax:
      content: >-
        function revokeAccess(resourceGroupName: string, snapshotName: string,
        options: Object, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: snapshotName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.Snapshots.revokeAccess_1
    name: 'revokeAccess(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Revokes access to a snapshot.
    syntax:
      content: >-
        function revokeAccess(resourceGroupName: string, snapshotName: string,
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: snapshotName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.Snapshots.revokeAccessWithHttpOperationResponse
    name: 'revokeAccessWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Revokes access to a snapshot.
    syntax:
      content: >-
        function revokeAccessWithHttpOperationResponse(resourceGroupName:
        string, snapshotName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: snapshotName
          type:
            - string
          description: >
            The name of the snapshot that is being created.

            The name can't be changed after the snapshot is created. Supported

            characters for the name are a-z, A-Z, 0-9 and _. The max name length
            is 80

            characters.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
        description: A promise is returned
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.Snapshots.update
    name: 'update(string, string, SnapshotUpdate, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates (patches) a snapshot.
    syntax:
      content: >-
        function update(resourceGroupName: string, snapshotName: string,
        snapshot: SnapshotUpdate, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: snapshotName
          type:
            - string
          description: >
            The name of the snapshot that is being created.

            The name can't be changed after the snapshot is created. Supported

            characters for the name are a-z, A-Z, 0-9 and _. The max name length
            is 80

            characters.
        - id: snapshot
          type:
            - azure-arm-compute - v10.0.0.SnapshotUpdate
          description: |
            Snapshot object supplied in the body of the Patch
            snapshot operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.Snapshot>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {Snapshot} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {Snapshot} [result]   - The deserialized result object if an error did not occur.
                               See {@link Snapshot} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.Snapshots.update_2
    name: 'update(string, string, SnapshotUpdate, Object, ServiceCallback<Snapshot>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates (patches) a snapshot.
    syntax:
      content: >-
        function update(resourceGroupName: string, snapshotName: string,
        snapshot: SnapshotUpdate, options: Object, callback:
        ServiceCallback<Snapshot>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: snapshotName
          type:
            - string
          description: ''
        - id: snapshot
          type:
            - azure-arm-compute - v10.0.0.SnapshotUpdate
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-compute - v10.0.0.Snapshot>
          description: ''
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.Snapshot>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {Snapshot} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {Snapshot} [result]   - The deserialized result object if an error did not occur.
                               See {@link Snapshot} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.Snapshots.update_1
    name: 'update(string, string, SnapshotUpdate, ServiceCallback<Snapshot>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates (patches) a snapshot.
    syntax:
      content: >-
        function update(resourceGroupName: string, snapshotName: string,
        snapshot: SnapshotUpdate, callback: ServiceCallback<Snapshot>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: snapshotName
          type:
            - string
          description: ''
        - id: snapshot
          type:
            - azure-arm-compute - v10.0.0.SnapshotUpdate
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-compute - v10.0.0.Snapshot>
          description: ''
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.Snapshot>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {Snapshot} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {Snapshot} [result]   - The deserialized result object if an error did not occur.
                               See {@link Snapshot} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.Snapshots.updateWithHttpOperationResponse
    name: 'updateWithHttpOperationResponse(string, string, SnapshotUpdate, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates (patches) a snapshot.
    syntax:
      content: >-
        function updateWithHttpOperationResponse(resourceGroupName: string,
        snapshotName: string, snapshot: SnapshotUpdate, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: snapshotName
          type:
            - string
          description: >
            The name of the snapshot that is being created.

            The name can't be changed after the snapshot is created. Supported

            characters for the name are a-z, A-Z, 0-9 and _. The max name length
            is 80

            characters.
        - id: snapshot
          type:
            - azure-arm-compute - v10.0.0.SnapshotUpdate
          description: |
            Snapshot object supplied in the body of the Patch
            snapshot operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-arm-compute - v10.0.0.Snapshot>>
        description: A promise is returned
    package: azure-arm-compute - v10
references:
  - uid: azure-arm-compute - v10.0.0.Snapshot
    name: Snapshot
    spec.typeScript:
      - name: Snapshot
        fullName: Snapshot
        uid: azure-arm-compute - v10.0.0.Snapshot
  - uid: Promise<azure-arm-compute - v10.0.0.Snapshot>
    name: Snapshot>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: Snapshot
        fullName: Snapshot
        uid: azure-arm-compute - v10.0.0.Snapshot
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-arm-compute - v10.0.0.Snapshot>
    name: Snapshot>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: Snapshot
        fullName: Snapshot
        uid: azure-arm-compute - v10.0.0.Snapshot
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-arm-compute - v10.0.0.Snapshot>>
    name: Snapshot>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: Snapshot
        fullName: Snapshot
        uid: azure-arm-compute - v10.0.0.Snapshot
      - name: '>>'
        fullName: '>>'
  - uid: azure-arm-compute - v10.0.0.GrantAccessData
    name: GrantAccessData
    spec.typeScript:
      - name: GrantAccessData
        fullName: GrantAccessData
        uid: azure-arm-compute - v10.0.0.GrantAccessData
  - uid: Promise<azure-arm-compute - v10.0.0.AccessUri>
    name: AccessUri>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: AccessUri
        fullName: AccessUri
        uid: azure-arm-compute - v10.0.0.AccessUri
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-arm-compute - v10.0.0.AccessUri>
    name: AccessUri>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: AccessUri
        fullName: AccessUri
        uid: azure-arm-compute - v10.0.0.AccessUri
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-arm-compute - v10.0.0.AccessUri>>
    name: AccessUri>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: AccessUri
        fullName: AccessUri
        uid: azure-arm-compute - v10.0.0.AccessUri
      - name: '>>'
        fullName: '>>'
  - uid: azure-arm-compute - v10.0.0.SnapshotUpdate
    name: SnapshotUpdate
    spec.typeScript:
      - name: SnapshotUpdate
        fullName: SnapshotUpdate
        uid: azure-arm-compute - v10.0.0.SnapshotUpdate
  - uid: Promise<azure-arm-compute - v10.0.0.SnapshotList>
    name: SnapshotList>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: SnapshotList
        fullName: SnapshotList
        uid: azure-arm-compute - v10.0.0.SnapshotList
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-arm-compute - v10.0.0.SnapshotList>
    name: SnapshotList>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: SnapshotList
        fullName: SnapshotList
        uid: azure-arm-compute - v10.0.0.SnapshotList
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-arm-compute - v10.0.0.SnapshotList>>
    name: SnapshotList>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: SnapshotList
        fullName: SnapshotList
        uid: azure-arm-compute - v10.0.0.SnapshotList
      - name: '>>'
        fullName: '>>'
