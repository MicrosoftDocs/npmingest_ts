### YamlMime:UniversalReference
items:
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs
    name: VirtualMachineScaleSetVMs
    fullName: VirtualMachineScaleSetVMs
    children:
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.beginDeallocate
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.beginDeallocate_2
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.beginDeallocate_1
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachineScaleSetVMs.beginDeallocateWithHttpOperationResponse
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.beginDeleteMethod
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachineScaleSetVMs.beginDeleteMethod_2
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachineScaleSetVMs.beginDeleteMethod_1
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachineScaleSetVMs.beginDeleteMethodWithHttpOperationResponse
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachineScaleSetVMs.beginPerformMaintenance
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachineScaleSetVMs.beginPerformMaintenance_2
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachineScaleSetVMs.beginPerformMaintenance_1
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachineScaleSetVMs.beginPerformMaintenanceWithHttpOperationResponse
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.beginPowerOff
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.beginPowerOff_2
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.beginPowerOff_1
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachineScaleSetVMs.beginPowerOffWithHttpOperationResponse
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.beginRedeploy
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.beginRedeploy_2
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.beginRedeploy_1
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachineScaleSetVMs.beginRedeployWithHttpOperationResponse
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.beginReimage
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.beginReimage_2
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.beginReimage_1
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.beginReimageAll
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.beginReimageAll_2
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.beginReimageAll_1
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachineScaleSetVMs.beginReimageAllWithHttpOperationResponse
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachineScaleSetVMs.beginReimageWithHttpOperationResponse
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.beginRestart
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.beginRestart_2
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.beginRestart_1
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachineScaleSetVMs.beginRestartWithHttpOperationResponse
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.beginRunCommand
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.beginRunCommand_2
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.beginRunCommand_1
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachineScaleSetVMs.beginRunCommandWithHttpOperationResponse
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.beginStart
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.beginStart_2
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.beginStart_1
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachineScaleSetVMs.beginStartWithHttpOperationResponse
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.beginUpdate
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.beginUpdate_2
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.beginUpdate_1
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachineScaleSetVMs.beginUpdateWithHttpOperationResponse
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.deallocate
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.deallocate_2
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.deallocate_1
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachineScaleSetVMs.deallocateWithHttpOperationResponse
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.deleteMethod
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.deleteMethod_2
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.deleteMethod_1
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachineScaleSetVMs.deleteMethodWithHttpOperationResponse
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.get
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.get_2
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.get_1
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.getInstanceView
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.getInstanceView_2
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.getInstanceView_1
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachineScaleSetVMs.getInstanceViewWithHttpOperationResponse
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachineScaleSetVMs.getWithHttpOperationResponse
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.list
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.list_2
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.list_1
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.listNext
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.listNext_2
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.listNext_1
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachineScaleSetVMs.listNextWithHttpOperationResponse
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachineScaleSetVMs.listWithHttpOperationResponse
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.performMaintenance
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachineScaleSetVMs.performMaintenance_2
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachineScaleSetVMs.performMaintenance_1
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachineScaleSetVMs.performMaintenanceWithHttpOperationResponse
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.powerOff
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.powerOff_2
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.powerOff_1
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachineScaleSetVMs.powerOffWithHttpOperationResponse
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.redeploy
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.redeploy_2
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.redeploy_1
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachineScaleSetVMs.redeployWithHttpOperationResponse
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.reimage
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.reimage_2
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.reimage_1
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.reimageAll
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.reimageAll_2
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.reimageAll_1
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachineScaleSetVMs.reimageAllWithHttpOperationResponse
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachineScaleSetVMs.reimageWithHttpOperationResponse
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.restart
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.restart_2
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.restart_1
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachineScaleSetVMs.restartWithHttpOperationResponse
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.runCommand
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.runCommand_2
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.runCommand_1
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachineScaleSetVMs.runCommandWithHttpOperationResponse
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.start
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.start_2
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.start_1
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachineScaleSetVMs.startWithHttpOperationResponse
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.update
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.update_2
      - azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.update_1
      - >-
        azure-arm-compute -
        v10.0.0.VirtualMachineScaleSetVMs.updateWithHttpOperationResponse
    langs:
      - typeScript
    type: interface
    summary: ''
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.beginDeallocate
    name: 'beginDeallocate(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Deallocates a specific virtual machine in a VM scale set. Shuts down the
      virtual machine and releases the compute resources it uses. You are not
      billed for the compute resources of this virtual machine once it is
      deallocated.
    syntax:
      content: >-
        function beginDeallocate(resourceGroupName: string, vmScaleSetName:
        string, instanceId: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: instanceId
          type:
            - string
          description: |
            The instance ID of the virtual machine.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.beginDeallocate_2
    name: 'beginDeallocate(string, string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Deallocates a specific virtual machine in a VM scale set. Shuts down the
      virtual machine and releases the compute resources it uses. You are not
      billed for the compute resources of this virtual machine once it is
      deallocated.
    syntax:
      content: >-
        function beginDeallocate(resourceGroupName: string, vmScaleSetName:
        string, instanceId: string, options: Object, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: instanceId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.beginDeallocate_1
    name: 'beginDeallocate(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Deallocates a specific virtual machine in a VM scale set. Shuts down the
      virtual machine and releases the compute resources it uses. You are not
      billed for the compute resources of this virtual machine once it is
      deallocated.
    syntax:
      content: >-
        function beginDeallocate(resourceGroupName: string, vmScaleSetName:
        string, instanceId: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: instanceId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.VirtualMachineScaleSetVMs.beginDeallocateWithHttpOperationResponse
    name: 'beginDeallocateWithHttpOperationResponse(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Deallocates a specific virtual machine in a VM scale set. Shuts down the
      virtual machine and releases the compute resources it uses. You are not
      billed for the compute resources of this virtual machine once it is
      deallocated.
    syntax:
      content: >-
        function beginDeallocateWithHttpOperationResponse(resourceGroupName:
        string, vmScaleSetName: string, instanceId: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: instanceId
          type:
            - string
          description: |
            The instance ID of the virtual machine.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
        description: A promise is returned
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.beginDeleteMethod
    name: 'beginDeleteMethod(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes a virtual machine from a VM scale set.
    syntax:
      content: >-
        function beginDeleteMethod(resourceGroupName: string, vmScaleSetName:
        string, instanceId: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: instanceId
          type:
            - string
          description: |
            The instance ID of the virtual machine.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.beginDeleteMethod_2
    name: 'beginDeleteMethod(string, string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes a virtual machine from a VM scale set.
    syntax:
      content: >-
        function beginDeleteMethod(resourceGroupName: string, vmScaleSetName:
        string, instanceId: string, options: Object, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: instanceId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.beginDeleteMethod_1
    name: 'beginDeleteMethod(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes a virtual machine from a VM scale set.
    syntax:
      content: >-
        function beginDeleteMethod(resourceGroupName: string, vmScaleSetName:
        string, instanceId: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: instanceId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.VirtualMachineScaleSetVMs.beginDeleteMethodWithHttpOperationResponse
    name: 'beginDeleteMethodWithHttpOperationResponse(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes a virtual machine from a VM scale set.
    syntax:
      content: >-
        function beginDeleteMethodWithHttpOperationResponse(resourceGroupName:
        string, vmScaleSetName: string, instanceId: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: instanceId
          type:
            - string
          description: |
            The instance ID of the virtual machine.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
        description: A promise is returned
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.VirtualMachineScaleSetVMs.beginPerformMaintenance
    name: 'beginPerformMaintenance(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Performs maintenance on a virtual machine in a VM scale set.
    syntax:
      content: >-
        function beginPerformMaintenance(resourceGroupName: string,
        vmScaleSetName: string, instanceId: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: instanceId
          type:
            - string
          description: |
            The instance ID of the virtual machine.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.VirtualMachineScaleSetVMs.beginPerformMaintenance_2
    name: >-
      beginPerformMaintenance(string, string, string, Object,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Performs maintenance on a virtual machine in a VM scale set.
    syntax:
      content: >-
        function beginPerformMaintenance(resourceGroupName: string,
        vmScaleSetName: string, instanceId: string, options: Object, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: instanceId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.VirtualMachineScaleSetVMs.beginPerformMaintenance_1
    name: 'beginPerformMaintenance(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Performs maintenance on a virtual machine in a VM scale set.
    syntax:
      content: >-
        function beginPerformMaintenance(resourceGroupName: string,
        vmScaleSetName: string, instanceId: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: instanceId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.VirtualMachineScaleSetVMs.beginPerformMaintenanceWithHttpOperationResponse
    name: >-
      beginPerformMaintenanceWithHttpOperationResponse(string, string, string,
      Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: Performs maintenance on a virtual machine in a VM scale set.
    syntax:
      content: >-
        function
        beginPerformMaintenanceWithHttpOperationResponse(resourceGroupName:
        string, vmScaleSetName: string, instanceId: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: instanceId
          type:
            - string
          description: |
            The instance ID of the virtual machine.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
        description: A promise is returned
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.beginPowerOff
    name: 'beginPowerOff(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Power off (stop) a virtual machine in a VM scale set. Note that resources
      are still attached and you are getting charged for the resources. Instead,
      use deallocate to release resources and avoid charges.
    syntax:
      content: >-
        function beginPowerOff(resourceGroupName: string, vmScaleSetName:
        string, instanceId: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: instanceId
          type:
            - string
          description: |
            The instance ID of the virtual machine.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.beginPowerOff_2
    name: 'beginPowerOff(string, string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Power off (stop) a virtual machine in a VM scale set. Note that resources
      are still attached and you are getting charged for the resources. Instead,
      use deallocate to release resources and avoid charges.
    syntax:
      content: >-
        function beginPowerOff(resourceGroupName: string, vmScaleSetName:
        string, instanceId: string, options: Object, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: instanceId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.beginPowerOff_1
    name: 'beginPowerOff(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Power off (stop) a virtual machine in a VM scale set. Note that resources
      are still attached and you are getting charged for the resources. Instead,
      use deallocate to release resources and avoid charges.
    syntax:
      content: >-
        function beginPowerOff(resourceGroupName: string, vmScaleSetName:
        string, instanceId: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: instanceId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.VirtualMachineScaleSetVMs.beginPowerOffWithHttpOperationResponse
    name: 'beginPowerOffWithHttpOperationResponse(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Power off (stop) a virtual machine in a VM scale set. Note that resources
      are still attached and you are getting charged for the resources. Instead,
      use deallocate to release resources and avoid charges.
    syntax:
      content: >-
        function beginPowerOffWithHttpOperationResponse(resourceGroupName:
        string, vmScaleSetName: string, instanceId: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: instanceId
          type:
            - string
          description: |
            The instance ID of the virtual machine.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
        description: A promise is returned
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.beginRedeploy
    name: 'beginRedeploy(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Redeploys a virtual machine in a VM scale set.
    syntax:
      content: >-
        function beginRedeploy(resourceGroupName: string, vmScaleSetName:
        string, instanceId: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: instanceId
          type:
            - string
          description: |
            The instance ID of the virtual machine.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.beginRedeploy_2
    name: 'beginRedeploy(string, string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Redeploys a virtual machine in a VM scale set.
    syntax:
      content: >-
        function beginRedeploy(resourceGroupName: string, vmScaleSetName:
        string, instanceId: string, options: Object, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: instanceId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.beginRedeploy_1
    name: 'beginRedeploy(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Redeploys a virtual machine in a VM scale set.
    syntax:
      content: >-
        function beginRedeploy(resourceGroupName: string, vmScaleSetName:
        string, instanceId: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: instanceId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.VirtualMachineScaleSetVMs.beginRedeployWithHttpOperationResponse
    name: 'beginRedeployWithHttpOperationResponse(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Redeploys a virtual machine in a VM scale set.
    syntax:
      content: >-
        function beginRedeployWithHttpOperationResponse(resourceGroupName:
        string, vmScaleSetName: string, instanceId: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: instanceId
          type:
            - string
          description: |
            The instance ID of the virtual machine.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
        description: A promise is returned
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.beginReimage
    name: 'beginReimage(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Reimages (upgrade the operating system) a specific virtual machine in a VM
      scale set.
    syntax:
      content: >-
        function beginReimage(resourceGroupName: string, vmScaleSetName: string,
        instanceId: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: instanceId
          type:
            - string
          description: |
            The instance ID of the virtual machine.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.beginReimage_2
    name: 'beginReimage(string, string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Reimages (upgrade the operating system) a specific virtual machine in a VM
      scale set.
    syntax:
      content: >-
        function beginReimage(resourceGroupName: string, vmScaleSetName: string,
        instanceId: string, options: Object, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: instanceId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.beginReimage_1
    name: 'beginReimage(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Reimages (upgrade the operating system) a specific virtual machine in a VM
      scale set.
    syntax:
      content: >-
        function beginReimage(resourceGroupName: string, vmScaleSetName: string,
        instanceId: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: instanceId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.beginReimageAll
    name: 'beginReimageAll(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Allows you to re-image all the disks ( including data disks ) in the a VM
      scale set instance. This operation is only supported for managed disks.
    syntax:
      content: >-
        function beginReimageAll(resourceGroupName: string, vmScaleSetName:
        string, instanceId: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: instanceId
          type:
            - string
          description: |
            The instance ID of the virtual machine.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.beginReimageAll_2
    name: 'beginReimageAll(string, string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Allows you to re-image all the disks ( including data disks ) in the a VM
      scale set instance. This operation is only supported for managed disks.
    syntax:
      content: >-
        function beginReimageAll(resourceGroupName: string, vmScaleSetName:
        string, instanceId: string, options: Object, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: instanceId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.beginReimageAll_1
    name: 'beginReimageAll(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Allows you to re-image all the disks ( including data disks ) in the a VM
      scale set instance. This operation is only supported for managed disks.
    syntax:
      content: >-
        function beginReimageAll(resourceGroupName: string, vmScaleSetName:
        string, instanceId: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: instanceId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.VirtualMachineScaleSetVMs.beginReimageAllWithHttpOperationResponse
    name: 'beginReimageAllWithHttpOperationResponse(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Allows you to re-image all the disks ( including data disks ) in the a VM
      scale set instance. This operation is only supported for managed disks.
    syntax:
      content: >-
        function beginReimageAllWithHttpOperationResponse(resourceGroupName:
        string, vmScaleSetName: string, instanceId: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: instanceId
          type:
            - string
          description: |
            The instance ID of the virtual machine.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
        description: A promise is returned
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.VirtualMachineScaleSetVMs.beginReimageWithHttpOperationResponse
    name: 'beginReimageWithHttpOperationResponse(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Reimages (upgrade the operating system) a specific virtual machine in a VM
      scale set.
    syntax:
      content: >-
        function beginReimageWithHttpOperationResponse(resourceGroupName:
        string, vmScaleSetName: string, instanceId: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: instanceId
          type:
            - string
          description: |
            The instance ID of the virtual machine.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
        description: A promise is returned
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.beginRestart
    name: 'beginRestart(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Restarts a virtual machine in a VM scale set.
    syntax:
      content: >-
        function beginRestart(resourceGroupName: string, vmScaleSetName: string,
        instanceId: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: instanceId
          type:
            - string
          description: |
            The instance ID of the virtual machine.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.beginRestart_2
    name: 'beginRestart(string, string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Restarts a virtual machine in a VM scale set.
    syntax:
      content: >-
        function beginRestart(resourceGroupName: string, vmScaleSetName: string,
        instanceId: string, options: Object, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: instanceId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.beginRestart_1
    name: 'beginRestart(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Restarts a virtual machine in a VM scale set.
    syntax:
      content: >-
        function beginRestart(resourceGroupName: string, vmScaleSetName: string,
        instanceId: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: instanceId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.VirtualMachineScaleSetVMs.beginRestartWithHttpOperationResponse
    name: 'beginRestartWithHttpOperationResponse(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Restarts a virtual machine in a VM scale set.
    syntax:
      content: >-
        function beginRestartWithHttpOperationResponse(resourceGroupName:
        string, vmScaleSetName: string, instanceId: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: instanceId
          type:
            - string
          description: |
            The instance ID of the virtual machine.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
        description: A promise is returned
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.beginRunCommand
    name: 'beginRunCommand(string, string, string, RunCommandInput, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Run command on a virtual machine in a VM scale set.
    syntax:
      content: >-
        function beginRunCommand(resourceGroupName: string, vmScaleSetName:
        string, instanceId: string, parameters: RunCommandInput, options?:
        Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: instanceId
          type:
            - string
          description: |
            The instance ID of the virtual machine.
        - id: parameters
          type:
            - azure-arm-compute - v10.0.0.RunCommandInput
          description: |
            Parameters supplied to the Run command operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.RunCommandResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {RunCommandResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {RunCommandResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link RunCommandResult} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.beginRunCommand_2
    name: >-
      beginRunCommand(string, string, string, RunCommandInput, Object,
      ServiceCallback<RunCommandResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Run command on a virtual machine in a VM scale set.
    syntax:
      content: >-
        function beginRunCommand(resourceGroupName: string, vmScaleSetName:
        string, instanceId: string, parameters: RunCommandInput, options:
        Object, callback: ServiceCallback<RunCommandResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: instanceId
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-compute - v10.0.0.RunCommandInput
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-compute - v10.0.0.RunCommandResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.RunCommandResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {RunCommandResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {RunCommandResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link RunCommandResult} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.beginRunCommand_1
    name: >-
      beginRunCommand(string, string, string, RunCommandInput,
      ServiceCallback<RunCommandResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Run command on a virtual machine in a VM scale set.
    syntax:
      content: >-
        function beginRunCommand(resourceGroupName: string, vmScaleSetName:
        string, instanceId: string, parameters: RunCommandInput, callback:
        ServiceCallback<RunCommandResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: instanceId
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-compute - v10.0.0.RunCommandInput
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-compute - v10.0.0.RunCommandResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.RunCommandResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {RunCommandResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {RunCommandResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link RunCommandResult} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.VirtualMachineScaleSetVMs.beginRunCommandWithHttpOperationResponse
    name: >-
      beginRunCommandWithHttpOperationResponse(string, string, string,
      RunCommandInput, Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: Run command on a virtual machine in a VM scale set.
    syntax:
      content: >-
        function beginRunCommandWithHttpOperationResponse(resourceGroupName:
        string, vmScaleSetName: string, instanceId: string, parameters:
        RunCommandInput, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: instanceId
          type:
            - string
          description: |
            The instance ID of the virtual machine.
        - id: parameters
          type:
            - azure-arm-compute - v10.0.0.RunCommandInput
          description: |
            Parameters supplied to the Run command operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-compute -
            v10.0.0.RunCommandResult>>
        description: A promise is returned
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.beginStart
    name: 'beginStart(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Starts a virtual machine in a VM scale set.
    syntax:
      content: >-
        function beginStart(resourceGroupName: string, vmScaleSetName: string,
        instanceId: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: instanceId
          type:
            - string
          description: |
            The instance ID of the virtual machine.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.beginStart_2
    name: 'beginStart(string, string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Starts a virtual machine in a VM scale set.
    syntax:
      content: >-
        function beginStart(resourceGroupName: string, vmScaleSetName: string,
        instanceId: string, options: Object, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: instanceId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.beginStart_1
    name: 'beginStart(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Starts a virtual machine in a VM scale set.
    syntax:
      content: >-
        function beginStart(resourceGroupName: string, vmScaleSetName: string,
        instanceId: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: instanceId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.VirtualMachineScaleSetVMs.beginStartWithHttpOperationResponse
    name: 'beginStartWithHttpOperationResponse(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Starts a virtual machine in a VM scale set.
    syntax:
      content: >-
        function beginStartWithHttpOperationResponse(resourceGroupName: string,
        vmScaleSetName: string, instanceId: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: instanceId
          type:
            - string
          description: |
            The instance ID of the virtual machine.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
        description: A promise is returned
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.beginUpdate
    name: 'beginUpdate(string, string, string, VirtualMachineScaleSetVM, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates a virtual machine of a VM scale set.
    syntax:
      content: >-
        function beginUpdate(resourceGroupName: string, vmScaleSetName: string,
        instanceId: string, parameters: VirtualMachineScaleSetVM, options?:
        Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set where the
            extension should be create or updated.
        - id: instanceId
          type:
            - string
          description: |
            The instance ID of the virtual machine.
        - id: parameters
          type:
            - azure-arm-compute - v10.0.0.VirtualMachineScaleSetVM
          description: |
            Parameters supplied to the Update Virtual Machine
            Scale Sets VM operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.VirtualMachineScaleSetVM>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VirtualMachineScaleSetVM} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VirtualMachineScaleSetVM} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachineScaleSetVM} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.beginUpdate_2
    name: >-
      beginUpdate(string, string, string, VirtualMachineScaleSetVM, Object,
      ServiceCallback<VirtualMachineScaleSetVM>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates a virtual machine of a VM scale set.
    syntax:
      content: >-
        function beginUpdate(resourceGroupName: string, vmScaleSetName: string,
        instanceId: string, parameters: VirtualMachineScaleSetVM, options:
        Object, callback: ServiceCallback<VirtualMachineScaleSetVM>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: instanceId
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-compute - v10.0.0.VirtualMachineScaleSetVM
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<azure-arm-compute -
              v10.0.0.VirtualMachineScaleSetVM>
          description: ''
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.VirtualMachineScaleSetVM>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VirtualMachineScaleSetVM} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VirtualMachineScaleSetVM} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachineScaleSetVM} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.beginUpdate_1
    name: >-
      beginUpdate(string, string, string, VirtualMachineScaleSetVM,
      ServiceCallback<VirtualMachineScaleSetVM>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates a virtual machine of a VM scale set.
    syntax:
      content: >-
        function beginUpdate(resourceGroupName: string, vmScaleSetName: string,
        instanceId: string, parameters: VirtualMachineScaleSetVM, callback:
        ServiceCallback<VirtualMachineScaleSetVM>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: instanceId
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-compute - v10.0.0.VirtualMachineScaleSetVM
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<azure-arm-compute -
              v10.0.0.VirtualMachineScaleSetVM>
          description: ''
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.VirtualMachineScaleSetVM>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VirtualMachineScaleSetVM} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VirtualMachineScaleSetVM} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachineScaleSetVM} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.VirtualMachineScaleSetVMs.beginUpdateWithHttpOperationResponse
    name: >-
      beginUpdateWithHttpOperationResponse(string, string, string,
      VirtualMachineScaleSetVM, Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates a virtual machine of a VM scale set.
    syntax:
      content: >-
        function beginUpdateWithHttpOperationResponse(resourceGroupName: string,
        vmScaleSetName: string, instanceId: string, parameters:
        VirtualMachineScaleSetVM, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set where the
            extension should be create or updated.
        - id: instanceId
          type:
            - string
          description: |
            The instance ID of the virtual machine.
        - id: parameters
          type:
            - azure-arm-compute - v10.0.0.VirtualMachineScaleSetVM
          description: |
            Parameters supplied to the Update Virtual Machine
            Scale Sets VM operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-compute -
            v10.0.0.VirtualMachineScaleSetVM>>
        description: A promise is returned
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.deallocate
    name: 'deallocate(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Deallocates a specific virtual machine in a VM scale set. Shuts down the
      virtual machine and releases the compute resources it uses. You are not
      billed for the compute resources of this virtual machine once it is
      deallocated.
    syntax:
      content: >-
        function deallocate(resourceGroupName: string, vmScaleSetName: string,
        instanceId: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: instanceId
          type:
            - string
          description: |
            The instance ID of the virtual machine.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.deallocate_2
    name: 'deallocate(string, string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Deallocates a specific virtual machine in a VM scale set. Shuts down the
      virtual machine and releases the compute resources it uses. You are not
      billed for the compute resources of this virtual machine once it is
      deallocated.
    syntax:
      content: >-
        function deallocate(resourceGroupName: string, vmScaleSetName: string,
        instanceId: string, options: Object, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: instanceId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.deallocate_1
    name: 'deallocate(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Deallocates a specific virtual machine in a VM scale set. Shuts down the
      virtual machine and releases the compute resources it uses. You are not
      billed for the compute resources of this virtual machine once it is
      deallocated.
    syntax:
      content: >-
        function deallocate(resourceGroupName: string, vmScaleSetName: string,
        instanceId: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: instanceId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.VirtualMachineScaleSetVMs.deallocateWithHttpOperationResponse
    name: 'deallocateWithHttpOperationResponse(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Deallocates a specific virtual machine in a VM scale set. Shuts down the
      virtual machine and releases the compute resources it uses. You are not
      billed for the compute resources of this virtual machine once it is
      deallocated.
    syntax:
      content: >-
        function deallocateWithHttpOperationResponse(resourceGroupName: string,
        vmScaleSetName: string, instanceId: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: instanceId
          type:
            - string
          description: |
            The instance ID of the virtual machine.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
        description: A promise is returned
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.deleteMethod
    name: 'deleteMethod(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes a virtual machine from a VM scale set.
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, vmScaleSetName: string,
        instanceId: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: instanceId
          type:
            - string
          description: |
            The instance ID of the virtual machine.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.deleteMethod_2
    name: 'deleteMethod(string, string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes a virtual machine from a VM scale set.
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, vmScaleSetName: string,
        instanceId: string, options: Object, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: instanceId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.deleteMethod_1
    name: 'deleteMethod(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes a virtual machine from a VM scale set.
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, vmScaleSetName: string,
        instanceId: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: instanceId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.VirtualMachineScaleSetVMs.deleteMethodWithHttpOperationResponse
    name: 'deleteMethodWithHttpOperationResponse(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes a virtual machine from a VM scale set.
    syntax:
      content: >-
        function deleteMethodWithHttpOperationResponse(resourceGroupName:
        string, vmScaleSetName: string, instanceId: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: instanceId
          type:
            - string
          description: |
            The instance ID of the virtual machine.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
        description: A promise is returned
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.get
    name: 'get(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a virtual machine from a VM scale set.
    syntax:
      content: >-
        function get(resourceGroupName: string, vmScaleSetName: string,
        instanceId: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: instanceId
          type:
            - string
          description: |
            The instance ID of the virtual machine.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.VirtualMachineScaleSetVM>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VirtualMachineScaleSetVM} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VirtualMachineScaleSetVM} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachineScaleSetVM} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.get_2
    name: >-
      get(string, string, string, Object,
      ServiceCallback<VirtualMachineScaleSetVM>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a virtual machine from a VM scale set.
    syntax:
      content: >-
        function get(resourceGroupName: string, vmScaleSetName: string,
        instanceId: string, options: Object, callback:
        ServiceCallback<VirtualMachineScaleSetVM>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: instanceId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<azure-arm-compute -
              v10.0.0.VirtualMachineScaleSetVM>
          description: ''
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.VirtualMachineScaleSetVM>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VirtualMachineScaleSetVM} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VirtualMachineScaleSetVM} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachineScaleSetVM} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.get_1
    name: 'get(string, string, string, ServiceCallback<VirtualMachineScaleSetVM>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a virtual machine from a VM scale set.
    syntax:
      content: >-
        function get(resourceGroupName: string, vmScaleSetName: string,
        instanceId: string, callback: ServiceCallback<VirtualMachineScaleSetVM>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: instanceId
          type:
            - string
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<azure-arm-compute -
              v10.0.0.VirtualMachineScaleSetVM>
          description: ''
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.VirtualMachineScaleSetVM>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VirtualMachineScaleSetVM} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VirtualMachineScaleSetVM} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachineScaleSetVM} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.getInstanceView
    name: 'getInstanceView(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the status of a virtual machine from a VM scale set.
    syntax:
      content: >-
        function getInstanceView(resourceGroupName: string, vmScaleSetName:
        string, instanceId: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: instanceId
          type:
            - string
          description: |
            The instance ID of the virtual machine.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<azure-arm-compute -
            v10.0.0.VirtualMachineScaleSetVMInstanceView>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VirtualMachineScaleSetVMInstanceView} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VirtualMachineScaleSetVMInstanceView} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachineScaleSetVMInstanceView} for
                               more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.getInstanceView_2
    name: >-
      getInstanceView(string, string, string, Object,
      ServiceCallback<VirtualMachineScaleSetVMInstanceView>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the status of a virtual machine from a VM scale set.
    syntax:
      content: >-
        function getInstanceView(resourceGroupName: string, vmScaleSetName:
        string, instanceId: string, options: Object, callback:
        ServiceCallback<VirtualMachineScaleSetVMInstanceView>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: instanceId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<azure-arm-compute -
              v10.0.0.VirtualMachineScaleSetVMInstanceView>
          description: ''
      return:
        type:
          - >-
            Promise<azure-arm-compute -
            v10.0.0.VirtualMachineScaleSetVMInstanceView>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VirtualMachineScaleSetVMInstanceView} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VirtualMachineScaleSetVMInstanceView} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachineScaleSetVMInstanceView} for
                               more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.getInstanceView_1
    name: >-
      getInstanceView(string, string, string,
      ServiceCallback<VirtualMachineScaleSetVMInstanceView>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the status of a virtual machine from a VM scale set.
    syntax:
      content: >-
        function getInstanceView(resourceGroupName: string, vmScaleSetName:
        string, instanceId: string, callback:
        ServiceCallback<VirtualMachineScaleSetVMInstanceView>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: instanceId
          type:
            - string
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<azure-arm-compute -
              v10.0.0.VirtualMachineScaleSetVMInstanceView>
          description: ''
      return:
        type:
          - >-
            Promise<azure-arm-compute -
            v10.0.0.VirtualMachineScaleSetVMInstanceView>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VirtualMachineScaleSetVMInstanceView} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VirtualMachineScaleSetVMInstanceView} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachineScaleSetVMInstanceView} for
                               more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.VirtualMachineScaleSetVMs.getInstanceViewWithHttpOperationResponse
    name: 'getInstanceViewWithHttpOperationResponse(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the status of a virtual machine from a VM scale set.
    syntax:
      content: >-
        function getInstanceViewWithHttpOperationResponse(resourceGroupName:
        string, vmScaleSetName: string, instanceId: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: instanceId
          type:
            - string
          description: |
            The instance ID of the virtual machine.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-compute -
            v10.0.0.VirtualMachineScaleSetVMInstanceView>>
        description: A promise is returned
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.VirtualMachineScaleSetVMs.getWithHttpOperationResponse
    name: 'getWithHttpOperationResponse(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a virtual machine from a VM scale set.
    syntax:
      content: >-
        function getWithHttpOperationResponse(resourceGroupName: string,
        vmScaleSetName: string, instanceId: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: instanceId
          type:
            - string
          description: |
            The instance ID of the virtual machine.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-compute -
            v10.0.0.VirtualMachineScaleSetVM>>
        description: A promise is returned
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.list
    name: 'list(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a list of all virtual machines in a VM scale sets.
    syntax:
      content: >-
        function list(resourceGroupName: string, virtualMachineScaleSetName:
        string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: virtualMachineScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<azure-arm-compute -
            v10.0.0.VirtualMachineScaleSetVMListResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VirtualMachineScaleSetVMListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VirtualMachineScaleSetVMListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachineScaleSetVMListResult} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.list_2
    name: >-
      list(string, string, Object,
      ServiceCallback<VirtualMachineScaleSetVMListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a list of all virtual machines in a VM scale sets.
    syntax:
      content: >-
        function list(resourceGroupName: string, virtualMachineScaleSetName:
        string, options: Object, callback:
        ServiceCallback<VirtualMachineScaleSetVMListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: virtualMachineScaleSetName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<azure-arm-compute -
              v10.0.0.VirtualMachineScaleSetVMListResult>
          description: ''
      return:
        type:
          - >-
            Promise<azure-arm-compute -
            v10.0.0.VirtualMachineScaleSetVMListResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VirtualMachineScaleSetVMListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VirtualMachineScaleSetVMListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachineScaleSetVMListResult} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.list_1
    name: 'list(string, string, ServiceCallback<VirtualMachineScaleSetVMListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a list of all virtual machines in a VM scale sets.
    syntax:
      content: >-
        function list(resourceGroupName: string, virtualMachineScaleSetName:
        string, callback: ServiceCallback<VirtualMachineScaleSetVMListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: virtualMachineScaleSetName
          type:
            - string
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<azure-arm-compute -
              v10.0.0.VirtualMachineScaleSetVMListResult>
          description: ''
      return:
        type:
          - >-
            Promise<azure-arm-compute -
            v10.0.0.VirtualMachineScaleSetVMListResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VirtualMachineScaleSetVMListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VirtualMachineScaleSetVMListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachineScaleSetVMListResult} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.listNext
    name: 'listNext(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a list of all virtual machines in a VM scale sets.
    syntax:
      content: 'function listNext(nextPageLink: string, options?: Object)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<azure-arm-compute -
            v10.0.0.VirtualMachineScaleSetVMListResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VirtualMachineScaleSetVMListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VirtualMachineScaleSetVMListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachineScaleSetVMListResult} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.listNext_2
    name: >-
      listNext(string, Object,
      ServiceCallback<VirtualMachineScaleSetVMListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a list of all virtual machines in a VM scale sets.
    syntax:
      content: >-
        function listNext(nextPageLink: string, options: Object, callback:
        ServiceCallback<VirtualMachineScaleSetVMListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<azure-arm-compute -
              v10.0.0.VirtualMachineScaleSetVMListResult>
          description: ''
      return:
        type:
          - >-
            Promise<azure-arm-compute -
            v10.0.0.VirtualMachineScaleSetVMListResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VirtualMachineScaleSetVMListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VirtualMachineScaleSetVMListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachineScaleSetVMListResult} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.listNext_1
    name: 'listNext(string, ServiceCallback<VirtualMachineScaleSetVMListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a list of all virtual machines in a VM scale sets.
    syntax:
      content: >-
        function listNext(nextPageLink: string, callback:
        ServiceCallback<VirtualMachineScaleSetVMListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<azure-arm-compute -
              v10.0.0.VirtualMachineScaleSetVMListResult>
          description: ''
      return:
        type:
          - >-
            Promise<azure-arm-compute -
            v10.0.0.VirtualMachineScaleSetVMListResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VirtualMachineScaleSetVMListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VirtualMachineScaleSetVMListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachineScaleSetVMListResult} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.VirtualMachineScaleSetVMs.listNextWithHttpOperationResponse
    name: 'listNextWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a list of all virtual machines in a VM scale sets.
    syntax:
      content: >-
        function listNextWithHttpOperationResponse(nextPageLink: string,
        options?: Object)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-compute -
            v10.0.0.VirtualMachineScaleSetVMListResult>>
        description: A promise is returned
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.VirtualMachineScaleSetVMs.listWithHttpOperationResponse
    name: 'listWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a list of all virtual machines in a VM scale sets.
    syntax:
      content: >-
        function listWithHttpOperationResponse(resourceGroupName: string,
        virtualMachineScaleSetName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: virtualMachineScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-compute -
            v10.0.0.VirtualMachineScaleSetVMListResult>>
        description: A promise is returned
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.performMaintenance
    name: 'performMaintenance(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Performs maintenance on a virtual machine in a VM scale set.
    syntax:
      content: >-
        function performMaintenance(resourceGroupName: string, vmScaleSetName:
        string, instanceId: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: instanceId
          type:
            - string
          description: |
            The instance ID of the virtual machine.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.performMaintenance_2
    name: 'performMaintenance(string, string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Performs maintenance on a virtual machine in a VM scale set.
    syntax:
      content: >-
        function performMaintenance(resourceGroupName: string, vmScaleSetName:
        string, instanceId: string, options: Object, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: instanceId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.performMaintenance_1
    name: 'performMaintenance(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Performs maintenance on a virtual machine in a VM scale set.
    syntax:
      content: >-
        function performMaintenance(resourceGroupName: string, vmScaleSetName:
        string, instanceId: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: instanceId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.VirtualMachineScaleSetVMs.performMaintenanceWithHttpOperationResponse
    name: >-
      performMaintenanceWithHttpOperationResponse(string, string, string,
      Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: Performs maintenance on a virtual machine in a VM scale set.
    syntax:
      content: >-
        function performMaintenanceWithHttpOperationResponse(resourceGroupName:
        string, vmScaleSetName: string, instanceId: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: instanceId
          type:
            - string
          description: |
            The instance ID of the virtual machine.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
        description: A promise is returned
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.powerOff
    name: 'powerOff(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Power off (stop) a virtual machine in a VM scale set. Note that resources
      are still attached and you are getting charged for the resources. Instead,
      use deallocate to release resources and avoid charges.
    syntax:
      content: >-
        function powerOff(resourceGroupName: string, vmScaleSetName: string,
        instanceId: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: instanceId
          type:
            - string
          description: |
            The instance ID of the virtual machine.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.powerOff_2
    name: 'powerOff(string, string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Power off (stop) a virtual machine in a VM scale set. Note that resources
      are still attached and you are getting charged for the resources. Instead,
      use deallocate to release resources and avoid charges.
    syntax:
      content: >-
        function powerOff(resourceGroupName: string, vmScaleSetName: string,
        instanceId: string, options: Object, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: instanceId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.powerOff_1
    name: 'powerOff(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Power off (stop) a virtual machine in a VM scale set. Note that resources
      are still attached and you are getting charged for the resources. Instead,
      use deallocate to release resources and avoid charges.
    syntax:
      content: >-
        function powerOff(resourceGroupName: string, vmScaleSetName: string,
        instanceId: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: instanceId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.VirtualMachineScaleSetVMs.powerOffWithHttpOperationResponse
    name: 'powerOffWithHttpOperationResponse(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Power off (stop) a virtual machine in a VM scale set. Note that resources
      are still attached and you are getting charged for the resources. Instead,
      use deallocate to release resources and avoid charges.
    syntax:
      content: >-
        function powerOffWithHttpOperationResponse(resourceGroupName: string,
        vmScaleSetName: string, instanceId: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: instanceId
          type:
            - string
          description: |
            The instance ID of the virtual machine.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
        description: A promise is returned
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.redeploy
    name: 'redeploy(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Redeploys a virtual machine in a VM scale set.
    syntax:
      content: >-
        function redeploy(resourceGroupName: string, vmScaleSetName: string,
        instanceId: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: instanceId
          type:
            - string
          description: |
            The instance ID of the virtual machine.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.redeploy_2
    name: 'redeploy(string, string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Redeploys a virtual machine in a VM scale set.
    syntax:
      content: >-
        function redeploy(resourceGroupName: string, vmScaleSetName: string,
        instanceId: string, options: Object, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: instanceId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.redeploy_1
    name: 'redeploy(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Redeploys a virtual machine in a VM scale set.
    syntax:
      content: >-
        function redeploy(resourceGroupName: string, vmScaleSetName: string,
        instanceId: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: instanceId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.VirtualMachineScaleSetVMs.redeployWithHttpOperationResponse
    name: 'redeployWithHttpOperationResponse(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Redeploys a virtual machine in a VM scale set.
    syntax:
      content: >-
        function redeployWithHttpOperationResponse(resourceGroupName: string,
        vmScaleSetName: string, instanceId: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: instanceId
          type:
            - string
          description: |
            The instance ID of the virtual machine.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
        description: A promise is returned
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.reimage
    name: 'reimage(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Reimages (upgrade the operating system) a specific virtual machine in a VM
      scale set.
    syntax:
      content: >-
        function reimage(resourceGroupName: string, vmScaleSetName: string,
        instanceId: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: instanceId
          type:
            - string
          description: |
            The instance ID of the virtual machine.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.reimage_2
    name: 'reimage(string, string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Reimages (upgrade the operating system) a specific virtual machine in a VM
      scale set.
    syntax:
      content: >-
        function reimage(resourceGroupName: string, vmScaleSetName: string,
        instanceId: string, options: Object, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: instanceId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.reimage_1
    name: 'reimage(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Reimages (upgrade the operating system) a specific virtual machine in a VM
      scale set.
    syntax:
      content: >-
        function reimage(resourceGroupName: string, vmScaleSetName: string,
        instanceId: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: instanceId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.reimageAll
    name: 'reimageAll(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Allows you to re-image all the disks ( including data disks ) in the a VM
      scale set instance. This operation is only supported for managed disks.
    syntax:
      content: >-
        function reimageAll(resourceGroupName: string, vmScaleSetName: string,
        instanceId: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: instanceId
          type:
            - string
          description: |
            The instance ID of the virtual machine.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.reimageAll_2
    name: 'reimageAll(string, string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Allows you to re-image all the disks ( including data disks ) in the a VM
      scale set instance. This operation is only supported for managed disks.
    syntax:
      content: >-
        function reimageAll(resourceGroupName: string, vmScaleSetName: string,
        instanceId: string, options: Object, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: instanceId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.reimageAll_1
    name: 'reimageAll(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Allows you to re-image all the disks ( including data disks ) in the a VM
      scale set instance. This operation is only supported for managed disks.
    syntax:
      content: >-
        function reimageAll(resourceGroupName: string, vmScaleSetName: string,
        instanceId: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: instanceId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.VirtualMachineScaleSetVMs.reimageAllWithHttpOperationResponse
    name: 'reimageAllWithHttpOperationResponse(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Allows you to re-image all the disks ( including data disks ) in the a VM
      scale set instance. This operation is only supported for managed disks.
    syntax:
      content: >-
        function reimageAllWithHttpOperationResponse(resourceGroupName: string,
        vmScaleSetName: string, instanceId: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: instanceId
          type:
            - string
          description: |
            The instance ID of the virtual machine.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
        description: A promise is returned
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.VirtualMachineScaleSetVMs.reimageWithHttpOperationResponse
    name: 'reimageWithHttpOperationResponse(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Reimages (upgrade the operating system) a specific virtual machine in a VM
      scale set.
    syntax:
      content: >-
        function reimageWithHttpOperationResponse(resourceGroupName: string,
        vmScaleSetName: string, instanceId: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: instanceId
          type:
            - string
          description: |
            The instance ID of the virtual machine.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
        description: A promise is returned
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.restart
    name: 'restart(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Restarts a virtual machine in a VM scale set.
    syntax:
      content: >-
        function restart(resourceGroupName: string, vmScaleSetName: string,
        instanceId: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: instanceId
          type:
            - string
          description: |
            The instance ID of the virtual machine.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.restart_2
    name: 'restart(string, string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Restarts a virtual machine in a VM scale set.
    syntax:
      content: >-
        function restart(resourceGroupName: string, vmScaleSetName: string,
        instanceId: string, options: Object, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: instanceId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.restart_1
    name: 'restart(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Restarts a virtual machine in a VM scale set.
    syntax:
      content: >-
        function restart(resourceGroupName: string, vmScaleSetName: string,
        instanceId: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: instanceId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.VirtualMachineScaleSetVMs.restartWithHttpOperationResponse
    name: 'restartWithHttpOperationResponse(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Restarts a virtual machine in a VM scale set.
    syntax:
      content: >-
        function restartWithHttpOperationResponse(resourceGroupName: string,
        vmScaleSetName: string, instanceId: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: instanceId
          type:
            - string
          description: |
            The instance ID of the virtual machine.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
        description: A promise is returned
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.runCommand
    name: 'runCommand(string, string, string, RunCommandInput, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Run command on a virtual machine in a VM scale set.
    syntax:
      content: >-
        function runCommand(resourceGroupName: string, vmScaleSetName: string,
        instanceId: string, parameters: RunCommandInput, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: instanceId
          type:
            - string
          description: |
            The instance ID of the virtual machine.
        - id: parameters
          type:
            - azure-arm-compute - v10.0.0.RunCommandInput
          description: |
            Parameters supplied to the Run command operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.RunCommandResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {RunCommandResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {RunCommandResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link RunCommandResult} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.runCommand_2
    name: >-
      runCommand(string, string, string, RunCommandInput, Object,
      ServiceCallback<RunCommandResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Run command on a virtual machine in a VM scale set.
    syntax:
      content: >-
        function runCommand(resourceGroupName: string, vmScaleSetName: string,
        instanceId: string, parameters: RunCommandInput, options: Object,
        callback: ServiceCallback<RunCommandResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: instanceId
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-compute - v10.0.0.RunCommandInput
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-compute - v10.0.0.RunCommandResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.RunCommandResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {RunCommandResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {RunCommandResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link RunCommandResult} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.runCommand_1
    name: >-
      runCommand(string, string, string, RunCommandInput,
      ServiceCallback<RunCommandResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Run command on a virtual machine in a VM scale set.
    syntax:
      content: >-
        function runCommand(resourceGroupName: string, vmScaleSetName: string,
        instanceId: string, parameters: RunCommandInput, callback:
        ServiceCallback<RunCommandResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: instanceId
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-compute - v10.0.0.RunCommandInput
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-compute - v10.0.0.RunCommandResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.RunCommandResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {RunCommandResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {RunCommandResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link RunCommandResult} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.VirtualMachineScaleSetVMs.runCommandWithHttpOperationResponse
    name: >-
      runCommandWithHttpOperationResponse(string, string, string,
      RunCommandInput, Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: Run command on a virtual machine in a VM scale set.
    syntax:
      content: >-
        function runCommandWithHttpOperationResponse(resourceGroupName: string,
        vmScaleSetName: string, instanceId: string, parameters: RunCommandInput,
        options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: instanceId
          type:
            - string
          description: |
            The instance ID of the virtual machine.
        - id: parameters
          type:
            - azure-arm-compute - v10.0.0.RunCommandInput
          description: |
            Parameters supplied to the Run command operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-compute -
            v10.0.0.RunCommandResult>>
        description: A promise is returned
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.start
    name: 'start(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Starts a virtual machine in a VM scale set.
    syntax:
      content: >-
        function start(resourceGroupName: string, vmScaleSetName: string,
        instanceId: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: instanceId
          type:
            - string
          description: |
            The instance ID of the virtual machine.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.start_2
    name: 'start(string, string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Starts a virtual machine in a VM scale set.
    syntax:
      content: >-
        function start(resourceGroupName: string, vmScaleSetName: string,
        instanceId: string, options: Object, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: instanceId
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.start_1
    name: 'start(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Starts a virtual machine in a VM scale set.
    syntax:
      content: >-
        function start(resourceGroupName: string, vmScaleSetName: string,
        instanceId: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: instanceId
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.VirtualMachineScaleSetVMs.startWithHttpOperationResponse
    name: 'startWithHttpOperationResponse(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Starts a virtual machine in a VM scale set.
    syntax:
      content: >-
        function startWithHttpOperationResponse(resourceGroupName: string,
        vmScaleSetName: string, instanceId: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set.
        - id: instanceId
          type:
            - string
          description: |
            The instance ID of the virtual machine.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
        description: A promise is returned
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.update
    name: 'update(string, string, string, VirtualMachineScaleSetVM, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates a virtual machine of a VM scale set.
    syntax:
      content: >-
        function update(resourceGroupName: string, vmScaleSetName: string,
        instanceId: string, parameters: VirtualMachineScaleSetVM, options?:
        Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set where the
            extension should be create or updated.
        - id: instanceId
          type:
            - string
          description: |
            The instance ID of the virtual machine.
        - id: parameters
          type:
            - azure-arm-compute - v10.0.0.VirtualMachineScaleSetVM
          description: |
            Parameters supplied to the Update Virtual Machine
            Scale Sets VM operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.VirtualMachineScaleSetVM>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VirtualMachineScaleSetVM} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VirtualMachineScaleSetVM} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachineScaleSetVM} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.update_2
    name: >-
      update(string, string, string, VirtualMachineScaleSetVM, Object,
      ServiceCallback<VirtualMachineScaleSetVM>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates a virtual machine of a VM scale set.
    syntax:
      content: >-
        function update(resourceGroupName: string, vmScaleSetName: string,
        instanceId: string, parameters: VirtualMachineScaleSetVM, options:
        Object, callback: ServiceCallback<VirtualMachineScaleSetVM>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: instanceId
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-compute - v10.0.0.VirtualMachineScaleSetVM
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<azure-arm-compute -
              v10.0.0.VirtualMachineScaleSetVM>
          description: ''
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.VirtualMachineScaleSetVM>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VirtualMachineScaleSetVM} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VirtualMachineScaleSetVM} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachineScaleSetVM} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMs.update_1
    name: >-
      update(string, string, string, VirtualMachineScaleSetVM,
      ServiceCallback<VirtualMachineScaleSetVM>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates a virtual machine of a VM scale set.
    syntax:
      content: >-
        function update(resourceGroupName: string, vmScaleSetName: string,
        instanceId: string, parameters: VirtualMachineScaleSetVM, callback:
        ServiceCallback<VirtualMachineScaleSetVM>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: vmScaleSetName
          type:
            - string
          description: ''
        - id: instanceId
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-compute - v10.0.0.VirtualMachineScaleSetVM
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<azure-arm-compute -
              v10.0.0.VirtualMachineScaleSetVM>
          description: ''
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.VirtualMachineScaleSetVM>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VirtualMachineScaleSetVM} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VirtualMachineScaleSetVM} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachineScaleSetVM} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.VirtualMachineScaleSetVMs.updateWithHttpOperationResponse
    name: >-
      updateWithHttpOperationResponse(string, string, string,
      VirtualMachineScaleSetVM, Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates a virtual machine of a VM scale set.
    syntax:
      content: >-
        function updateWithHttpOperationResponse(resourceGroupName: string,
        vmScaleSetName: string, instanceId: string, parameters:
        VirtualMachineScaleSetVM, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |
            The name of the VM scale set where the
            extension should be create or updated.
        - id: instanceId
          type:
            - string
          description: |
            The instance ID of the virtual machine.
        - id: parameters
          type:
            - azure-arm-compute - v10.0.0.VirtualMachineScaleSetVM
          description: |
            Parameters supplied to the Update Virtual Machine
            Scale Sets VM operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-compute -
            v10.0.0.VirtualMachineScaleSetVM>>
        description: A promise is returned
    package: azure-arm-compute - v10
references:
  - uid: azure-arm-compute - v10.0.0.RunCommandInput
    name: RunCommandInput
    spec.typeScript:
      - name: RunCommandInput
        fullName: RunCommandInput
        uid: azure-arm-compute - v10.0.0.RunCommandInput
  - uid: Promise<azure-arm-compute - v10.0.0.RunCommandResult>
    name: RunCommandResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: RunCommandResult
        fullName: RunCommandResult
        uid: azure-arm-compute - v10.0.0.RunCommandResult
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-arm-compute - v10.0.0.RunCommandResult>
    name: RunCommandResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: RunCommandResult
        fullName: RunCommandResult
        uid: azure-arm-compute - v10.0.0.RunCommandResult
      - name: '>'
        fullName: '>'
  - uid: >-
      Promise<HttpOperationResponse<azure-arm-compute -
      v10.0.0.RunCommandResult>>
    name: RunCommandResult>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: RunCommandResult
        fullName: RunCommandResult
        uid: azure-arm-compute - v10.0.0.RunCommandResult
      - name: '>>'
        fullName: '>>'
  - uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSetVM
    name: VirtualMachineScaleSetVM
    spec.typeScript:
      - name: VirtualMachineScaleSetVM
        fullName: VirtualMachineScaleSetVM
        uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSetVM
  - uid: Promise<azure-arm-compute - v10.0.0.VirtualMachineScaleSetVM>
    name: VirtualMachineScaleSetVM>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: VirtualMachineScaleSetVM
        fullName: VirtualMachineScaleSetVM
        uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSetVM
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-arm-compute - v10.0.0.VirtualMachineScaleSetVM>
    name: VirtualMachineScaleSetVM>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: VirtualMachineScaleSetVM
        fullName: VirtualMachineScaleSetVM
        uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSetVM
      - name: '>'
        fullName: '>'
  - uid: >-
      Promise<HttpOperationResponse<azure-arm-compute -
      v10.0.0.VirtualMachineScaleSetVM>>
    name: VirtualMachineScaleSetVM>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: VirtualMachineScaleSetVM
        fullName: VirtualMachineScaleSetVM
        uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSetVM
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMInstanceView>
    name: VirtualMachineScaleSetVMInstanceView>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: VirtualMachineScaleSetVMInstanceView
        fullName: VirtualMachineScaleSetVMInstanceView
        uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMInstanceView
      - name: '>'
        fullName: '>'
  - uid: >-
      ServiceCallback<azure-arm-compute -
      v10.0.0.VirtualMachineScaleSetVMInstanceView>
    name: VirtualMachineScaleSetVMInstanceView>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: VirtualMachineScaleSetVMInstanceView
        fullName: VirtualMachineScaleSetVMInstanceView
        uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMInstanceView
      - name: '>'
        fullName: '>'
  - uid: >-
      Promise<HttpOperationResponse<azure-arm-compute -
      v10.0.0.VirtualMachineScaleSetVMInstanceView>>
    name: VirtualMachineScaleSetVMInstanceView>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: VirtualMachineScaleSetVMInstanceView
        fullName: VirtualMachineScaleSetVMInstanceView
        uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMInstanceView
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMListResult>
    name: VirtualMachineScaleSetVMListResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: VirtualMachineScaleSetVMListResult
        fullName: VirtualMachineScaleSetVMListResult
        uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMListResult
      - name: '>'
        fullName: '>'
  - uid: >-
      ServiceCallback<azure-arm-compute -
      v10.0.0.VirtualMachineScaleSetVMListResult>
    name: VirtualMachineScaleSetVMListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: VirtualMachineScaleSetVMListResult
        fullName: VirtualMachineScaleSetVMListResult
        uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMListResult
      - name: '>'
        fullName: '>'
  - uid: >-
      Promise<HttpOperationResponse<azure-arm-compute -
      v10.0.0.VirtualMachineScaleSetVMListResult>>
    name: VirtualMachineScaleSetVMListResult>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: VirtualMachineScaleSetVMListResult
        fullName: VirtualMachineScaleSetVMListResult
        uid: azure-arm-compute - v10.0.0.VirtualMachineScaleSetVMListResult
      - name: '>>'
        fullName: '>>'
