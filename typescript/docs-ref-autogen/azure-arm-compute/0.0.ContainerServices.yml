### YamlMime:UniversalReference
items:
  - uid: azure-arm-compute - v10.0.0.ContainerServices
    name: ContainerServices
    fullName: ContainerServices
    children:
      - azure-arm-compute - v10.0.0.ContainerServices.beginCreateOrUpdate
      - azure-arm-compute - v10.0.0.ContainerServices.beginCreateOrUpdate_2
      - azure-arm-compute - v10.0.0.ContainerServices.beginCreateOrUpdate_1
      - >-
        azure-arm-compute -
        v10.0.0.ContainerServices.beginCreateOrUpdateWithHttpOperationResponse
      - azure-arm-compute - v10.0.0.ContainerServices.beginDeleteMethod
      - azure-arm-compute - v10.0.0.ContainerServices.beginDeleteMethod_2
      - azure-arm-compute - v10.0.0.ContainerServices.beginDeleteMethod_1
      - >-
        azure-arm-compute -
        v10.0.0.ContainerServices.beginDeleteMethodWithHttpOperationResponse
      - azure-arm-compute - v10.0.0.ContainerServices.createOrUpdate
      - azure-arm-compute - v10.0.0.ContainerServices.createOrUpdate_2
      - azure-arm-compute - v10.0.0.ContainerServices.createOrUpdate_1
      - >-
        azure-arm-compute -
        v10.0.0.ContainerServices.createOrUpdateWithHttpOperationResponse
      - azure-arm-compute - v10.0.0.ContainerServices.deleteMethod
      - azure-arm-compute - v10.0.0.ContainerServices.deleteMethod_2
      - azure-arm-compute - v10.0.0.ContainerServices.deleteMethod_1
      - >-
        azure-arm-compute -
        v10.0.0.ContainerServices.deleteMethodWithHttpOperationResponse
      - azure-arm-compute - v10.0.0.ContainerServices.get
      - azure-arm-compute - v10.0.0.ContainerServices.get_2
      - azure-arm-compute - v10.0.0.ContainerServices.get_1
      - >-
        azure-arm-compute -
        v10.0.0.ContainerServices.getWithHttpOperationResponse
      - azure-arm-compute - v10.0.0.ContainerServices.list
      - azure-arm-compute - v10.0.0.ContainerServices.list_2
      - azure-arm-compute - v10.0.0.ContainerServices.list_1
      - azure-arm-compute - v10.0.0.ContainerServices.listByResourceGroup
      - azure-arm-compute - v10.0.0.ContainerServices.listByResourceGroup_2
      - azure-arm-compute - v10.0.0.ContainerServices.listByResourceGroup_1
      - azure-arm-compute - v10.0.0.ContainerServices.listByResourceGroupNext
      - azure-arm-compute - v10.0.0.ContainerServices.listByResourceGroupNext_2
      - azure-arm-compute - v10.0.0.ContainerServices.listByResourceGroupNext_1
      - >-
        azure-arm-compute -
        v10.0.0.ContainerServices.listByResourceGroupNextWithHttpOperationResponse
      - >-
        azure-arm-compute -
        v10.0.0.ContainerServices.listByResourceGroupWithHttpOperationResponse
      - azure-arm-compute - v10.0.0.ContainerServices.listNext
      - azure-arm-compute - v10.0.0.ContainerServices.listNext_2
      - azure-arm-compute - v10.0.0.ContainerServices.listNext_1
      - >-
        azure-arm-compute -
        v10.0.0.ContainerServices.listNextWithHttpOperationResponse
      - >-
        azure-arm-compute -
        v10.0.0.ContainerServices.listWithHttpOperationResponse
    langs:
      - typeScript
    type: interface
    summary: ''
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.ContainerServices.beginCreateOrUpdate
    name: 'beginCreateOrUpdate(string, string, ContainerService, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string,
        containerServiceName: string, parameters: ContainerService, options?:
        Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: containerServiceName
          type:
            - string
          description: |
            The name of the container service in
            the specified subscription and resource group.
        - id: parameters
          type:
            - azure-arm-compute - v10.0.0.ContainerService
          description: |
            Parameters supplied to the Create or Update a
            Container Service operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.ContainerService>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {ContainerService} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {ContainerService} [result]   - The deserialized result object if an error did not occur.
                               See {@link ContainerService} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.ContainerServices.beginCreateOrUpdate_2
    name: >-
      beginCreateOrUpdate(string, string, ContainerService, Object,
      ServiceCallback<ContainerService>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string,
        containerServiceName: string, parameters: ContainerService, options:
        Object, callback: ServiceCallback<ContainerService>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: containerServiceName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-compute - v10.0.0.ContainerService
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-compute - v10.0.0.ContainerService>
          description: ''
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.ContainerService>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {ContainerService} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {ContainerService} [result]   - The deserialized result object if an error did not occur.
                               See {@link ContainerService} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.ContainerServices.beginCreateOrUpdate_1
    name: >-
      beginCreateOrUpdate(string, string, ContainerService,
      ServiceCallback<ContainerService>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string,
        containerServiceName: string, parameters: ContainerService, callback:
        ServiceCallback<ContainerService>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: containerServiceName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-compute - v10.0.0.ContainerService
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-compute - v10.0.0.ContainerService>
          description: ''
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.ContainerService>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {ContainerService} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {ContainerService} [result]   - The deserialized result object if an error did not occur.
                               See {@link ContainerService} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.ContainerServices.beginCreateOrUpdateWithHttpOperationResponse
    name: >-
      beginCreateOrUpdateWithHttpOperationResponse(string, string,
      ContainerService, Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function beginCreateOrUpdateWithHttpOperationResponse(resourceGroupName:
        string, containerServiceName: string, parameters: ContainerService,
        options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: containerServiceName
          type:
            - string
          description: |
            The name of the container service in
            the specified subscription and resource group.
        - id: parameters
          type:
            - azure-arm-compute - v10.0.0.ContainerService
          description: |
            Parameters supplied to the Create or Update a
            Container Service operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-compute -
            v10.0.0.ContainerService>>
        description: A promise is returned
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.ContainerServices.beginDeleteMethod
    name: 'beginDeleteMethod(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function beginDeleteMethod(resourceGroupName: string,
        containerServiceName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: containerServiceName
          type:
            - string
          description: |
            The name of the container service in
            the specified subscription and resource group.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.ContainerServices.beginDeleteMethod_2
    name: 'beginDeleteMethod(string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function beginDeleteMethod(resourceGroupName: string,
        containerServiceName: string, options: Object, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: containerServiceName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.ContainerServices.beginDeleteMethod_1
    name: 'beginDeleteMethod(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function beginDeleteMethod(resourceGroupName: string,
        containerServiceName: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: containerServiceName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.ContainerServices.beginDeleteMethodWithHttpOperationResponse
    name: 'beginDeleteMethodWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function beginDeleteMethodWithHttpOperationResponse(resourceGroupName:
        string, containerServiceName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: containerServiceName
          type:
            - string
          description: |
            The name of the container service in
            the specified subscription and resource group.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
        description: A promise is returned
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.ContainerServices.createOrUpdate
    name: 'createOrUpdate(string, string, ContainerService, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, containerServiceName:
        string, parameters: ContainerService, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: containerServiceName
          type:
            - string
          description: |
            The name of the container service in
            the specified subscription and resource group.
        - id: parameters
          type:
            - azure-arm-compute - v10.0.0.ContainerService
          description: |
            Parameters supplied to the Create or Update a
            Container Service operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.ContainerService>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {ContainerService} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {ContainerService} [result]   - The deserialized result object if an error did not occur.
                               See {@link ContainerService} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.ContainerServices.createOrUpdate_2
    name: >-
      createOrUpdate(string, string, ContainerService, Object,
      ServiceCallback<ContainerService>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, containerServiceName:
        string, parameters: ContainerService, options: Object, callback:
        ServiceCallback<ContainerService>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: containerServiceName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-compute - v10.0.0.ContainerService
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-compute - v10.0.0.ContainerService>
          description: ''
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.ContainerService>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {ContainerService} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {ContainerService} [result]   - The deserialized result object if an error did not occur.
                               See {@link ContainerService} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.ContainerServices.createOrUpdate_1
    name: >-
      createOrUpdate(string, string, ContainerService,
      ServiceCallback<ContainerService>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, containerServiceName:
        string, parameters: ContainerService, callback:
        ServiceCallback<ContainerService>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: containerServiceName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-compute - v10.0.0.ContainerService
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-compute - v10.0.0.ContainerService>
          description: ''
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.ContainerService>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {ContainerService} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {ContainerService} [result]   - The deserialized result object if an error did not occur.
                               See {@link ContainerService} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.ContainerServices.createOrUpdateWithHttpOperationResponse
    name: >-
      createOrUpdateWithHttpOperationResponse(string, string, ContainerService,
      Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createOrUpdateWithHttpOperationResponse(resourceGroupName:
        string, containerServiceName: string, parameters: ContainerService,
        options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: containerServiceName
          type:
            - string
          description: |
            The name of the container service in
            the specified subscription and resource group.
        - id: parameters
          type:
            - azure-arm-compute - v10.0.0.ContainerService
          description: |
            Parameters supplied to the Create or Update a
            Container Service operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-compute -
            v10.0.0.ContainerService>>
        description: A promise is returned
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.ContainerServices.deleteMethod
    name: 'deleteMethod(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, containerServiceName:
        string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: containerServiceName
          type:
            - string
          description: |
            The name of the container service in
            the specified subscription and resource group.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.ContainerServices.deleteMethod_2
    name: 'deleteMethod(string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, containerServiceName:
        string, options: Object, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: containerServiceName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.ContainerServices.deleteMethod_1
    name: 'deleteMethod(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, containerServiceName:
        string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: containerServiceName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.ContainerServices.deleteMethodWithHttpOperationResponse
    name: 'deleteMethodWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteMethodWithHttpOperationResponse(resourceGroupName:
        string, containerServiceName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: containerServiceName
          type:
            - string
          description: |
            The name of the container service in
            the specified subscription and resource group.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
        description: A promise is returned
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.ContainerServices.get
    name: 'get(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(resourceGroupName: string, containerServiceName: string,
        options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: containerServiceName
          type:
            - string
          description: |
            The name of the container service in
            the specified subscription and resource group.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.ContainerService>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {ContainerService} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {ContainerService} [result]   - The deserialized result object if an error did not occur.
                               See {@link ContainerService} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.ContainerServices.get_2
    name: 'get(string, string, Object, ServiceCallback<ContainerService>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(resourceGroupName: string, containerServiceName: string,
        options: Object, callback: ServiceCallback<ContainerService>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: containerServiceName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-compute - v10.0.0.ContainerService>
          description: ''
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.ContainerService>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {ContainerService} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {ContainerService} [result]   - The deserialized result object if an error did not occur.
                               See {@link ContainerService} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.ContainerServices.get_1
    name: 'get(string, string, ServiceCallback<ContainerService>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(resourceGroupName: string, containerServiceName: string,
        callback: ServiceCallback<ContainerService>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: containerServiceName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-compute - v10.0.0.ContainerService>
          description: ''
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.ContainerService>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {ContainerService} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {ContainerService} [result]   - The deserialized result object if an error did not occur.
                               See {@link ContainerService} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.ContainerServices.getWithHttpOperationResponse
    name: 'getWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getWithHttpOperationResponse(resourceGroupName: string,
        containerServiceName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: containerServiceName
          type:
            - string
          description: |
            The name of the container service in
            the specified subscription and resource group.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-compute -
            v10.0.0.ContainerService>>
        description: A promise is returned
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.ContainerServices.list
    name: list(Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(options?: Object)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.ContainerServiceListResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {ContainerServiceListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {ContainerServiceListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link ContainerServiceListResult} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.ContainerServices.list_2
    name: 'list(Object, ServiceCallback<ContainerServiceListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function list(options: Object, callback:
        ServiceCallback<ContainerServiceListResult>)
      parameters:
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<azure-arm-compute -
              v10.0.0.ContainerServiceListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.ContainerServiceListResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {ContainerServiceListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {ContainerServiceListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link ContainerServiceListResult} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.ContainerServices.list_1
    name: list(ServiceCallback<ContainerServiceListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(callback: ServiceCallback<ContainerServiceListResult>)'
      parameters:
        - id: callback
          type:
            - >-
              ServiceCallback<azure-arm-compute -
              v10.0.0.ContainerServiceListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.ContainerServiceListResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {ContainerServiceListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {ContainerServiceListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link ContainerServiceListResult} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.ContainerServices.listByResourceGroup
    name: 'listByResourceGroup(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options?:
        Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.ContainerServiceListResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {ContainerServiceListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {ContainerServiceListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link ContainerServiceListResult} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.ContainerServices.listByResourceGroup_2
    name: >-
      listByResourceGroup(string, Object,
      ServiceCallback<ContainerServiceListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options: Object,
        callback: ServiceCallback<ContainerServiceListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<azure-arm-compute -
              v10.0.0.ContainerServiceListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.ContainerServiceListResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {ContainerServiceListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {ContainerServiceListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link ContainerServiceListResult} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.ContainerServices.listByResourceGroup_1
    name: 'listByResourceGroup(string, ServiceCallback<ContainerServiceListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, callback:
        ServiceCallback<ContainerServiceListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<azure-arm-compute -
              v10.0.0.ContainerServiceListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.ContainerServiceListResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {ContainerServiceListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {ContainerServiceListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link ContainerServiceListResult} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.ContainerServices.listByResourceGroupNext
    name: 'listByResourceGroupNext(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listByResourceGroupNext(nextPageLink: string, options?: Object)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.ContainerServiceListResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {ContainerServiceListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {ContainerServiceListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link ContainerServiceListResult} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.ContainerServices.listByResourceGroupNext_2
    name: >-
      listByResourceGroupNext(string, Object,
      ServiceCallback<ContainerServiceListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, options: Object,
        callback: ServiceCallback<ContainerServiceListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<azure-arm-compute -
              v10.0.0.ContainerServiceListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.ContainerServiceListResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {ContainerServiceListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {ContainerServiceListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link ContainerServiceListResult} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.ContainerServices.listByResourceGroupNext_1
    name: >-
      listByResourceGroupNext(string,
      ServiceCallback<ContainerServiceListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, callback:
        ServiceCallback<ContainerServiceListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<azure-arm-compute -
              v10.0.0.ContainerServiceListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.ContainerServiceListResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {ContainerServiceListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {ContainerServiceListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link ContainerServiceListResult} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.ContainerServices.listByResourceGroupNextWithHttpOperationResponse
    name: 'listByResourceGroupNextWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByResourceGroupNextWithHttpOperationResponse(nextPageLink:
        string, options?: Object)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-compute -
            v10.0.0.ContainerServiceListResult>>
        description: A promise is returned
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.ContainerServices.listByResourceGroupWithHttpOperationResponse
    name: 'listByResourceGroupWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByResourceGroupWithHttpOperationResponse(resourceGroupName:
        string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-compute -
            v10.0.0.ContainerServiceListResult>>
        description: A promise is returned
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.ContainerServices.listNext
    name: 'listNext(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listNext(nextPageLink: string, options?: Object)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.ContainerServiceListResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {ContainerServiceListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {ContainerServiceListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link ContainerServiceListResult} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.ContainerServices.listNext_2
    name: 'listNext(string, Object, ServiceCallback<ContainerServiceListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listNext(nextPageLink: string, options: Object, callback:
        ServiceCallback<ContainerServiceListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<azure-arm-compute -
              v10.0.0.ContainerServiceListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.ContainerServiceListResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {ContainerServiceListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {ContainerServiceListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link ContainerServiceListResult} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: azure-arm-compute - v10.0.0.ContainerServices.listNext_1
    name: 'listNext(string, ServiceCallback<ContainerServiceListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listNext(nextPageLink: string, callback:
        ServiceCallback<ContainerServiceListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<azure-arm-compute -
              v10.0.0.ContainerServiceListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-compute - v10.0.0.ContainerServiceListResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {ContainerServiceListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {ContainerServiceListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link ContainerServiceListResult} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.ContainerServices.listNextWithHttpOperationResponse
    name: 'listNextWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listNextWithHttpOperationResponse(nextPageLink: string,
        options?: Object)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-compute -
            v10.0.0.ContainerServiceListResult>>
        description: A promise is returned
    package: azure-arm-compute - v10
  - uid: >-
      azure-arm-compute -
      v10.0.0.ContainerServices.listWithHttpOperationResponse
    name: listWithHttpOperationResponse(Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listWithHttpOperationResponse(options?: Object)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-compute -
            v10.0.0.ContainerServiceListResult>>
        description: A promise is returned
    package: azure-arm-compute - v10
references:
  - uid: azure-arm-compute - v10.0.0.ContainerService
    name: ContainerService
    spec.typeScript:
      - name: ContainerService
        fullName: ContainerService
        uid: azure-arm-compute - v10.0.0.ContainerService
  - uid: Promise<azure-arm-compute - v10.0.0.ContainerService>
    name: ContainerService>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ContainerService
        fullName: ContainerService
        uid: azure-arm-compute - v10.0.0.ContainerService
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-arm-compute - v10.0.0.ContainerService>
    name: ContainerService>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ContainerService
        fullName: ContainerService
        uid: azure-arm-compute - v10.0.0.ContainerService
      - name: '>'
        fullName: '>'
  - uid: >-
      Promise<HttpOperationResponse<azure-arm-compute -
      v10.0.0.ContainerService>>
    name: ContainerService>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: ContainerService
        fullName: ContainerService
        uid: azure-arm-compute - v10.0.0.ContainerService
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-arm-compute - v10.0.0.ContainerServiceListResult>
    name: ContainerServiceListResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ContainerServiceListResult
        fullName: ContainerServiceListResult
        uid: azure-arm-compute - v10.0.0.ContainerServiceListResult
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-arm-compute - v10.0.0.ContainerServiceListResult>
    name: ContainerServiceListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ContainerServiceListResult
        fullName: ContainerServiceListResult
        uid: azure-arm-compute - v10.0.0.ContainerServiceListResult
      - name: '>'
        fullName: '>'
  - uid: >-
      Promise<HttpOperationResponse<azure-arm-compute -
      v10.0.0.ContainerServiceListResult>>
    name: ContainerServiceListResult>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: ContainerServiceListResult
        fullName: ContainerServiceListResult
        uid: azure-arm-compute - v10.0.0.ContainerServiceListResult
      - name: '>>'
        fullName: '>>'
