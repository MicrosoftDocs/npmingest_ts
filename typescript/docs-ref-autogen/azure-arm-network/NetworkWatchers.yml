### YamlMime:UniversalReference
items:
  - uid: azure-arm-network.NetworkWatchers
    name: NetworkWatchers
    fullName: NetworkWatchers
    children:
      - azure-arm-network.NetworkWatchers.beginCheckConnectivity
      - azure-arm-network.NetworkWatchers.beginCheckConnectivity_2
      - azure-arm-network.NetworkWatchers.beginCheckConnectivity_1
      - >-
        azure-arm-network.NetworkWatchers.beginCheckConnectivityWithHttpOperationResponse
      - azure-arm-network.NetworkWatchers.beginDeleteMethod
      - azure-arm-network.NetworkWatchers.beginDeleteMethod_2
      - azure-arm-network.NetworkWatchers.beginDeleteMethod_1
      - >-
        azure-arm-network.NetworkWatchers.beginDeleteMethodWithHttpOperationResponse
      - azure-arm-network.NetworkWatchers.beginGetAzureReachabilityReport
      - azure-arm-network.NetworkWatchers.beginGetAzureReachabilityReport_2
      - azure-arm-network.NetworkWatchers.beginGetAzureReachabilityReport_1
      - >-
        azure-arm-network.NetworkWatchers.beginGetAzureReachabilityReportWithHttpOperationResponse
      - azure-arm-network.NetworkWatchers.beginGetFlowLogStatus
      - azure-arm-network.NetworkWatchers.beginGetFlowLogStatus_2
      - azure-arm-network.NetworkWatchers.beginGetFlowLogStatus_1
      - >-
        azure-arm-network.NetworkWatchers.beginGetFlowLogStatusWithHttpOperationResponse
      - azure-arm-network.NetworkWatchers.beginGetNetworkConfigurationDiagnostic
      - >-
        azure-arm-network.NetworkWatchers.beginGetNetworkConfigurationDiagnostic_2
      - >-
        azure-arm-network.NetworkWatchers.beginGetNetworkConfigurationDiagnostic_1
      - >-
        azure-arm-network.NetworkWatchers.beginGetNetworkConfigurationDiagnosticWithHttpOperationResponse
      - azure-arm-network.NetworkWatchers.beginGetNextHop
      - azure-arm-network.NetworkWatchers.beginGetNextHop_2
      - azure-arm-network.NetworkWatchers.beginGetNextHop_1
      - >-
        azure-arm-network.NetworkWatchers.beginGetNextHopWithHttpOperationResponse
      - azure-arm-network.NetworkWatchers.beginGetTroubleshooting
      - azure-arm-network.NetworkWatchers.beginGetTroubleshooting_2
      - azure-arm-network.NetworkWatchers.beginGetTroubleshooting_1
      - azure-arm-network.NetworkWatchers.beginGetTroubleshootingResult
      - azure-arm-network.NetworkWatchers.beginGetTroubleshootingResult_2
      - azure-arm-network.NetworkWatchers.beginGetTroubleshootingResult_1
      - >-
        azure-arm-network.NetworkWatchers.beginGetTroubleshootingResultWithHttpOperationResponse
      - >-
        azure-arm-network.NetworkWatchers.beginGetTroubleshootingWithHttpOperationResponse
      - azure-arm-network.NetworkWatchers.beginGetVMSecurityRules
      - azure-arm-network.NetworkWatchers.beginGetVMSecurityRules_2
      - azure-arm-network.NetworkWatchers.beginGetVMSecurityRules_1
      - >-
        azure-arm-network.NetworkWatchers.beginGetVMSecurityRulesWithHttpOperationResponse
      - azure-arm-network.NetworkWatchers.beginListAvailableProviders
      - azure-arm-network.NetworkWatchers.beginListAvailableProviders_2
      - azure-arm-network.NetworkWatchers.beginListAvailableProviders_1
      - >-
        azure-arm-network.NetworkWatchers.beginListAvailableProvidersWithHttpOperationResponse
      - azure-arm-network.NetworkWatchers.beginSetFlowLogConfiguration
      - azure-arm-network.NetworkWatchers.beginSetFlowLogConfiguration_2
      - azure-arm-network.NetworkWatchers.beginSetFlowLogConfiguration_1
      - >-
        azure-arm-network.NetworkWatchers.beginSetFlowLogConfigurationWithHttpOperationResponse
      - azure-arm-network.NetworkWatchers.beginVerifyIPFlow
      - azure-arm-network.NetworkWatchers.beginVerifyIPFlow_2
      - azure-arm-network.NetworkWatchers.beginVerifyIPFlow_1
      - >-
        azure-arm-network.NetworkWatchers.beginVerifyIPFlowWithHttpOperationResponse
      - azure-arm-network.NetworkWatchers.checkConnectivity
      - azure-arm-network.NetworkWatchers.checkConnectivity_2
      - azure-arm-network.NetworkWatchers.checkConnectivity_1
      - >-
        azure-arm-network.NetworkWatchers.checkConnectivityWithHttpOperationResponse
      - azure-arm-network.NetworkWatchers.createOrUpdate
      - azure-arm-network.NetworkWatchers.createOrUpdate_2
      - azure-arm-network.NetworkWatchers.createOrUpdate_1
      - >-
        azure-arm-network.NetworkWatchers.createOrUpdateWithHttpOperationResponse
      - azure-arm-network.NetworkWatchers.deleteMethod
      - azure-arm-network.NetworkWatchers.deleteMethod_2
      - azure-arm-network.NetworkWatchers.deleteMethod_1
      - azure-arm-network.NetworkWatchers.deleteMethodWithHttpOperationResponse
      - azure-arm-network.NetworkWatchers.get
      - azure-arm-network.NetworkWatchers.get_2
      - azure-arm-network.NetworkWatchers.get_1
      - azure-arm-network.NetworkWatchers.getAzureReachabilityReport
      - azure-arm-network.NetworkWatchers.getAzureReachabilityReport_2
      - azure-arm-network.NetworkWatchers.getAzureReachabilityReport_1
      - >-
        azure-arm-network.NetworkWatchers.getAzureReachabilityReportWithHttpOperationResponse
      - azure-arm-network.NetworkWatchers.getFlowLogStatus
      - azure-arm-network.NetworkWatchers.getFlowLogStatus_2
      - azure-arm-network.NetworkWatchers.getFlowLogStatus_1
      - >-
        azure-arm-network.NetworkWatchers.getFlowLogStatusWithHttpOperationResponse
      - azure-arm-network.NetworkWatchers.getNetworkConfigurationDiagnostic
      - azure-arm-network.NetworkWatchers.getNetworkConfigurationDiagnostic_2
      - azure-arm-network.NetworkWatchers.getNetworkConfigurationDiagnostic_1
      - >-
        azure-arm-network.NetworkWatchers.getNetworkConfigurationDiagnosticWithHttpOperationResponse
      - azure-arm-network.NetworkWatchers.getNextHop
      - azure-arm-network.NetworkWatchers.getNextHop_2
      - azure-arm-network.NetworkWatchers.getNextHop_1
      - azure-arm-network.NetworkWatchers.getNextHopWithHttpOperationResponse
      - azure-arm-network.NetworkWatchers.getTopology
      - azure-arm-network.NetworkWatchers.getTopology_2
      - azure-arm-network.NetworkWatchers.getTopology_1
      - azure-arm-network.NetworkWatchers.getTopologyWithHttpOperationResponse
      - azure-arm-network.NetworkWatchers.getTroubleshooting
      - azure-arm-network.NetworkWatchers.getTroubleshooting_2
      - azure-arm-network.NetworkWatchers.getTroubleshooting_1
      - azure-arm-network.NetworkWatchers.getTroubleshootingResult
      - azure-arm-network.NetworkWatchers.getTroubleshootingResult_2
      - azure-arm-network.NetworkWatchers.getTroubleshootingResult_1
      - >-
        azure-arm-network.NetworkWatchers.getTroubleshootingResultWithHttpOperationResponse
      - >-
        azure-arm-network.NetworkWatchers.getTroubleshootingWithHttpOperationResponse
      - azure-arm-network.NetworkWatchers.getVMSecurityRules
      - azure-arm-network.NetworkWatchers.getVMSecurityRules_2
      - azure-arm-network.NetworkWatchers.getVMSecurityRules_1
      - >-
        azure-arm-network.NetworkWatchers.getVMSecurityRulesWithHttpOperationResponse
      - azure-arm-network.NetworkWatchers.getWithHttpOperationResponse
      - azure-arm-network.NetworkWatchers.list
      - azure-arm-network.NetworkWatchers.list_2
      - azure-arm-network.NetworkWatchers.list_1
      - azure-arm-network.NetworkWatchers.listAll
      - azure-arm-network.NetworkWatchers.listAll_2
      - azure-arm-network.NetworkWatchers.listAll_1
      - azure-arm-network.NetworkWatchers.listAllWithHttpOperationResponse
      - azure-arm-network.NetworkWatchers.listAvailableProviders
      - azure-arm-network.NetworkWatchers.listAvailableProviders_2
      - azure-arm-network.NetworkWatchers.listAvailableProviders_1
      - >-
        azure-arm-network.NetworkWatchers.listAvailableProvidersWithHttpOperationResponse
      - azure-arm-network.NetworkWatchers.listWithHttpOperationResponse
      - azure-arm-network.NetworkWatchers.setFlowLogConfiguration
      - azure-arm-network.NetworkWatchers.setFlowLogConfiguration_2
      - azure-arm-network.NetworkWatchers.setFlowLogConfiguration_1
      - >-
        azure-arm-network.NetworkWatchers.setFlowLogConfigurationWithHttpOperationResponse
      - azure-arm-network.NetworkWatchers.updateTags
      - azure-arm-network.NetworkWatchers.updateTags_2
      - azure-arm-network.NetworkWatchers.updateTags_1
      - azure-arm-network.NetworkWatchers.updateTagsWithHttpOperationResponse
      - azure-arm-network.NetworkWatchers.verifyIPFlow
      - azure-arm-network.NetworkWatchers.verifyIPFlow_2
      - azure-arm-network.NetworkWatchers.verifyIPFlow_1
      - azure-arm-network.NetworkWatchers.verifyIPFlowWithHttpOperationResponse
    langs:
      - typeScript
    type: interface
    summary: ''
    package: azure-arm-network
  - uid: azure-arm-network.NetworkWatchers.beginCheckConnectivity
    name: 'beginCheckConnectivity(string, string, ConnectivityParameters, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Verifies the possibility of establishing a direct TCP connection from a
      virtual machine to a given endpoint including another VM or an arbitrary
      remote server.
    syntax:
      content: >-
        function beginCheckConnectivity(resourceGroupName: string,
        networkWatcherName: string, parameters: ConnectivityParameters,
        options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the network watcher resource
            group.
        - id: networkWatcherName
          type:
            - string
          description: |
            The name of the network watcher resource.
        - id: parameters
          type:
            - azure-arm-network.ConnectivityParameters
          description: |
            Parameters that determine how the connectivity
            check will be performed.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-network.ConnectivityInformation>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {ConnectivityInformation} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {ConnectivityInformation} [result]   - The deserialized result object if an error did not occur.
                               See {@link ConnectivityInformation} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network
  - uid: azure-arm-network.NetworkWatchers.beginCheckConnectivity_2
    name: >-
      beginCheckConnectivity(string, string, ConnectivityParameters, Object,
      ServiceCallback<ConnectivityInformation>)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Verifies the possibility of establishing a direct TCP connection from a
      virtual machine to a given endpoint including another VM or an arbitrary
      remote server.
    syntax:
      content: >-
        function beginCheckConnectivity(resourceGroupName: string,
        networkWatcherName: string, parameters: ConnectivityParameters, options:
        Object, callback: ServiceCallback<ConnectivityInformation>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: networkWatcherName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-network.ConnectivityParameters
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-network.ConnectivityInformation>
          description: ''
      return:
        type:
          - Promise<azure-arm-network.ConnectivityInformation>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {ConnectivityInformation} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {ConnectivityInformation} [result]   - The deserialized result object if an error did not occur.
                               See {@link ConnectivityInformation} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network
  - uid: azure-arm-network.NetworkWatchers.beginCheckConnectivity_1
    name: >-
      beginCheckConnectivity(string, string, ConnectivityParameters,
      ServiceCallback<ConnectivityInformation>)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Verifies the possibility of establishing a direct TCP connection from a
      virtual machine to a given endpoint including another VM or an arbitrary
      remote server.
    syntax:
      content: >-
        function beginCheckConnectivity(resourceGroupName: string,
        networkWatcherName: string, parameters: ConnectivityParameters,
        callback: ServiceCallback<ConnectivityInformation>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: networkWatcherName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-network.ConnectivityParameters
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-network.ConnectivityInformation>
          description: ''
      return:
        type:
          - Promise<azure-arm-network.ConnectivityInformation>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {ConnectivityInformation} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {ConnectivityInformation} [result]   - The deserialized result object if an error did not occur.
                               See {@link ConnectivityInformation} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network
  - uid: >-
      azure-arm-network.NetworkWatchers.beginCheckConnectivityWithHttpOperationResponse
    name: >-
      beginCheckConnectivityWithHttpOperationResponse(string, string,
      ConnectivityParameters, Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Verifies the possibility of establishing a direct TCP connection from a
      virtual machine to a given endpoint including another VM or an arbitrary
      remote server.
    syntax:
      content: >-
        function
        beginCheckConnectivityWithHttpOperationResponse(resourceGroupName:
        string, networkWatcherName: string, parameters: ConnectivityParameters,
        options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the network watcher resource
            group.
        - id: networkWatcherName
          type:
            - string
          description: |
            The name of the network watcher resource.
        - id: parameters
          type:
            - azure-arm-network.ConnectivityParameters
          description: |
            Parameters that determine how the connectivity
            check will be performed.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-network.ConnectivityInformation>>
        description: A promise is returned
    package: azure-arm-network
  - uid: azure-arm-network.NetworkWatchers.beginDeleteMethod
    name: 'beginDeleteMethod(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes the specified network watcher resource.
    syntax:
      content: >-
        function beginDeleteMethod(resourceGroupName: string,
        networkWatcherName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: |
            The name of the network watcher.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network
  - uid: azure-arm-network.NetworkWatchers.beginDeleteMethod_2
    name: 'beginDeleteMethod(string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes the specified network watcher resource.
    syntax:
      content: >-
        function beginDeleteMethod(resourceGroupName: string,
        networkWatcherName: string, options: Object, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: networkWatcherName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network
  - uid: azure-arm-network.NetworkWatchers.beginDeleteMethod_1
    name: 'beginDeleteMethod(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes the specified network watcher resource.
    syntax:
      content: >-
        function beginDeleteMethod(resourceGroupName: string,
        networkWatcherName: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: networkWatcherName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network
  - uid: >-
      azure-arm-network.NetworkWatchers.beginDeleteMethodWithHttpOperationResponse
    name: 'beginDeleteMethodWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes the specified network watcher resource.
    syntax:
      content: >-
        function beginDeleteMethodWithHttpOperationResponse(resourceGroupName:
        string, networkWatcherName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: |
            The name of the network watcher.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
        description: A promise is returned
    package: azure-arm-network
  - uid: azure-arm-network.NetworkWatchers.beginGetAzureReachabilityReport
    name: >-
      beginGetAzureReachabilityReport(string, string,
      AzureReachabilityReportParameters, Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Gets the relative latency score for internet service providers from a
      specified location to Azure regions.
    syntax:
      content: >-
        function beginGetAzureReachabilityReport(resourceGroupName: string,
        networkWatcherName: string, parameters:
        AzureReachabilityReportParameters, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the network watcher resource
            group.
        - id: networkWatcherName
          type:
            - string
          description: |
            The name of the network watcher resource.
        - id: parameters
          type:
            - azure-arm-network.AzureReachabilityReportParameters
          description: |
            Parameters that determine Azure reachability
            report configuration.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-network.AzureReachabilityReport>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {AzureReachabilityReport} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {AzureReachabilityReport} [result]   - The deserialized result object if an error did not occur.
                               See {@link AzureReachabilityReport} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network
  - uid: azure-arm-network.NetworkWatchers.beginGetAzureReachabilityReport_2
    name: >-
      beginGetAzureReachabilityReport(string, string,
      AzureReachabilityReportParameters, Object,
      ServiceCallback<AzureReachabilityReport>)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Gets the relative latency score for internet service providers from a
      specified location to Azure regions.
    syntax:
      content: >-
        function beginGetAzureReachabilityReport(resourceGroupName: string,
        networkWatcherName: string, parameters:
        AzureReachabilityReportParameters, options: Object, callback:
        ServiceCallback<AzureReachabilityReport>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: networkWatcherName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-network.AzureReachabilityReportParameters
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-network.AzureReachabilityReport>
          description: ''
      return:
        type:
          - Promise<azure-arm-network.AzureReachabilityReport>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {AzureReachabilityReport} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {AzureReachabilityReport} [result]   - The deserialized result object if an error did not occur.
                               See {@link AzureReachabilityReport} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network
  - uid: azure-arm-network.NetworkWatchers.beginGetAzureReachabilityReport_1
    name: >-
      beginGetAzureReachabilityReport(string, string,
      AzureReachabilityReportParameters,
      ServiceCallback<AzureReachabilityReport>)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Gets the relative latency score for internet service providers from a
      specified location to Azure regions.
    syntax:
      content: >-
        function beginGetAzureReachabilityReport(resourceGroupName: string,
        networkWatcherName: string, parameters:
        AzureReachabilityReportParameters, callback:
        ServiceCallback<AzureReachabilityReport>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: networkWatcherName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-network.AzureReachabilityReportParameters
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-network.AzureReachabilityReport>
          description: ''
      return:
        type:
          - Promise<azure-arm-network.AzureReachabilityReport>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {AzureReachabilityReport} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {AzureReachabilityReport} [result]   - The deserialized result object if an error did not occur.
                               See {@link AzureReachabilityReport} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network
  - uid: >-
      azure-arm-network.NetworkWatchers.beginGetAzureReachabilityReportWithHttpOperationResponse
    name: >-
      beginGetAzureReachabilityReportWithHttpOperationResponse(string, string,
      AzureReachabilityReportParameters, Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Gets the relative latency score for internet service providers from a
      specified location to Azure regions.
    syntax:
      content: >-
        function
        beginGetAzureReachabilityReportWithHttpOperationResponse(resourceGroupName:
        string, networkWatcherName: string, parameters:
        AzureReachabilityReportParameters, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the network watcher resource
            group.
        - id: networkWatcherName
          type:
            - string
          description: |
            The name of the network watcher resource.
        - id: parameters
          type:
            - azure-arm-network.AzureReachabilityReportParameters
          description: |
            Parameters that determine Azure reachability
            report configuration.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-network.AzureReachabilityReport>>
        description: A promise is returned
    package: azure-arm-network
  - uid: azure-arm-network.NetworkWatchers.beginGetFlowLogStatus
    name: 'beginGetFlowLogStatus(string, string, FlowLogStatusParameters, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Queries status of flow log and traffic analytics (optional) on a specified
      resource.
    syntax:
      content: >-
        function beginGetFlowLogStatus(resourceGroupName: string,
        networkWatcherName: string, parameters: FlowLogStatusParameters,
        options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the network watcher resource
            group.
        - id: networkWatcherName
          type:
            - string
          description: |
            The name of the network watcher resource.
        - id: parameters
          type:
            - azure-arm-network.FlowLogStatusParameters
          description: |
            Parameters that define a resource to query flow
            log and traffic analytics (optional)  status.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-network.FlowLogInformation>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {FlowLogInformation} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {FlowLogInformation} [result]   - The deserialized result object if an error did not occur.
                               See {@link FlowLogInformation} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network
  - uid: azure-arm-network.NetworkWatchers.beginGetFlowLogStatus_2
    name: >-
      beginGetFlowLogStatus(string, string, FlowLogStatusParameters, Object,
      ServiceCallback<FlowLogInformation>)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Queries status of flow log and traffic analytics (optional) on a specified
      resource.
    syntax:
      content: >-
        function beginGetFlowLogStatus(resourceGroupName: string,
        networkWatcherName: string, parameters: FlowLogStatusParameters,
        options: Object, callback: ServiceCallback<FlowLogInformation>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: networkWatcherName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-network.FlowLogStatusParameters
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-network.FlowLogInformation>
          description: ''
      return:
        type:
          - Promise<azure-arm-network.FlowLogInformation>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {FlowLogInformation} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {FlowLogInformation} [result]   - The deserialized result object if an error did not occur.
                               See {@link FlowLogInformation} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network
  - uid: azure-arm-network.NetworkWatchers.beginGetFlowLogStatus_1
    name: >-
      beginGetFlowLogStatus(string, string, FlowLogStatusParameters,
      ServiceCallback<FlowLogInformation>)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Queries status of flow log and traffic analytics (optional) on a specified
      resource.
    syntax:
      content: >-
        function beginGetFlowLogStatus(resourceGroupName: string,
        networkWatcherName: string, parameters: FlowLogStatusParameters,
        callback: ServiceCallback<FlowLogInformation>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: networkWatcherName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-network.FlowLogStatusParameters
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-network.FlowLogInformation>
          description: ''
      return:
        type:
          - Promise<azure-arm-network.FlowLogInformation>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {FlowLogInformation} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {FlowLogInformation} [result]   - The deserialized result object if an error did not occur.
                               See {@link FlowLogInformation} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network
  - uid: >-
      azure-arm-network.NetworkWatchers.beginGetFlowLogStatusWithHttpOperationResponse
    name: >-
      beginGetFlowLogStatusWithHttpOperationResponse(string, string,
      FlowLogStatusParameters, Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Queries status of flow log and traffic analytics (optional) on a specified
      resource.
    syntax:
      content: >-
        function
        beginGetFlowLogStatusWithHttpOperationResponse(resourceGroupName:
        string, networkWatcherName: string, parameters: FlowLogStatusParameters,
        options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the network watcher resource
            group.
        - id: networkWatcherName
          type:
            - string
          description: |
            The name of the network watcher resource.
        - id: parameters
          type:
            - azure-arm-network.FlowLogStatusParameters
          description: |
            Parameters that define a resource to query flow
            log and traffic analytics (optional)  status.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-arm-network.FlowLogInformation>>
        description: A promise is returned
    package: azure-arm-network
  - uid: azure-arm-network.NetworkWatchers.beginGetNetworkConfigurationDiagnostic
    name: >-
      beginGetNetworkConfigurationDiagnostic(string, string,
      NetworkConfigurationDiagnosticParameters, Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: Get network configuration diagnostic.
    syntax:
      content: >-
        function beginGetNetworkConfigurationDiagnostic(resourceGroupName:
        string, networkWatcherName: string, parameters:
        NetworkConfigurationDiagnosticParameters, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: |
            The name of the network watcher.
        - id: parameters
          type:
            - azure-arm-network.NetworkConfigurationDiagnosticParameters
          description: |
            Parameters to get network configuration
            diagnostic.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-network.NetworkConfigurationDiagnosticResponse>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {NetworkConfigurationDiagnosticResponse} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {NetworkConfigurationDiagnosticResponse} [result]   - The deserialized result object if an error did not occur.
                               See {@link NetworkConfigurationDiagnosticResponse} for
                               more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network
  - uid: azure-arm-network.NetworkWatchers.beginGetNetworkConfigurationDiagnostic_2
    name: >-
      beginGetNetworkConfigurationDiagnostic(string, string,
      NetworkConfigurationDiagnosticParameters, Object,
      ServiceCallback<NetworkConfigurationDiagnosticResponse>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Get network configuration diagnostic.
    syntax:
      content: >-
        function beginGetNetworkConfigurationDiagnostic(resourceGroupName:
        string, networkWatcherName: string, parameters:
        NetworkConfigurationDiagnosticParameters, options: Object, callback:
        ServiceCallback<NetworkConfigurationDiagnosticResponse>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: networkWatcherName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-network.NetworkConfigurationDiagnosticParameters
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<azure-arm-network.NetworkConfigurationDiagnosticResponse>
          description: ''
      return:
        type:
          - Promise<azure-arm-network.NetworkConfigurationDiagnosticResponse>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {NetworkConfigurationDiagnosticResponse} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {NetworkConfigurationDiagnosticResponse} [result]   - The deserialized result object if an error did not occur.
                               See {@link NetworkConfigurationDiagnosticResponse} for
                               more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network
  - uid: azure-arm-network.NetworkWatchers.beginGetNetworkConfigurationDiagnostic_1
    name: >-
      beginGetNetworkConfigurationDiagnostic(string, string,
      NetworkConfigurationDiagnosticParameters,
      ServiceCallback<NetworkConfigurationDiagnosticResponse>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Get network configuration diagnostic.
    syntax:
      content: >-
        function beginGetNetworkConfigurationDiagnostic(resourceGroupName:
        string, networkWatcherName: string, parameters:
        NetworkConfigurationDiagnosticParameters, callback:
        ServiceCallback<NetworkConfigurationDiagnosticResponse>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: networkWatcherName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-network.NetworkConfigurationDiagnosticParameters
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<azure-arm-network.NetworkConfigurationDiagnosticResponse>
          description: ''
      return:
        type:
          - Promise<azure-arm-network.NetworkConfigurationDiagnosticResponse>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {NetworkConfigurationDiagnosticResponse} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {NetworkConfigurationDiagnosticResponse} [result]   - The deserialized result object if an error did not occur.
                               See {@link NetworkConfigurationDiagnosticResponse} for
                               more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network
  - uid: >-
      azure-arm-network.NetworkWatchers.beginGetNetworkConfigurationDiagnosticWithHttpOperationResponse
    name: >-
      beginGetNetworkConfigurationDiagnosticWithHttpOperationResponse(string,
      string, NetworkConfigurationDiagnosticParameters, Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: Get network configuration diagnostic.
    syntax:
      content: >-
        function
        beginGetNetworkConfigurationDiagnosticWithHttpOperationResponse(resourceGroupName:
        string, networkWatcherName: string, parameters:
        NetworkConfigurationDiagnosticParameters, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: |
            The name of the network watcher.
        - id: parameters
          type:
            - azure-arm-network.NetworkConfigurationDiagnosticParameters
          description: |
            Parameters to get network configuration
            diagnostic.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-network.NetworkConfigurationDiagnosticResponse>>
        description: A promise is returned
    package: azure-arm-network
  - uid: azure-arm-network.NetworkWatchers.beginGetNextHop
    name: 'beginGetNextHop(string, string, NextHopParameters, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the next hop from the specified VM.
    syntax:
      content: >-
        function beginGetNextHop(resourceGroupName: string, networkWatcherName:
        string, parameters: NextHopParameters, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: |
            The name of the network watcher.
        - id: parameters
          type:
            - azure-arm-network.NextHopParameters
          description: |
            Parameters that define the source and destination
            endpoint.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-network.NextHopResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {NextHopResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {NextHopResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link NextHopResult} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network
  - uid: azure-arm-network.NetworkWatchers.beginGetNextHop_2
    name: >-
      beginGetNextHop(string, string, NextHopParameters, Object,
      ServiceCallback<NextHopResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the next hop from the specified VM.
    syntax:
      content: >-
        function beginGetNextHop(resourceGroupName: string, networkWatcherName:
        string, parameters: NextHopParameters, options: Object, callback:
        ServiceCallback<NextHopResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: networkWatcherName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-network.NextHopParameters
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-network.NextHopResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-network.NextHopResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {NextHopResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {NextHopResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link NextHopResult} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network
  - uid: azure-arm-network.NetworkWatchers.beginGetNextHop_1
    name: >-
      beginGetNextHop(string, string, NextHopParameters,
      ServiceCallback<NextHopResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the next hop from the specified VM.
    syntax:
      content: >-
        function beginGetNextHop(resourceGroupName: string, networkWatcherName:
        string, parameters: NextHopParameters, callback:
        ServiceCallback<NextHopResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: networkWatcherName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-network.NextHopParameters
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-network.NextHopResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-network.NextHopResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {NextHopResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {NextHopResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link NextHopResult} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network
  - uid: azure-arm-network.NetworkWatchers.beginGetNextHopWithHttpOperationResponse
    name: >-
      beginGetNextHopWithHttpOperationResponse(string, string,
      NextHopParameters, Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the next hop from the specified VM.
    syntax:
      content: >-
        function beginGetNextHopWithHttpOperationResponse(resourceGroupName:
        string, networkWatcherName: string, parameters: NextHopParameters,
        options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: |
            The name of the network watcher.
        - id: parameters
          type:
            - azure-arm-network.NextHopParameters
          description: |
            Parameters that define the source and destination
            endpoint.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-arm-network.NextHopResult>>
        description: A promise is returned
    package: azure-arm-network
  - uid: azure-arm-network.NetworkWatchers.beginGetTroubleshooting
    name: 'beginGetTroubleshooting(string, string, TroubleshootingParameters, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Initiate troubleshooting on a specified resource
    syntax:
      content: >-
        function beginGetTroubleshooting(resourceGroupName: string,
        networkWatcherName: string, parameters: TroubleshootingParameters,
        options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: |
            The name of the network watcher resource.
        - id: parameters
          type:
            - azure-arm-network.TroubleshootingParameters
          description: |
            Parameters that define the resource to
            troubleshoot.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-network.TroubleshootingResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {TroubleshootingResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {TroubleshootingResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link TroubleshootingResult} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network
  - uid: azure-arm-network.NetworkWatchers.beginGetTroubleshooting_2
    name: >-
      beginGetTroubleshooting(string, string, TroubleshootingParameters, Object,
      ServiceCallback<TroubleshootingResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Initiate troubleshooting on a specified resource
    syntax:
      content: >-
        function beginGetTroubleshooting(resourceGroupName: string,
        networkWatcherName: string, parameters: TroubleshootingParameters,
        options: Object, callback: ServiceCallback<TroubleshootingResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: networkWatcherName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-network.TroubleshootingParameters
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-network.TroubleshootingResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-network.TroubleshootingResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {TroubleshootingResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {TroubleshootingResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link TroubleshootingResult} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network
  - uid: azure-arm-network.NetworkWatchers.beginGetTroubleshooting_1
    name: >-
      beginGetTroubleshooting(string, string, TroubleshootingParameters,
      ServiceCallback<TroubleshootingResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Initiate troubleshooting on a specified resource
    syntax:
      content: >-
        function beginGetTroubleshooting(resourceGroupName: string,
        networkWatcherName: string, parameters: TroubleshootingParameters,
        callback: ServiceCallback<TroubleshootingResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: networkWatcherName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-network.TroubleshootingParameters
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-network.TroubleshootingResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-network.TroubleshootingResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {TroubleshootingResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {TroubleshootingResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link TroubleshootingResult} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network
  - uid: azure-arm-network.NetworkWatchers.beginGetTroubleshootingResult
    name: >-
      beginGetTroubleshootingResult(string, string,
      QueryTroubleshootingParameters, Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: Get the last completed troubleshooting result on a specified resource
    syntax:
      content: >-
        function beginGetTroubleshootingResult(resourceGroupName: string,
        networkWatcherName: string, parameters: QueryTroubleshootingParameters,
        options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: |
            The name of the network watcher resource.
        - id: parameters
          type:
            - azure-arm-network.QueryTroubleshootingParameters
          description: |
            Parameters that define the resource to query the
            troubleshooting result.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-network.TroubleshootingResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {TroubleshootingResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {TroubleshootingResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link TroubleshootingResult} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network
  - uid: azure-arm-network.NetworkWatchers.beginGetTroubleshootingResult_2
    name: >-
      beginGetTroubleshootingResult(string, string,
      QueryTroubleshootingParameters, Object,
      ServiceCallback<TroubleshootingResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Get the last completed troubleshooting result on a specified resource
    syntax:
      content: >-
        function beginGetTroubleshootingResult(resourceGroupName: string,
        networkWatcherName: string, parameters: QueryTroubleshootingParameters,
        options: Object, callback: ServiceCallback<TroubleshootingResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: networkWatcherName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-network.QueryTroubleshootingParameters
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-network.TroubleshootingResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-network.TroubleshootingResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {TroubleshootingResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {TroubleshootingResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link TroubleshootingResult} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network
  - uid: azure-arm-network.NetworkWatchers.beginGetTroubleshootingResult_1
    name: >-
      beginGetTroubleshootingResult(string, string,
      QueryTroubleshootingParameters, ServiceCallback<TroubleshootingResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Get the last completed troubleshooting result on a specified resource
    syntax:
      content: >-
        function beginGetTroubleshootingResult(resourceGroupName: string,
        networkWatcherName: string, parameters: QueryTroubleshootingParameters,
        callback: ServiceCallback<TroubleshootingResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: networkWatcherName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-network.QueryTroubleshootingParameters
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-network.TroubleshootingResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-network.TroubleshootingResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {TroubleshootingResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {TroubleshootingResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link TroubleshootingResult} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network
  - uid: >-
      azure-arm-network.NetworkWatchers.beginGetTroubleshootingResultWithHttpOperationResponse
    name: >-
      beginGetTroubleshootingResultWithHttpOperationResponse(string, string,
      QueryTroubleshootingParameters, Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: Get the last completed troubleshooting result on a specified resource
    syntax:
      content: >-
        function
        beginGetTroubleshootingResultWithHttpOperationResponse(resourceGroupName:
        string, networkWatcherName: string, parameters:
        QueryTroubleshootingParameters, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: |
            The name of the network watcher resource.
        - id: parameters
          type:
            - azure-arm-network.QueryTroubleshootingParameters
          description: |
            Parameters that define the resource to query the
            troubleshooting result.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-network.TroubleshootingResult>>
        description: A promise is returned
    package: azure-arm-network
  - uid: >-
      azure-arm-network.NetworkWatchers.beginGetTroubleshootingWithHttpOperationResponse
    name: >-
      beginGetTroubleshootingWithHttpOperationResponse(string, string,
      TroubleshootingParameters, Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: Initiate troubleshooting on a specified resource
    syntax:
      content: >-
        function
        beginGetTroubleshootingWithHttpOperationResponse(resourceGroupName:
        string, networkWatcherName: string, parameters:
        TroubleshootingParameters, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: |
            The name of the network watcher resource.
        - id: parameters
          type:
            - azure-arm-network.TroubleshootingParameters
          description: |
            Parameters that define the resource to
            troubleshoot.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-network.TroubleshootingResult>>
        description: A promise is returned
    package: azure-arm-network
  - uid: azure-arm-network.NetworkWatchers.beginGetVMSecurityRules
    name: >-
      beginGetVMSecurityRules(string, string, SecurityGroupViewParameters,
      Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets the configured and effective security group rules on the specified
      VM.
    syntax:
      content: >-
        function beginGetVMSecurityRules(resourceGroupName: string,
        networkWatcherName: string, parameters: SecurityGroupViewParameters,
        options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: |
            The name of the network watcher.
        - id: parameters
          type:
            - azure-arm-network.SecurityGroupViewParameters
          description: |
            Parameters that define the VM to check security
            groups for.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-network.SecurityGroupViewResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {SecurityGroupViewResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {SecurityGroupViewResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link SecurityGroupViewResult} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network
  - uid: azure-arm-network.NetworkWatchers.beginGetVMSecurityRules_2
    name: >-
      beginGetVMSecurityRules(string, string, SecurityGroupViewParameters,
      Object, ServiceCallback<SecurityGroupViewResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets the configured and effective security group rules on the specified
      VM.
    syntax:
      content: >-
        function beginGetVMSecurityRules(resourceGroupName: string,
        networkWatcherName: string, parameters: SecurityGroupViewParameters,
        options: Object, callback: ServiceCallback<SecurityGroupViewResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: networkWatcherName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-network.SecurityGroupViewParameters
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-network.SecurityGroupViewResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-network.SecurityGroupViewResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {SecurityGroupViewResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {SecurityGroupViewResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link SecurityGroupViewResult} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network
  - uid: azure-arm-network.NetworkWatchers.beginGetVMSecurityRules_1
    name: >-
      beginGetVMSecurityRules(string, string, SecurityGroupViewParameters,
      ServiceCallback<SecurityGroupViewResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets the configured and effective security group rules on the specified
      VM.
    syntax:
      content: >-
        function beginGetVMSecurityRules(resourceGroupName: string,
        networkWatcherName: string, parameters: SecurityGroupViewParameters,
        callback: ServiceCallback<SecurityGroupViewResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: networkWatcherName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-network.SecurityGroupViewParameters
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-network.SecurityGroupViewResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-network.SecurityGroupViewResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {SecurityGroupViewResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {SecurityGroupViewResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link SecurityGroupViewResult} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network
  - uid: >-
      azure-arm-network.NetworkWatchers.beginGetVMSecurityRulesWithHttpOperationResponse
    name: >-
      beginGetVMSecurityRulesWithHttpOperationResponse(string, string,
      SecurityGroupViewParameters, Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets the configured and effective security group rules on the specified
      VM.
    syntax:
      content: >-
        function
        beginGetVMSecurityRulesWithHttpOperationResponse(resourceGroupName:
        string, networkWatcherName: string, parameters:
        SecurityGroupViewParameters, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: |
            The name of the network watcher.
        - id: parameters
          type:
            - azure-arm-network.SecurityGroupViewParameters
          description: |
            Parameters that define the VM to check security
            groups for.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-network.SecurityGroupViewResult>>
        description: A promise is returned
    package: azure-arm-network
  - uid: azure-arm-network.NetworkWatchers.beginListAvailableProviders
    name: >-
      beginListAvailableProviders(string, string,
      AvailableProvidersListParameters, Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Lists all available internet service providers for a specified Azure
      region.
    syntax:
      content: >-
        function beginListAvailableProviders(resourceGroupName: string,
        networkWatcherName: string, parameters:
        AvailableProvidersListParameters, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the network watcher resource
            group.
        - id: networkWatcherName
          type:
            - string
          description: |
            The name of the network watcher resource.
        - id: parameters
          type:
            - azure-arm-network.AvailableProvidersListParameters
          description: |
            Parameters that scope the list of available
            providers.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-network.AvailableProvidersList>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {AvailableProvidersList} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {AvailableProvidersList} [result]   - The deserialized result object if an error did not occur.
                               See {@link AvailableProvidersList} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network
  - uid: azure-arm-network.NetworkWatchers.beginListAvailableProviders_2
    name: >-
      beginListAvailableProviders(string, string,
      AvailableProvidersListParameters, Object,
      ServiceCallback<AvailableProvidersList>)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Lists all available internet service providers for a specified Azure
      region.
    syntax:
      content: >-
        function beginListAvailableProviders(resourceGroupName: string,
        networkWatcherName: string, parameters:
        AvailableProvidersListParameters, options: Object, callback:
        ServiceCallback<AvailableProvidersList>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: networkWatcherName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-network.AvailableProvidersListParameters
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-network.AvailableProvidersList>
          description: ''
      return:
        type:
          - Promise<azure-arm-network.AvailableProvidersList>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {AvailableProvidersList} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {AvailableProvidersList} [result]   - The deserialized result object if an error did not occur.
                               See {@link AvailableProvidersList} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network
  - uid: azure-arm-network.NetworkWatchers.beginListAvailableProviders_1
    name: >-
      beginListAvailableProviders(string, string,
      AvailableProvidersListParameters, ServiceCallback<AvailableProvidersList>)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Lists all available internet service providers for a specified Azure
      region.
    syntax:
      content: >-
        function beginListAvailableProviders(resourceGroupName: string,
        networkWatcherName: string, parameters:
        AvailableProvidersListParameters, callback:
        ServiceCallback<AvailableProvidersList>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: networkWatcherName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-network.AvailableProvidersListParameters
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-network.AvailableProvidersList>
          description: ''
      return:
        type:
          - Promise<azure-arm-network.AvailableProvidersList>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {AvailableProvidersList} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {AvailableProvidersList} [result]   - The deserialized result object if an error did not occur.
                               See {@link AvailableProvidersList} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network
  - uid: >-
      azure-arm-network.NetworkWatchers.beginListAvailableProvidersWithHttpOperationResponse
    name: >-
      beginListAvailableProvidersWithHttpOperationResponse(string, string,
      AvailableProvidersListParameters, Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Lists all available internet service providers for a specified Azure
      region.
    syntax:
      content: >-
        function
        beginListAvailableProvidersWithHttpOperationResponse(resourceGroupName:
        string, networkWatcherName: string, parameters:
        AvailableProvidersListParameters, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the network watcher resource
            group.
        - id: networkWatcherName
          type:
            - string
          description: |
            The name of the network watcher resource.
        - id: parameters
          type:
            - azure-arm-network.AvailableProvidersListParameters
          description: |
            Parameters that scope the list of available
            providers.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-network.AvailableProvidersList>>
        description: A promise is returned
    package: azure-arm-network
  - uid: azure-arm-network.NetworkWatchers.beginSetFlowLogConfiguration
    name: 'beginSetFlowLogConfiguration(string, string, FlowLogInformation, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Configures flow log  and traffic analytics (optional) on a specified
      resource.
    syntax:
      content: >-
        function beginSetFlowLogConfiguration(resourceGroupName: string,
        networkWatcherName: string, parameters: FlowLogInformation, options?:
        Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the network watcher resource
            group.
        - id: networkWatcherName
          type:
            - string
          description: |
            The name of the network watcher resource.
        - id: parameters
          type:
            - azure-arm-network.FlowLogInformation
          description: |
            Parameters that define the configuration of flow
            log.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-network.FlowLogInformation>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {FlowLogInformation} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {FlowLogInformation} [result]   - The deserialized result object if an error did not occur.
                               See {@link FlowLogInformation} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network
  - uid: azure-arm-network.NetworkWatchers.beginSetFlowLogConfiguration_2
    name: >-
      beginSetFlowLogConfiguration(string, string, FlowLogInformation, Object,
      ServiceCallback<FlowLogInformation>)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Configures flow log  and traffic analytics (optional) on a specified
      resource.
    syntax:
      content: >-
        function beginSetFlowLogConfiguration(resourceGroupName: string,
        networkWatcherName: string, parameters: FlowLogInformation, options:
        Object, callback: ServiceCallback<FlowLogInformation>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: networkWatcherName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-network.FlowLogInformation
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-network.FlowLogInformation>
          description: ''
      return:
        type:
          - Promise<azure-arm-network.FlowLogInformation>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {FlowLogInformation} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {FlowLogInformation} [result]   - The deserialized result object if an error did not occur.
                               See {@link FlowLogInformation} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network
  - uid: azure-arm-network.NetworkWatchers.beginSetFlowLogConfiguration_1
    name: >-
      beginSetFlowLogConfiguration(string, string, FlowLogInformation,
      ServiceCallback<FlowLogInformation>)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Configures flow log  and traffic analytics (optional) on a specified
      resource.
    syntax:
      content: >-
        function beginSetFlowLogConfiguration(resourceGroupName: string,
        networkWatcherName: string, parameters: FlowLogInformation, callback:
        ServiceCallback<FlowLogInformation>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: networkWatcherName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-network.FlowLogInformation
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-network.FlowLogInformation>
          description: ''
      return:
        type:
          - Promise<azure-arm-network.FlowLogInformation>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {FlowLogInformation} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {FlowLogInformation} [result]   - The deserialized result object if an error did not occur.
                               See {@link FlowLogInformation} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network
  - uid: >-
      azure-arm-network.NetworkWatchers.beginSetFlowLogConfigurationWithHttpOperationResponse
    name: >-
      beginSetFlowLogConfigurationWithHttpOperationResponse(string, string,
      FlowLogInformation, Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Configures flow log  and traffic analytics (optional) on a specified
      resource.
    syntax:
      content: >-
        function
        beginSetFlowLogConfigurationWithHttpOperationResponse(resourceGroupName:
        string, networkWatcherName: string, parameters: FlowLogInformation,
        options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the network watcher resource
            group.
        - id: networkWatcherName
          type:
            - string
          description: |
            The name of the network watcher resource.
        - id: parameters
          type:
            - azure-arm-network.FlowLogInformation
          description: |
            Parameters that define the configuration of flow
            log.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-arm-network.FlowLogInformation>>
        description: A promise is returned
    package: azure-arm-network
  - uid: azure-arm-network.NetworkWatchers.beginVerifyIPFlow
    name: 'beginVerifyIPFlow(string, string, VerificationIPFlowParameters, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Verify IP flow from the specified VM to a location given the currently
      configured NSG rules.
    syntax:
      content: >-
        function beginVerifyIPFlow(resourceGroupName: string,
        networkWatcherName: string, parameters: VerificationIPFlowParameters,
        options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: |
            The name of the network watcher.
        - id: parameters
          type:
            - azure-arm-network.VerificationIPFlowParameters
          description: |
            Parameters that define the IP flow to be
            verified.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-network.VerificationIPFlowResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VerificationIPFlowResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VerificationIPFlowResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link VerificationIPFlowResult} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network
  - uid: azure-arm-network.NetworkWatchers.beginVerifyIPFlow_2
    name: >-
      beginVerifyIPFlow(string, string, VerificationIPFlowParameters, Object,
      ServiceCallback<VerificationIPFlowResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Verify IP flow from the specified VM to a location given the currently
      configured NSG rules.
    syntax:
      content: >-
        function beginVerifyIPFlow(resourceGroupName: string,
        networkWatcherName: string, parameters: VerificationIPFlowParameters,
        options: Object, callback: ServiceCallback<VerificationIPFlowResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: networkWatcherName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-network.VerificationIPFlowParameters
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-network.VerificationIPFlowResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-network.VerificationIPFlowResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VerificationIPFlowResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VerificationIPFlowResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link VerificationIPFlowResult} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network
  - uid: azure-arm-network.NetworkWatchers.beginVerifyIPFlow_1
    name: >-
      beginVerifyIPFlow(string, string, VerificationIPFlowParameters,
      ServiceCallback<VerificationIPFlowResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Verify IP flow from the specified VM to a location given the currently
      configured NSG rules.
    syntax:
      content: >-
        function beginVerifyIPFlow(resourceGroupName: string,
        networkWatcherName: string, parameters: VerificationIPFlowParameters,
        callback: ServiceCallback<VerificationIPFlowResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: networkWatcherName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-network.VerificationIPFlowParameters
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-network.VerificationIPFlowResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-network.VerificationIPFlowResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VerificationIPFlowResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VerificationIPFlowResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link VerificationIPFlowResult} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network
  - uid: >-
      azure-arm-network.NetworkWatchers.beginVerifyIPFlowWithHttpOperationResponse
    name: >-
      beginVerifyIPFlowWithHttpOperationResponse(string, string,
      VerificationIPFlowParameters, Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Verify IP flow from the specified VM to a location given the currently
      configured NSG rules.
    syntax:
      content: >-
        function beginVerifyIPFlowWithHttpOperationResponse(resourceGroupName:
        string, networkWatcherName: string, parameters:
        VerificationIPFlowParameters, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: |
            The name of the network watcher.
        - id: parameters
          type:
            - azure-arm-network.VerificationIPFlowParameters
          description: |
            Parameters that define the IP flow to be
            verified.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-network.VerificationIPFlowResult>>
        description: A promise is returned
    package: azure-arm-network
  - uid: azure-arm-network.NetworkWatchers.checkConnectivity
    name: 'checkConnectivity(string, string, ConnectivityParameters, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Verifies the possibility of establishing a direct TCP connection from a
      virtual machine to a given endpoint including another VM or an arbitrary
      remote server.
    syntax:
      content: >-
        function checkConnectivity(resourceGroupName: string,
        networkWatcherName: string, parameters: ConnectivityParameters,
        options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the network watcher resource
            group.
        - id: networkWatcherName
          type:
            - string
          description: |
            The name of the network watcher resource.
        - id: parameters
          type:
            - azure-arm-network.ConnectivityParameters
          description: |
            Parameters that determine how the connectivity
            check will be performed.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-network.ConnectivityInformation>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {ConnectivityInformation} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {ConnectivityInformation} [result]   - The deserialized result object if an error did not occur.
                               See {@link ConnectivityInformation} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network
  - uid: azure-arm-network.NetworkWatchers.checkConnectivity_2
    name: >-
      checkConnectivity(string, string, ConnectivityParameters, Object,
      ServiceCallback<ConnectivityInformation>)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Verifies the possibility of establishing a direct TCP connection from a
      virtual machine to a given endpoint including another VM or an arbitrary
      remote server.
    syntax:
      content: >-
        function checkConnectivity(resourceGroupName: string,
        networkWatcherName: string, parameters: ConnectivityParameters, options:
        Object, callback: ServiceCallback<ConnectivityInformation>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: networkWatcherName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-network.ConnectivityParameters
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-network.ConnectivityInformation>
          description: ''
      return:
        type:
          - Promise<azure-arm-network.ConnectivityInformation>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {ConnectivityInformation} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {ConnectivityInformation} [result]   - The deserialized result object if an error did not occur.
                               See {@link ConnectivityInformation} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network
  - uid: azure-arm-network.NetworkWatchers.checkConnectivity_1
    name: >-
      checkConnectivity(string, string, ConnectivityParameters,
      ServiceCallback<ConnectivityInformation>)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Verifies the possibility of establishing a direct TCP connection from a
      virtual machine to a given endpoint including another VM or an arbitrary
      remote server.
    syntax:
      content: >-
        function checkConnectivity(resourceGroupName: string,
        networkWatcherName: string, parameters: ConnectivityParameters,
        callback: ServiceCallback<ConnectivityInformation>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: networkWatcherName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-network.ConnectivityParameters
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-network.ConnectivityInformation>
          description: ''
      return:
        type:
          - Promise<azure-arm-network.ConnectivityInformation>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {ConnectivityInformation} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {ConnectivityInformation} [result]   - The deserialized result object if an error did not occur.
                               See {@link ConnectivityInformation} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network
  - uid: >-
      azure-arm-network.NetworkWatchers.checkConnectivityWithHttpOperationResponse
    name: >-
      checkConnectivityWithHttpOperationResponse(string, string,
      ConnectivityParameters, Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Verifies the possibility of establishing a direct TCP connection from a
      virtual machine to a given endpoint including another VM or an arbitrary
      remote server.
    syntax:
      content: >-
        function checkConnectivityWithHttpOperationResponse(resourceGroupName:
        string, networkWatcherName: string, parameters: ConnectivityParameters,
        options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the network watcher resource
            group.
        - id: networkWatcherName
          type:
            - string
          description: |
            The name of the network watcher resource.
        - id: parameters
          type:
            - azure-arm-network.ConnectivityParameters
          description: |
            Parameters that determine how the connectivity
            check will be performed.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-network.ConnectivityInformation>>
        description: A promise is returned
    package: azure-arm-network
  - uid: azure-arm-network.NetworkWatchers.createOrUpdate
    name: 'createOrUpdate(string, string, NetworkWatcher, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates or updates a network watcher in the specified resource group.
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, networkWatcherName:
        string, parameters: NetworkWatcher, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: |
            The name of the network watcher.
        - id: parameters
          type:
            - azure-arm-network.NetworkWatcher
          description: |
            Parameters that define the network watcher
            resource.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-network.NetworkWatcher>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {NetworkWatcher} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {NetworkWatcher} [result]   - The deserialized result object if an error did not occur.
                               See {@link NetworkWatcher} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network
  - uid: azure-arm-network.NetworkWatchers.createOrUpdate_2
    name: >-
      createOrUpdate(string, string, NetworkWatcher, Object,
      ServiceCallback<NetworkWatcher>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates or updates a network watcher in the specified resource group.
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, networkWatcherName:
        string, parameters: NetworkWatcher, options: Object, callback:
        ServiceCallback<NetworkWatcher>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: networkWatcherName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-network.NetworkWatcher
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-network.NetworkWatcher>
          description: ''
      return:
        type:
          - Promise<azure-arm-network.NetworkWatcher>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {NetworkWatcher} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {NetworkWatcher} [result]   - The deserialized result object if an error did not occur.
                               See {@link NetworkWatcher} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network
  - uid: azure-arm-network.NetworkWatchers.createOrUpdate_1
    name: >-
      createOrUpdate(string, string, NetworkWatcher,
      ServiceCallback<NetworkWatcher>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates or updates a network watcher in the specified resource group.
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, networkWatcherName:
        string, parameters: NetworkWatcher, callback:
        ServiceCallback<NetworkWatcher>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: networkWatcherName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-network.NetworkWatcher
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-network.NetworkWatcher>
          description: ''
      return:
        type:
          - Promise<azure-arm-network.NetworkWatcher>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {NetworkWatcher} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {NetworkWatcher} [result]   - The deserialized result object if an error did not occur.
                               See {@link NetworkWatcher} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network
  - uid: azure-arm-network.NetworkWatchers.createOrUpdateWithHttpOperationResponse
    name: >-
      createOrUpdateWithHttpOperationResponse(string, string, NetworkWatcher,
      Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates or updates a network watcher in the specified resource group.
    syntax:
      content: >-
        function createOrUpdateWithHttpOperationResponse(resourceGroupName:
        string, networkWatcherName: string, parameters: NetworkWatcher,
        options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: |
            The name of the network watcher.
        - id: parameters
          type:
            - azure-arm-network.NetworkWatcher
          description: |
            Parameters that define the network watcher
            resource.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-arm-network.NetworkWatcher>>
        description: A promise is returned
    package: azure-arm-network
  - uid: azure-arm-network.NetworkWatchers.deleteMethod
    name: 'deleteMethod(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes the specified network watcher resource.
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, networkWatcherName:
        string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: |
            The name of the network watcher.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network
  - uid: azure-arm-network.NetworkWatchers.deleteMethod_2
    name: 'deleteMethod(string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes the specified network watcher resource.
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, networkWatcherName:
        string, options: Object, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: networkWatcherName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network
  - uid: azure-arm-network.NetworkWatchers.deleteMethod_1
    name: 'deleteMethod(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes the specified network watcher resource.
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, networkWatcherName:
        string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: networkWatcherName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network
  - uid: azure-arm-network.NetworkWatchers.deleteMethodWithHttpOperationResponse
    name: 'deleteMethodWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes the specified network watcher resource.
    syntax:
      content: >-
        function deleteMethodWithHttpOperationResponse(resourceGroupName:
        string, networkWatcherName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: |
            The name of the network watcher.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
        description: A promise is returned
    package: azure-arm-network
  - uid: azure-arm-network.NetworkWatchers.get
    name: 'get(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the specified network watcher by resource group.
    syntax:
      content: >-
        function get(resourceGroupName: string, networkWatcherName: string,
        options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: |
            The name of the network watcher.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-network.NetworkWatcher>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {NetworkWatcher} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {NetworkWatcher} [result]   - The deserialized result object if an error did not occur.
                               See {@link NetworkWatcher} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network
  - uid: azure-arm-network.NetworkWatchers.get_2
    name: 'get(string, string, Object, ServiceCallback<NetworkWatcher>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the specified network watcher by resource group.
    syntax:
      content: >-
        function get(resourceGroupName: string, networkWatcherName: string,
        options: Object, callback: ServiceCallback<NetworkWatcher>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: networkWatcherName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-network.NetworkWatcher>
          description: ''
      return:
        type:
          - Promise<azure-arm-network.NetworkWatcher>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {NetworkWatcher} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {NetworkWatcher} [result]   - The deserialized result object if an error did not occur.
                               See {@link NetworkWatcher} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network
  - uid: azure-arm-network.NetworkWatchers.get_1
    name: 'get(string, string, ServiceCallback<NetworkWatcher>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the specified network watcher by resource group.
    syntax:
      content: >-
        function get(resourceGroupName: string, networkWatcherName: string,
        callback: ServiceCallback<NetworkWatcher>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: networkWatcherName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-network.NetworkWatcher>
          description: ''
      return:
        type:
          - Promise<azure-arm-network.NetworkWatcher>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {NetworkWatcher} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {NetworkWatcher} [result]   - The deserialized result object if an error did not occur.
                               See {@link NetworkWatcher} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network
  - uid: azure-arm-network.NetworkWatchers.getAzureReachabilityReport
    name: >-
      getAzureReachabilityReport(string, string,
      AzureReachabilityReportParameters, Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Gets the relative latency score for internet service providers from a
      specified location to Azure regions.
    syntax:
      content: >-
        function getAzureReachabilityReport(resourceGroupName: string,
        networkWatcherName: string, parameters:
        AzureReachabilityReportParameters, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the network watcher resource
            group.
        - id: networkWatcherName
          type:
            - string
          description: |
            The name of the network watcher resource.
        - id: parameters
          type:
            - azure-arm-network.AzureReachabilityReportParameters
          description: |
            Parameters that determine Azure reachability
            report configuration.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-network.AzureReachabilityReport>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {AzureReachabilityReport} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {AzureReachabilityReport} [result]   - The deserialized result object if an error did not occur.
                               See {@link AzureReachabilityReport} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network
  - uid: azure-arm-network.NetworkWatchers.getAzureReachabilityReport_2
    name: >-
      getAzureReachabilityReport(string, string,
      AzureReachabilityReportParameters, Object,
      ServiceCallback<AzureReachabilityReport>)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Gets the relative latency score for internet service providers from a
      specified location to Azure regions.
    syntax:
      content: >-
        function getAzureReachabilityReport(resourceGroupName: string,
        networkWatcherName: string, parameters:
        AzureReachabilityReportParameters, options: Object, callback:
        ServiceCallback<AzureReachabilityReport>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: networkWatcherName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-network.AzureReachabilityReportParameters
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-network.AzureReachabilityReport>
          description: ''
      return:
        type:
          - Promise<azure-arm-network.AzureReachabilityReport>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {AzureReachabilityReport} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {AzureReachabilityReport} [result]   - The deserialized result object if an error did not occur.
                               See {@link AzureReachabilityReport} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network
  - uid: azure-arm-network.NetworkWatchers.getAzureReachabilityReport_1
    name: >-
      getAzureReachabilityReport(string, string,
      AzureReachabilityReportParameters,
      ServiceCallback<AzureReachabilityReport>)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Gets the relative latency score for internet service providers from a
      specified location to Azure regions.
    syntax:
      content: >-
        function getAzureReachabilityReport(resourceGroupName: string,
        networkWatcherName: string, parameters:
        AzureReachabilityReportParameters, callback:
        ServiceCallback<AzureReachabilityReport>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: networkWatcherName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-network.AzureReachabilityReportParameters
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-network.AzureReachabilityReport>
          description: ''
      return:
        type:
          - Promise<azure-arm-network.AzureReachabilityReport>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {AzureReachabilityReport} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {AzureReachabilityReport} [result]   - The deserialized result object if an error did not occur.
                               See {@link AzureReachabilityReport} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network
  - uid: >-
      azure-arm-network.NetworkWatchers.getAzureReachabilityReportWithHttpOperationResponse
    name: >-
      getAzureReachabilityReportWithHttpOperationResponse(string, string,
      AzureReachabilityReportParameters, Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Gets the relative latency score for internet service providers from a
      specified location to Azure regions.
    syntax:
      content: >-
        function
        getAzureReachabilityReportWithHttpOperationResponse(resourceGroupName:
        string, networkWatcherName: string, parameters:
        AzureReachabilityReportParameters, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the network watcher resource
            group.
        - id: networkWatcherName
          type:
            - string
          description: |
            The name of the network watcher resource.
        - id: parameters
          type:
            - azure-arm-network.AzureReachabilityReportParameters
          description: |
            Parameters that determine Azure reachability
            report configuration.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-network.AzureReachabilityReport>>
        description: A promise is returned
    package: azure-arm-network
  - uid: azure-arm-network.NetworkWatchers.getFlowLogStatus
    name: 'getFlowLogStatus(string, string, FlowLogStatusParameters, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Queries status of flow log and traffic analytics (optional) on a specified
      resource.
    syntax:
      content: >-
        function getFlowLogStatus(resourceGroupName: string, networkWatcherName:
        string, parameters: FlowLogStatusParameters, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the network watcher resource
            group.
        - id: networkWatcherName
          type:
            - string
          description: |
            The name of the network watcher resource.
        - id: parameters
          type:
            - azure-arm-network.FlowLogStatusParameters
          description: |
            Parameters that define a resource to query flow
            log and traffic analytics (optional)  status.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-network.FlowLogInformation>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {FlowLogInformation} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {FlowLogInformation} [result]   - The deserialized result object if an error did not occur.
                               See {@link FlowLogInformation} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network
  - uid: azure-arm-network.NetworkWatchers.getFlowLogStatus_2
    name: >-
      getFlowLogStatus(string, string, FlowLogStatusParameters, Object,
      ServiceCallback<FlowLogInformation>)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Queries status of flow log and traffic analytics (optional) on a specified
      resource.
    syntax:
      content: >-
        function getFlowLogStatus(resourceGroupName: string, networkWatcherName:
        string, parameters: FlowLogStatusParameters, options: Object, callback:
        ServiceCallback<FlowLogInformation>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: networkWatcherName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-network.FlowLogStatusParameters
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-network.FlowLogInformation>
          description: ''
      return:
        type:
          - Promise<azure-arm-network.FlowLogInformation>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {FlowLogInformation} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {FlowLogInformation} [result]   - The deserialized result object if an error did not occur.
                               See {@link FlowLogInformation} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network
  - uid: azure-arm-network.NetworkWatchers.getFlowLogStatus_1
    name: >-
      getFlowLogStatus(string, string, FlowLogStatusParameters,
      ServiceCallback<FlowLogInformation>)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Queries status of flow log and traffic analytics (optional) on a specified
      resource.
    syntax:
      content: >-
        function getFlowLogStatus(resourceGroupName: string, networkWatcherName:
        string, parameters: FlowLogStatusParameters, callback:
        ServiceCallback<FlowLogInformation>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: networkWatcherName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-network.FlowLogStatusParameters
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-network.FlowLogInformation>
          description: ''
      return:
        type:
          - Promise<azure-arm-network.FlowLogInformation>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {FlowLogInformation} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {FlowLogInformation} [result]   - The deserialized result object if an error did not occur.
                               See {@link FlowLogInformation} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network
  - uid: >-
      azure-arm-network.NetworkWatchers.getFlowLogStatusWithHttpOperationResponse
    name: >-
      getFlowLogStatusWithHttpOperationResponse(string, string,
      FlowLogStatusParameters, Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Queries status of flow log and traffic analytics (optional) on a specified
      resource.
    syntax:
      content: >-
        function getFlowLogStatusWithHttpOperationResponse(resourceGroupName:
        string, networkWatcherName: string, parameters: FlowLogStatusParameters,
        options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the network watcher resource
            group.
        - id: networkWatcherName
          type:
            - string
          description: |
            The name of the network watcher resource.
        - id: parameters
          type:
            - azure-arm-network.FlowLogStatusParameters
          description: |
            Parameters that define a resource to query flow
            log and traffic analytics (optional)  status.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-arm-network.FlowLogInformation>>
        description: A promise is returned
    package: azure-arm-network
  - uid: azure-arm-network.NetworkWatchers.getNetworkConfigurationDiagnostic
    name: >-
      getNetworkConfigurationDiagnostic(string, string,
      NetworkConfigurationDiagnosticParameters, Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: Get network configuration diagnostic.
    syntax:
      content: >-
        function getNetworkConfigurationDiagnostic(resourceGroupName: string,
        networkWatcherName: string, parameters:
        NetworkConfigurationDiagnosticParameters, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: |
            The name of the network watcher.
        - id: parameters
          type:
            - azure-arm-network.NetworkConfigurationDiagnosticParameters
          description: |
            Parameters to get network configuration
            diagnostic.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-network.NetworkConfigurationDiagnosticResponse>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {NetworkConfigurationDiagnosticResponse} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {NetworkConfigurationDiagnosticResponse} [result]   - The deserialized result object if an error did not occur.
                               See {@link NetworkConfigurationDiagnosticResponse} for
                               more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network
  - uid: azure-arm-network.NetworkWatchers.getNetworkConfigurationDiagnostic_2
    name: >-
      getNetworkConfigurationDiagnostic(string, string,
      NetworkConfigurationDiagnosticParameters, Object,
      ServiceCallback<NetworkConfigurationDiagnosticResponse>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Get network configuration diagnostic.
    syntax:
      content: >-
        function getNetworkConfigurationDiagnostic(resourceGroupName: string,
        networkWatcherName: string, parameters:
        NetworkConfigurationDiagnosticParameters, options: Object, callback:
        ServiceCallback<NetworkConfigurationDiagnosticResponse>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: networkWatcherName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-network.NetworkConfigurationDiagnosticParameters
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<azure-arm-network.NetworkConfigurationDiagnosticResponse>
          description: ''
      return:
        type:
          - Promise<azure-arm-network.NetworkConfigurationDiagnosticResponse>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {NetworkConfigurationDiagnosticResponse} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {NetworkConfigurationDiagnosticResponse} [result]   - The deserialized result object if an error did not occur.
                               See {@link NetworkConfigurationDiagnosticResponse} for
                               more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network
  - uid: azure-arm-network.NetworkWatchers.getNetworkConfigurationDiagnostic_1
    name: >-
      getNetworkConfigurationDiagnostic(string, string,
      NetworkConfigurationDiagnosticParameters,
      ServiceCallback<NetworkConfigurationDiagnosticResponse>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Get network configuration diagnostic.
    syntax:
      content: >-
        function getNetworkConfigurationDiagnostic(resourceGroupName: string,
        networkWatcherName: string, parameters:
        NetworkConfigurationDiagnosticParameters, callback:
        ServiceCallback<NetworkConfigurationDiagnosticResponse>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: networkWatcherName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-network.NetworkConfigurationDiagnosticParameters
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<azure-arm-network.NetworkConfigurationDiagnosticResponse>
          description: ''
      return:
        type:
          - Promise<azure-arm-network.NetworkConfigurationDiagnosticResponse>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {NetworkConfigurationDiagnosticResponse} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {NetworkConfigurationDiagnosticResponse} [result]   - The deserialized result object if an error did not occur.
                               See {@link NetworkConfigurationDiagnosticResponse} for
                               more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network
  - uid: >-
      azure-arm-network.NetworkWatchers.getNetworkConfigurationDiagnosticWithHttpOperationResponse
    name: >-
      getNetworkConfigurationDiagnosticWithHttpOperationResponse(string, string,
      NetworkConfigurationDiagnosticParameters, Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: Get network configuration diagnostic.
    syntax:
      content: >-
        function
        getNetworkConfigurationDiagnosticWithHttpOperationResponse(resourceGroupName:
        string, networkWatcherName: string, parameters:
        NetworkConfigurationDiagnosticParameters, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: |
            The name of the network watcher.
        - id: parameters
          type:
            - azure-arm-network.NetworkConfigurationDiagnosticParameters
          description: |
            Parameters to get network configuration
            diagnostic.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-network.NetworkConfigurationDiagnosticResponse>>
        description: A promise is returned
    package: azure-arm-network
  - uid: azure-arm-network.NetworkWatchers.getNextHop
    name: 'getNextHop(string, string, NextHopParameters, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the next hop from the specified VM.
    syntax:
      content: >-
        function getNextHop(resourceGroupName: string, networkWatcherName:
        string, parameters: NextHopParameters, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: |
            The name of the network watcher.
        - id: parameters
          type:
            - azure-arm-network.NextHopParameters
          description: |
            Parameters that define the source and destination
            endpoint.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-network.NextHopResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {NextHopResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {NextHopResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link NextHopResult} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network
  - uid: azure-arm-network.NetworkWatchers.getNextHop_2
    name: >-
      getNextHop(string, string, NextHopParameters, Object,
      ServiceCallback<NextHopResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the next hop from the specified VM.
    syntax:
      content: >-
        function getNextHop(resourceGroupName: string, networkWatcherName:
        string, parameters: NextHopParameters, options: Object, callback:
        ServiceCallback<NextHopResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: networkWatcherName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-network.NextHopParameters
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-network.NextHopResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-network.NextHopResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {NextHopResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {NextHopResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link NextHopResult} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network
  - uid: azure-arm-network.NetworkWatchers.getNextHop_1
    name: >-
      getNextHop(string, string, NextHopParameters,
      ServiceCallback<NextHopResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the next hop from the specified VM.
    syntax:
      content: >-
        function getNextHop(resourceGroupName: string, networkWatcherName:
        string, parameters: NextHopParameters, callback:
        ServiceCallback<NextHopResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: networkWatcherName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-network.NextHopParameters
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-network.NextHopResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-network.NextHopResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {NextHopResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {NextHopResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link NextHopResult} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network
  - uid: azure-arm-network.NetworkWatchers.getNextHopWithHttpOperationResponse
    name: >-
      getNextHopWithHttpOperationResponse(string, string, NextHopParameters,
      Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the next hop from the specified VM.
    syntax:
      content: >-
        function getNextHopWithHttpOperationResponse(resourceGroupName: string,
        networkWatcherName: string, parameters: NextHopParameters, options?:
        Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: |
            The name of the network watcher.
        - id: parameters
          type:
            - azure-arm-network.NextHopParameters
          description: |
            Parameters that define the source and destination
            endpoint.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-arm-network.NextHopResult>>
        description: A promise is returned
    package: azure-arm-network
  - uid: azure-arm-network.NetworkWatchers.getTopology
    name: 'getTopology(string, string, TopologyParameters, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the current network topology by resource group.
    syntax:
      content: >-
        function getTopology(resourceGroupName: string, networkWatcherName:
        string, parameters: TopologyParameters, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: |
            The name of the network watcher.
        - id: parameters
          type:
            - azure-arm-network.TopologyParameters
          description: |
            Parameters that define the representation of
            topology.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-network.Topology>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {Topology} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {Topology} [result]   - The deserialized result object if an error did not occur.
                               See {@link Topology} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network
  - uid: azure-arm-network.NetworkWatchers.getTopology_2
    name: >-
      getTopology(string, string, TopologyParameters, Object,
      ServiceCallback<Topology>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the current network topology by resource group.
    syntax:
      content: >-
        function getTopology(resourceGroupName: string, networkWatcherName:
        string, parameters: TopologyParameters, options: Object, callback:
        ServiceCallback<Topology>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: networkWatcherName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-network.TopologyParameters
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-network.Topology>
          description: ''
      return:
        type:
          - Promise<azure-arm-network.Topology>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {Topology} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {Topology} [result]   - The deserialized result object if an error did not occur.
                               See {@link Topology} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network
  - uid: azure-arm-network.NetworkWatchers.getTopology_1
    name: 'getTopology(string, string, TopologyParameters, ServiceCallback<Topology>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the current network topology by resource group.
    syntax:
      content: >-
        function getTopology(resourceGroupName: string, networkWatcherName:
        string, parameters: TopologyParameters, callback:
        ServiceCallback<Topology>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: networkWatcherName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-network.TopologyParameters
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-network.Topology>
          description: ''
      return:
        type:
          - Promise<azure-arm-network.Topology>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {Topology} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {Topology} [result]   - The deserialized result object if an error did not occur.
                               See {@link Topology} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network
  - uid: azure-arm-network.NetworkWatchers.getTopologyWithHttpOperationResponse
    name: >-
      getTopologyWithHttpOperationResponse(string, string, TopologyParameters,
      Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the current network topology by resource group.
    syntax:
      content: >-
        function getTopologyWithHttpOperationResponse(resourceGroupName: string,
        networkWatcherName: string, parameters: TopologyParameters, options?:
        Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: |
            The name of the network watcher.
        - id: parameters
          type:
            - azure-arm-network.TopologyParameters
          description: |
            Parameters that define the representation of
            topology.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-arm-network.Topology>>
        description: A promise is returned
    package: azure-arm-network
  - uid: azure-arm-network.NetworkWatchers.getTroubleshooting
    name: 'getTroubleshooting(string, string, TroubleshootingParameters, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Initiate troubleshooting on a specified resource
    syntax:
      content: >-
        function getTroubleshooting(resourceGroupName: string,
        networkWatcherName: string, parameters: TroubleshootingParameters,
        options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: |
            The name of the network watcher resource.
        - id: parameters
          type:
            - azure-arm-network.TroubleshootingParameters
          description: |
            Parameters that define the resource to
            troubleshoot.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-network.TroubleshootingResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {TroubleshootingResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {TroubleshootingResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link TroubleshootingResult} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network
  - uid: azure-arm-network.NetworkWatchers.getTroubleshooting_2
    name: >-
      getTroubleshooting(string, string, TroubleshootingParameters, Object,
      ServiceCallback<TroubleshootingResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Initiate troubleshooting on a specified resource
    syntax:
      content: >-
        function getTroubleshooting(resourceGroupName: string,
        networkWatcherName: string, parameters: TroubleshootingParameters,
        options: Object, callback: ServiceCallback<TroubleshootingResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: networkWatcherName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-network.TroubleshootingParameters
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-network.TroubleshootingResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-network.TroubleshootingResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {TroubleshootingResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {TroubleshootingResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link TroubleshootingResult} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network
  - uid: azure-arm-network.NetworkWatchers.getTroubleshooting_1
    name: >-
      getTroubleshooting(string, string, TroubleshootingParameters,
      ServiceCallback<TroubleshootingResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Initiate troubleshooting on a specified resource
    syntax:
      content: >-
        function getTroubleshooting(resourceGroupName: string,
        networkWatcherName: string, parameters: TroubleshootingParameters,
        callback: ServiceCallback<TroubleshootingResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: networkWatcherName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-network.TroubleshootingParameters
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-network.TroubleshootingResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-network.TroubleshootingResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {TroubleshootingResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {TroubleshootingResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link TroubleshootingResult} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network
  - uid: azure-arm-network.NetworkWatchers.getTroubleshootingResult
    name: >-
      getTroubleshootingResult(string, string, QueryTroubleshootingParameters,
      Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: Get the last completed troubleshooting result on a specified resource
    syntax:
      content: >-
        function getTroubleshootingResult(resourceGroupName: string,
        networkWatcherName: string, parameters: QueryTroubleshootingParameters,
        options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: |
            The name of the network watcher resource.
        - id: parameters
          type:
            - azure-arm-network.QueryTroubleshootingParameters
          description: |
            Parameters that define the resource to query the
            troubleshooting result.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-network.TroubleshootingResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {TroubleshootingResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {TroubleshootingResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link TroubleshootingResult} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network
  - uid: azure-arm-network.NetworkWatchers.getTroubleshootingResult_2
    name: >-
      getTroubleshootingResult(string, string, QueryTroubleshootingParameters,
      Object, ServiceCallback<TroubleshootingResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Get the last completed troubleshooting result on a specified resource
    syntax:
      content: >-
        function getTroubleshootingResult(resourceGroupName: string,
        networkWatcherName: string, parameters: QueryTroubleshootingParameters,
        options: Object, callback: ServiceCallback<TroubleshootingResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: networkWatcherName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-network.QueryTroubleshootingParameters
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-network.TroubleshootingResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-network.TroubleshootingResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {TroubleshootingResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {TroubleshootingResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link TroubleshootingResult} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network
  - uid: azure-arm-network.NetworkWatchers.getTroubleshootingResult_1
    name: >-
      getTroubleshootingResult(string, string, QueryTroubleshootingParameters,
      ServiceCallback<TroubleshootingResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Get the last completed troubleshooting result on a specified resource
    syntax:
      content: >-
        function getTroubleshootingResult(resourceGroupName: string,
        networkWatcherName: string, parameters: QueryTroubleshootingParameters,
        callback: ServiceCallback<TroubleshootingResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: networkWatcherName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-network.QueryTroubleshootingParameters
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-network.TroubleshootingResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-network.TroubleshootingResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {TroubleshootingResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {TroubleshootingResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link TroubleshootingResult} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network
  - uid: >-
      azure-arm-network.NetworkWatchers.getTroubleshootingResultWithHttpOperationResponse
    name: >-
      getTroubleshootingResultWithHttpOperationResponse(string, string,
      QueryTroubleshootingParameters, Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: Get the last completed troubleshooting result on a specified resource
    syntax:
      content: >-
        function
        getTroubleshootingResultWithHttpOperationResponse(resourceGroupName:
        string, networkWatcherName: string, parameters:
        QueryTroubleshootingParameters, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: |
            The name of the network watcher resource.
        - id: parameters
          type:
            - azure-arm-network.QueryTroubleshootingParameters
          description: |
            Parameters that define the resource to query the
            troubleshooting result.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-network.TroubleshootingResult>>
        description: A promise is returned
    package: azure-arm-network
  - uid: >-
      azure-arm-network.NetworkWatchers.getTroubleshootingWithHttpOperationResponse
    name: >-
      getTroubleshootingWithHttpOperationResponse(string, string,
      TroubleshootingParameters, Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: Initiate troubleshooting on a specified resource
    syntax:
      content: >-
        function getTroubleshootingWithHttpOperationResponse(resourceGroupName:
        string, networkWatcherName: string, parameters:
        TroubleshootingParameters, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: |
            The name of the network watcher resource.
        - id: parameters
          type:
            - azure-arm-network.TroubleshootingParameters
          description: |
            Parameters that define the resource to
            troubleshoot.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-network.TroubleshootingResult>>
        description: A promise is returned
    package: azure-arm-network
  - uid: azure-arm-network.NetworkWatchers.getVMSecurityRules
    name: 'getVMSecurityRules(string, string, SecurityGroupViewParameters, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets the configured and effective security group rules on the specified
      VM.
    syntax:
      content: >-
        function getVMSecurityRules(resourceGroupName: string,
        networkWatcherName: string, parameters: SecurityGroupViewParameters,
        options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: |
            The name of the network watcher.
        - id: parameters
          type:
            - azure-arm-network.SecurityGroupViewParameters
          description: |
            Parameters that define the VM to check security
            groups for.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-network.SecurityGroupViewResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {SecurityGroupViewResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {SecurityGroupViewResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link SecurityGroupViewResult} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network
  - uid: azure-arm-network.NetworkWatchers.getVMSecurityRules_2
    name: >-
      getVMSecurityRules(string, string, SecurityGroupViewParameters, Object,
      ServiceCallback<SecurityGroupViewResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets the configured and effective security group rules on the specified
      VM.
    syntax:
      content: >-
        function getVMSecurityRules(resourceGroupName: string,
        networkWatcherName: string, parameters: SecurityGroupViewParameters,
        options: Object, callback: ServiceCallback<SecurityGroupViewResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: networkWatcherName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-network.SecurityGroupViewParameters
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-network.SecurityGroupViewResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-network.SecurityGroupViewResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {SecurityGroupViewResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {SecurityGroupViewResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link SecurityGroupViewResult} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network
  - uid: azure-arm-network.NetworkWatchers.getVMSecurityRules_1
    name: >-
      getVMSecurityRules(string, string, SecurityGroupViewParameters,
      ServiceCallback<SecurityGroupViewResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets the configured and effective security group rules on the specified
      VM.
    syntax:
      content: >-
        function getVMSecurityRules(resourceGroupName: string,
        networkWatcherName: string, parameters: SecurityGroupViewParameters,
        callback: ServiceCallback<SecurityGroupViewResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: networkWatcherName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-network.SecurityGroupViewParameters
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-network.SecurityGroupViewResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-network.SecurityGroupViewResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {SecurityGroupViewResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {SecurityGroupViewResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link SecurityGroupViewResult} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network
  - uid: >-
      azure-arm-network.NetworkWatchers.getVMSecurityRulesWithHttpOperationResponse
    name: >-
      getVMSecurityRulesWithHttpOperationResponse(string, string,
      SecurityGroupViewParameters, Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets the configured and effective security group rules on the specified
      VM.
    syntax:
      content: >-
        function getVMSecurityRulesWithHttpOperationResponse(resourceGroupName:
        string, networkWatcherName: string, parameters:
        SecurityGroupViewParameters, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: |
            The name of the network watcher.
        - id: parameters
          type:
            - azure-arm-network.SecurityGroupViewParameters
          description: |
            Parameters that define the VM to check security
            groups for.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-network.SecurityGroupViewResult>>
        description: A promise is returned
    package: azure-arm-network
  - uid: azure-arm-network.NetworkWatchers.getWithHttpOperationResponse
    name: 'getWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the specified network watcher by resource group.
    syntax:
      content: >-
        function getWithHttpOperationResponse(resourceGroupName: string,
        networkWatcherName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: |
            The name of the network watcher.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-arm-network.NetworkWatcher>>
        description: A promise is returned
    package: azure-arm-network
  - uid: azure-arm-network.NetworkWatchers.list
    name: 'list(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets all network watchers by resource group.
    syntax:
      content: 'function list(resourceGroupName: string, options?: Object)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-network.NetworkWatcherListResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {NetworkWatcherListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {NetworkWatcherListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link NetworkWatcherListResult} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network
  - uid: azure-arm-network.NetworkWatchers.list_2
    name: 'list(string, Object, ServiceCallback<NetworkWatcherListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets all network watchers by resource group.
    syntax:
      content: >-
        function list(resourceGroupName: string, options: Object, callback:
        ServiceCallback<NetworkWatcherListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-network.NetworkWatcherListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-network.NetworkWatcherListResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {NetworkWatcherListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {NetworkWatcherListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link NetworkWatcherListResult} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network
  - uid: azure-arm-network.NetworkWatchers.list_1
    name: 'list(string, ServiceCallback<NetworkWatcherListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets all network watchers by resource group.
    syntax:
      content: >-
        function list(resourceGroupName: string, callback:
        ServiceCallback<NetworkWatcherListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-network.NetworkWatcherListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-network.NetworkWatcherListResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {NetworkWatcherListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {NetworkWatcherListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link NetworkWatcherListResult} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network
  - uid: azure-arm-network.NetworkWatchers.listAll
    name: listAll(Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets all network watchers by subscription.
    syntax:
      content: 'function listAll(options?: Object)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-network.NetworkWatcherListResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {NetworkWatcherListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {NetworkWatcherListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link NetworkWatcherListResult} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network
  - uid: azure-arm-network.NetworkWatchers.listAll_2
    name: 'listAll(Object, ServiceCallback<NetworkWatcherListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets all network watchers by subscription.
    syntax:
      content: >-
        function listAll(options: Object, callback:
        ServiceCallback<NetworkWatcherListResult>)
      parameters:
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-network.NetworkWatcherListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-network.NetworkWatcherListResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {NetworkWatcherListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {NetworkWatcherListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link NetworkWatcherListResult} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network
  - uid: azure-arm-network.NetworkWatchers.listAll_1
    name: listAll(ServiceCallback<NetworkWatcherListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets all network watchers by subscription.
    syntax:
      content: 'function listAll(callback: ServiceCallback<NetworkWatcherListResult>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<azure-arm-network.NetworkWatcherListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-network.NetworkWatcherListResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {NetworkWatcherListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {NetworkWatcherListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link NetworkWatcherListResult} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network
  - uid: azure-arm-network.NetworkWatchers.listAllWithHttpOperationResponse
    name: listAllWithHttpOperationResponse(Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets all network watchers by subscription.
    syntax:
      content: 'function listAllWithHttpOperationResponse(options?: Object)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-network.NetworkWatcherListResult>>
        description: A promise is returned
    package: azure-arm-network
  - uid: azure-arm-network.NetworkWatchers.listAvailableProviders
    name: >-
      listAvailableProviders(string, string, AvailableProvidersListParameters,
      Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Lists all available internet service providers for a specified Azure
      region.
    syntax:
      content: >-
        function listAvailableProviders(resourceGroupName: string,
        networkWatcherName: string, parameters:
        AvailableProvidersListParameters, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the network watcher resource
            group.
        - id: networkWatcherName
          type:
            - string
          description: |
            The name of the network watcher resource.
        - id: parameters
          type:
            - azure-arm-network.AvailableProvidersListParameters
          description: |
            Parameters that scope the list of available
            providers.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-network.AvailableProvidersList>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {AvailableProvidersList} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {AvailableProvidersList} [result]   - The deserialized result object if an error did not occur.
                               See {@link AvailableProvidersList} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network
  - uid: azure-arm-network.NetworkWatchers.listAvailableProviders_2
    name: >-
      listAvailableProviders(string, string, AvailableProvidersListParameters,
      Object, ServiceCallback<AvailableProvidersList>)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Lists all available internet service providers for a specified Azure
      region.
    syntax:
      content: >-
        function listAvailableProviders(resourceGroupName: string,
        networkWatcherName: string, parameters:
        AvailableProvidersListParameters, options: Object, callback:
        ServiceCallback<AvailableProvidersList>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: networkWatcherName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-network.AvailableProvidersListParameters
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-network.AvailableProvidersList>
          description: ''
      return:
        type:
          - Promise<azure-arm-network.AvailableProvidersList>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {AvailableProvidersList} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {AvailableProvidersList} [result]   - The deserialized result object if an error did not occur.
                               See {@link AvailableProvidersList} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network
  - uid: azure-arm-network.NetworkWatchers.listAvailableProviders_1
    name: >-
      listAvailableProviders(string, string, AvailableProvidersListParameters,
      ServiceCallback<AvailableProvidersList>)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Lists all available internet service providers for a specified Azure
      region.
    syntax:
      content: >-
        function listAvailableProviders(resourceGroupName: string,
        networkWatcherName: string, parameters:
        AvailableProvidersListParameters, callback:
        ServiceCallback<AvailableProvidersList>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: networkWatcherName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-network.AvailableProvidersListParameters
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-network.AvailableProvidersList>
          description: ''
      return:
        type:
          - Promise<azure-arm-network.AvailableProvidersList>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {AvailableProvidersList} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {AvailableProvidersList} [result]   - The deserialized result object if an error did not occur.
                               See {@link AvailableProvidersList} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network
  - uid: >-
      azure-arm-network.NetworkWatchers.listAvailableProvidersWithHttpOperationResponse
    name: >-
      listAvailableProvidersWithHttpOperationResponse(string, string,
      AvailableProvidersListParameters, Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Lists all available internet service providers for a specified Azure
      region.
    syntax:
      content: >-
        function
        listAvailableProvidersWithHttpOperationResponse(resourceGroupName:
        string, networkWatcherName: string, parameters:
        AvailableProvidersListParameters, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the network watcher resource
            group.
        - id: networkWatcherName
          type:
            - string
          description: |
            The name of the network watcher resource.
        - id: parameters
          type:
            - azure-arm-network.AvailableProvidersListParameters
          description: |
            Parameters that scope the list of available
            providers.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-network.AvailableProvidersList>>
        description: A promise is returned
    package: azure-arm-network
  - uid: azure-arm-network.NetworkWatchers.listWithHttpOperationResponse
    name: 'listWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets all network watchers by resource group.
    syntax:
      content: >-
        function listWithHttpOperationResponse(resourceGroupName: string,
        options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-network.NetworkWatcherListResult>>
        description: A promise is returned
    package: azure-arm-network
  - uid: azure-arm-network.NetworkWatchers.setFlowLogConfiguration
    name: 'setFlowLogConfiguration(string, string, FlowLogInformation, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Configures flow log  and traffic analytics (optional) on a specified
      resource.
    syntax:
      content: >-
        function setFlowLogConfiguration(resourceGroupName: string,
        networkWatcherName: string, parameters: FlowLogInformation, options?:
        Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the network watcher resource
            group.
        - id: networkWatcherName
          type:
            - string
          description: |
            The name of the network watcher resource.
        - id: parameters
          type:
            - azure-arm-network.FlowLogInformation
          description: |
            Parameters that define the configuration of flow
            log.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-network.FlowLogInformation>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {FlowLogInformation} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {FlowLogInformation} [result]   - The deserialized result object if an error did not occur.
                               See {@link FlowLogInformation} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network
  - uid: azure-arm-network.NetworkWatchers.setFlowLogConfiguration_2
    name: >-
      setFlowLogConfiguration(string, string, FlowLogInformation, Object,
      ServiceCallback<FlowLogInformation>)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Configures flow log  and traffic analytics (optional) on a specified
      resource.
    syntax:
      content: >-
        function setFlowLogConfiguration(resourceGroupName: string,
        networkWatcherName: string, parameters: FlowLogInformation, options:
        Object, callback: ServiceCallback<FlowLogInformation>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: networkWatcherName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-network.FlowLogInformation
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-network.FlowLogInformation>
          description: ''
      return:
        type:
          - Promise<azure-arm-network.FlowLogInformation>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {FlowLogInformation} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {FlowLogInformation} [result]   - The deserialized result object if an error did not occur.
                               See {@link FlowLogInformation} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network
  - uid: azure-arm-network.NetworkWatchers.setFlowLogConfiguration_1
    name: >-
      setFlowLogConfiguration(string, string, FlowLogInformation,
      ServiceCallback<FlowLogInformation>)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Configures flow log  and traffic analytics (optional) on a specified
      resource.
    syntax:
      content: >-
        function setFlowLogConfiguration(resourceGroupName: string,
        networkWatcherName: string, parameters: FlowLogInformation, callback:
        ServiceCallback<FlowLogInformation>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: networkWatcherName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-network.FlowLogInformation
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-network.FlowLogInformation>
          description: ''
      return:
        type:
          - Promise<azure-arm-network.FlowLogInformation>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {FlowLogInformation} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {FlowLogInformation} [result]   - The deserialized result object if an error did not occur.
                               See {@link FlowLogInformation} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network
  - uid: >-
      azure-arm-network.NetworkWatchers.setFlowLogConfigurationWithHttpOperationResponse
    name: >-
      setFlowLogConfigurationWithHttpOperationResponse(string, string,
      FlowLogInformation, Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Configures flow log  and traffic analytics (optional) on a specified
      resource.
    syntax:
      content: >-
        function
        setFlowLogConfigurationWithHttpOperationResponse(resourceGroupName:
        string, networkWatcherName: string, parameters: FlowLogInformation,
        options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the network watcher resource
            group.
        - id: networkWatcherName
          type:
            - string
          description: |
            The name of the network watcher resource.
        - id: parameters
          type:
            - azure-arm-network.FlowLogInformation
          description: |
            Parameters that define the configuration of flow
            log.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-arm-network.FlowLogInformation>>
        description: A promise is returned
    package: azure-arm-network
  - uid: azure-arm-network.NetworkWatchers.updateTags
    name: 'updateTags(string, string, TagsObject, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates a network watcher tags.
    syntax:
      content: >-
        function updateTags(resourceGroupName: string, networkWatcherName:
        string, parameters: TagsObject, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: |
            The name of the network watcher.
        - id: parameters
          type:
            - azure-arm-network.TagsObject
          description: |
            Parameters supplied to update network watcher
            tags.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-network.NetworkWatcher>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {NetworkWatcher} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {NetworkWatcher} [result]   - The deserialized result object if an error did not occur.
                               See {@link NetworkWatcher} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network
  - uid: azure-arm-network.NetworkWatchers.updateTags_2
    name: >-
      updateTags(string, string, TagsObject, Object,
      ServiceCallback<NetworkWatcher>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates a network watcher tags.
    syntax:
      content: >-
        function updateTags(resourceGroupName: string, networkWatcherName:
        string, parameters: TagsObject, options: Object, callback:
        ServiceCallback<NetworkWatcher>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: networkWatcherName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-network.TagsObject
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-network.NetworkWatcher>
          description: ''
      return:
        type:
          - Promise<azure-arm-network.NetworkWatcher>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {NetworkWatcher} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {NetworkWatcher} [result]   - The deserialized result object if an error did not occur.
                               See {@link NetworkWatcher} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network
  - uid: azure-arm-network.NetworkWatchers.updateTags_1
    name: 'updateTags(string, string, TagsObject, ServiceCallback<NetworkWatcher>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates a network watcher tags.
    syntax:
      content: >-
        function updateTags(resourceGroupName: string, networkWatcherName:
        string, parameters: TagsObject, callback:
        ServiceCallback<NetworkWatcher>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: networkWatcherName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-network.TagsObject
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-network.NetworkWatcher>
          description: ''
      return:
        type:
          - Promise<azure-arm-network.NetworkWatcher>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {NetworkWatcher} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {NetworkWatcher} [result]   - The deserialized result object if an error did not occur.
                               See {@link NetworkWatcher} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network
  - uid: azure-arm-network.NetworkWatchers.updateTagsWithHttpOperationResponse
    name: 'updateTagsWithHttpOperationResponse(string, string, TagsObject, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates a network watcher tags.
    syntax:
      content: >-
        function updateTagsWithHttpOperationResponse(resourceGroupName: string,
        networkWatcherName: string, parameters: TagsObject, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: |
            The name of the network watcher.
        - id: parameters
          type:
            - azure-arm-network.TagsObject
          description: |
            Parameters supplied to update network watcher
            tags.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-arm-network.NetworkWatcher>>
        description: A promise is returned
    package: azure-arm-network
  - uid: azure-arm-network.NetworkWatchers.verifyIPFlow
    name: 'verifyIPFlow(string, string, VerificationIPFlowParameters, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Verify IP flow from the specified VM to a location given the currently
      configured NSG rules.
    syntax:
      content: >-
        function verifyIPFlow(resourceGroupName: string, networkWatcherName:
        string, parameters: VerificationIPFlowParameters, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: |
            The name of the network watcher.
        - id: parameters
          type:
            - azure-arm-network.VerificationIPFlowParameters
          description: |
            Parameters that define the IP flow to be
            verified.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-network.VerificationIPFlowResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VerificationIPFlowResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VerificationIPFlowResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link VerificationIPFlowResult} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network
  - uid: azure-arm-network.NetworkWatchers.verifyIPFlow_2
    name: >-
      verifyIPFlow(string, string, VerificationIPFlowParameters, Object,
      ServiceCallback<VerificationIPFlowResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Verify IP flow from the specified VM to a location given the currently
      configured NSG rules.
    syntax:
      content: >-
        function verifyIPFlow(resourceGroupName: string, networkWatcherName:
        string, parameters: VerificationIPFlowParameters, options: Object,
        callback: ServiceCallback<VerificationIPFlowResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: networkWatcherName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-network.VerificationIPFlowParameters
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-network.VerificationIPFlowResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-network.VerificationIPFlowResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VerificationIPFlowResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VerificationIPFlowResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link VerificationIPFlowResult} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network
  - uid: azure-arm-network.NetworkWatchers.verifyIPFlow_1
    name: >-
      verifyIPFlow(string, string, VerificationIPFlowParameters,
      ServiceCallback<VerificationIPFlowResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Verify IP flow from the specified VM to a location given the currently
      configured NSG rules.
    syntax:
      content: >-
        function verifyIPFlow(resourceGroupName: string, networkWatcherName:
        string, parameters: VerificationIPFlowParameters, callback:
        ServiceCallback<VerificationIPFlowResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: networkWatcherName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-network.VerificationIPFlowParameters
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-network.VerificationIPFlowResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-network.VerificationIPFlowResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {VerificationIPFlowResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {VerificationIPFlowResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link VerificationIPFlowResult} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network
  - uid: azure-arm-network.NetworkWatchers.verifyIPFlowWithHttpOperationResponse
    name: >-
      verifyIPFlowWithHttpOperationResponse(string, string,
      VerificationIPFlowParameters, Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Verify IP flow from the specified VM to a location given the currently
      configured NSG rules.
    syntax:
      content: >-
        function verifyIPFlowWithHttpOperationResponse(resourceGroupName:
        string, networkWatcherName: string, parameters:
        VerificationIPFlowParameters, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: |
            The name of the network watcher.
        - id: parameters
          type:
            - azure-arm-network.VerificationIPFlowParameters
          description: |
            Parameters that define the IP flow to be
            verified.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-network.VerificationIPFlowResult>>
        description: A promise is returned
    package: azure-arm-network
references:
  - uid: azure-arm-network.ConnectivityParameters
    name: ConnectivityParameters
    spec.typeScript:
      - name: ConnectivityParameters
        fullName: ConnectivityParameters
        uid: azure-arm-network.ConnectivityParameters
  - uid: Promise<azure-arm-network.ConnectivityInformation>
    name: ConnectivityInformation>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ConnectivityInformation
        fullName: ConnectivityInformation
        uid: azure-arm-network.ConnectivityInformation
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-arm-network.ConnectivityInformation>
    name: ConnectivityInformation>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ConnectivityInformation
        fullName: ConnectivityInformation
        uid: azure-arm-network.ConnectivityInformation
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-arm-network.ConnectivityInformation>>
    name: ConnectivityInformation>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: ConnectivityInformation
        fullName: ConnectivityInformation
        uid: azure-arm-network.ConnectivityInformation
      - name: '>>'
        fullName: '>>'
  - uid: azure-arm-network.AzureReachabilityReportParameters
    name: AzureReachabilityReportParameters
    spec.typeScript:
      - name: AzureReachabilityReportParameters
        fullName: AzureReachabilityReportParameters
        uid: azure-arm-network.AzureReachabilityReportParameters
  - uid: Promise<azure-arm-network.AzureReachabilityReport>
    name: AzureReachabilityReport>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: AzureReachabilityReport
        fullName: AzureReachabilityReport
        uid: azure-arm-network.AzureReachabilityReport
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-arm-network.AzureReachabilityReport>
    name: AzureReachabilityReport>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: AzureReachabilityReport
        fullName: AzureReachabilityReport
        uid: azure-arm-network.AzureReachabilityReport
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-arm-network.AzureReachabilityReport>>
    name: AzureReachabilityReport>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: AzureReachabilityReport
        fullName: AzureReachabilityReport
        uid: azure-arm-network.AzureReachabilityReport
      - name: '>>'
        fullName: '>>'
  - uid: azure-arm-network.FlowLogStatusParameters
    name: FlowLogStatusParameters
    spec.typeScript:
      - name: FlowLogStatusParameters
        fullName: FlowLogStatusParameters
        uid: azure-arm-network.FlowLogStatusParameters
  - uid: Promise<azure-arm-network.FlowLogInformation>
    name: FlowLogInformation>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: FlowLogInformation
        fullName: FlowLogInformation
        uid: azure-arm-network.FlowLogInformation
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-arm-network.FlowLogInformation>
    name: FlowLogInformation>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: FlowLogInformation
        fullName: FlowLogInformation
        uid: azure-arm-network.FlowLogInformation
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-arm-network.FlowLogInformation>>
    name: FlowLogInformation>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: FlowLogInformation
        fullName: FlowLogInformation
        uid: azure-arm-network.FlowLogInformation
      - name: '>>'
        fullName: '>>'
  - uid: azure-arm-network.NetworkConfigurationDiagnosticParameters
    name: NetworkConfigurationDiagnosticParameters
    spec.typeScript:
      - name: NetworkConfigurationDiagnosticParameters
        fullName: NetworkConfigurationDiagnosticParameters
        uid: azure-arm-network.NetworkConfigurationDiagnosticParameters
  - uid: Promise<azure-arm-network.NetworkConfigurationDiagnosticResponse>
    name: NetworkConfigurationDiagnosticResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: NetworkConfigurationDiagnosticResponse
        fullName: NetworkConfigurationDiagnosticResponse
        uid: azure-arm-network.NetworkConfigurationDiagnosticResponse
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-arm-network.NetworkConfigurationDiagnosticResponse>
    name: NetworkConfigurationDiagnosticResponse>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: NetworkConfigurationDiagnosticResponse
        fullName: NetworkConfigurationDiagnosticResponse
        uid: azure-arm-network.NetworkConfigurationDiagnosticResponse
      - name: '>'
        fullName: '>'
  - uid: >-
      Promise<HttpOperationResponse<azure-arm-network.NetworkConfigurationDiagnosticResponse>>
    name: NetworkConfigurationDiagnosticResponse>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: NetworkConfigurationDiagnosticResponse
        fullName: NetworkConfigurationDiagnosticResponse
        uid: azure-arm-network.NetworkConfigurationDiagnosticResponse
      - name: '>>'
        fullName: '>>'
  - uid: azure-arm-network.NextHopParameters
    name: NextHopParameters
    spec.typeScript:
      - name: NextHopParameters
        fullName: NextHopParameters
        uid: azure-arm-network.NextHopParameters
  - uid: Promise<azure-arm-network.NextHopResult>
    name: NextHopResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: NextHopResult
        fullName: NextHopResult
        uid: azure-arm-network.NextHopResult
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-arm-network.NextHopResult>
    name: NextHopResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: NextHopResult
        fullName: NextHopResult
        uid: azure-arm-network.NextHopResult
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-arm-network.NextHopResult>>
    name: NextHopResult>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: NextHopResult
        fullName: NextHopResult
        uid: azure-arm-network.NextHopResult
      - name: '>>'
        fullName: '>>'
  - uid: azure-arm-network.TroubleshootingParameters
    name: TroubleshootingParameters
    spec.typeScript:
      - name: TroubleshootingParameters
        fullName: TroubleshootingParameters
        uid: azure-arm-network.TroubleshootingParameters
  - uid: Promise<azure-arm-network.TroubleshootingResult>
    name: TroubleshootingResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: TroubleshootingResult
        fullName: TroubleshootingResult
        uid: azure-arm-network.TroubleshootingResult
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-arm-network.TroubleshootingResult>
    name: TroubleshootingResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: TroubleshootingResult
        fullName: TroubleshootingResult
        uid: azure-arm-network.TroubleshootingResult
      - name: '>'
        fullName: '>'
  - uid: azure-arm-network.QueryTroubleshootingParameters
    name: QueryTroubleshootingParameters
    spec.typeScript:
      - name: QueryTroubleshootingParameters
        fullName: QueryTroubleshootingParameters
        uid: azure-arm-network.QueryTroubleshootingParameters
  - uid: Promise<HttpOperationResponse<azure-arm-network.TroubleshootingResult>>
    name: TroubleshootingResult>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: TroubleshootingResult
        fullName: TroubleshootingResult
        uid: azure-arm-network.TroubleshootingResult
      - name: '>>'
        fullName: '>>'
  - uid: azure-arm-network.SecurityGroupViewParameters
    name: SecurityGroupViewParameters
    spec.typeScript:
      - name: SecurityGroupViewParameters
        fullName: SecurityGroupViewParameters
        uid: azure-arm-network.SecurityGroupViewParameters
  - uid: Promise<azure-arm-network.SecurityGroupViewResult>
    name: SecurityGroupViewResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: SecurityGroupViewResult
        fullName: SecurityGroupViewResult
        uid: azure-arm-network.SecurityGroupViewResult
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-arm-network.SecurityGroupViewResult>
    name: SecurityGroupViewResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: SecurityGroupViewResult
        fullName: SecurityGroupViewResult
        uid: azure-arm-network.SecurityGroupViewResult
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-arm-network.SecurityGroupViewResult>>
    name: SecurityGroupViewResult>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: SecurityGroupViewResult
        fullName: SecurityGroupViewResult
        uid: azure-arm-network.SecurityGroupViewResult
      - name: '>>'
        fullName: '>>'
  - uid: azure-arm-network.AvailableProvidersListParameters
    name: AvailableProvidersListParameters
    spec.typeScript:
      - name: AvailableProvidersListParameters
        fullName: AvailableProvidersListParameters
        uid: azure-arm-network.AvailableProvidersListParameters
  - uid: Promise<azure-arm-network.AvailableProvidersList>
    name: AvailableProvidersList>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: AvailableProvidersList
        fullName: AvailableProvidersList
        uid: azure-arm-network.AvailableProvidersList
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-arm-network.AvailableProvidersList>
    name: AvailableProvidersList>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: AvailableProvidersList
        fullName: AvailableProvidersList
        uid: azure-arm-network.AvailableProvidersList
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-arm-network.AvailableProvidersList>>
    name: AvailableProvidersList>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: AvailableProvidersList
        fullName: AvailableProvidersList
        uid: azure-arm-network.AvailableProvidersList
      - name: '>>'
        fullName: '>>'
  - uid: azure-arm-network.FlowLogInformation
    name: FlowLogInformation
    spec.typeScript:
      - name: FlowLogInformation
        fullName: FlowLogInformation
        uid: azure-arm-network.FlowLogInformation
  - uid: azure-arm-network.VerificationIPFlowParameters
    name: VerificationIPFlowParameters
    spec.typeScript:
      - name: VerificationIPFlowParameters
        fullName: VerificationIPFlowParameters
        uid: azure-arm-network.VerificationIPFlowParameters
  - uid: Promise<azure-arm-network.VerificationIPFlowResult>
    name: VerificationIPFlowResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: VerificationIPFlowResult
        fullName: VerificationIPFlowResult
        uid: azure-arm-network.VerificationIPFlowResult
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-arm-network.VerificationIPFlowResult>
    name: VerificationIPFlowResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: VerificationIPFlowResult
        fullName: VerificationIPFlowResult
        uid: azure-arm-network.VerificationIPFlowResult
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-arm-network.VerificationIPFlowResult>>
    name: VerificationIPFlowResult>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: VerificationIPFlowResult
        fullName: VerificationIPFlowResult
        uid: azure-arm-network.VerificationIPFlowResult
      - name: '>>'
        fullName: '>>'
  - uid: azure-arm-network.NetworkWatcher
    name: NetworkWatcher
    spec.typeScript:
      - name: NetworkWatcher
        fullName: NetworkWatcher
        uid: azure-arm-network.NetworkWatcher
  - uid: Promise<azure-arm-network.NetworkWatcher>
    name: NetworkWatcher>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: NetworkWatcher
        fullName: NetworkWatcher
        uid: azure-arm-network.NetworkWatcher
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-arm-network.NetworkWatcher>
    name: NetworkWatcher>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: NetworkWatcher
        fullName: NetworkWatcher
        uid: azure-arm-network.NetworkWatcher
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-arm-network.NetworkWatcher>>
    name: NetworkWatcher>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: NetworkWatcher
        fullName: NetworkWatcher
        uid: azure-arm-network.NetworkWatcher
      - name: '>>'
        fullName: '>>'
  - uid: azure-arm-network.TopologyParameters
    name: TopologyParameters
    spec.typeScript:
      - name: TopologyParameters
        fullName: TopologyParameters
        uid: azure-arm-network.TopologyParameters
  - uid: Promise<azure-arm-network.Topology>
    name: Topology>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: Topology
        fullName: Topology
        uid: azure-arm-network.Topology
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-arm-network.Topology>
    name: Topology>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: Topology
        fullName: Topology
        uid: azure-arm-network.Topology
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-arm-network.Topology>>
    name: Topology>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: Topology
        fullName: Topology
        uid: azure-arm-network.Topology
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-arm-network.NetworkWatcherListResult>
    name: NetworkWatcherListResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: NetworkWatcherListResult
        fullName: NetworkWatcherListResult
        uid: azure-arm-network.NetworkWatcherListResult
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-arm-network.NetworkWatcherListResult>
    name: NetworkWatcherListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: NetworkWatcherListResult
        fullName: NetworkWatcherListResult
        uid: azure-arm-network.NetworkWatcherListResult
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-arm-network.NetworkWatcherListResult>>
    name: NetworkWatcherListResult>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: NetworkWatcherListResult
        fullName: NetworkWatcherListResult
        uid: azure-arm-network.NetworkWatcherListResult
      - name: '>>'
        fullName: '>>'
  - uid: azure-arm-network.TagsObject
    name: TagsObject
    spec.typeScript:
      - name: TagsObject
        fullName: TagsObject
        uid: azure-arm-network.TagsObject
