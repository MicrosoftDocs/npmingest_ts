### YamlMime:UniversalReference
items:
  - uid: azure-arm-network - v13.0.0.ExpressRouteCrossConnectionPeerings
    name: ExpressRouteCrossConnectionPeerings
    fullName: ExpressRouteCrossConnectionPeerings
    children:
      - >-
        azure-arm-network -
        v13.0.0.ExpressRouteCrossConnectionPeerings.beginCreateOrUpdate
      - >-
        azure-arm-network -
        v13.0.0.ExpressRouteCrossConnectionPeerings.beginCreateOrUpdate_2
      - >-
        azure-arm-network -
        v13.0.0.ExpressRouteCrossConnectionPeerings.beginCreateOrUpdate_1
      - >-
        azure-arm-network -
        v13.0.0.ExpressRouteCrossConnectionPeerings.beginCreateOrUpdateWithHttpOperationResponse
      - >-
        azure-arm-network -
        v13.0.0.ExpressRouteCrossConnectionPeerings.beginDeleteMethod
      - >-
        azure-arm-network -
        v13.0.0.ExpressRouteCrossConnectionPeerings.beginDeleteMethod_2
      - >-
        azure-arm-network -
        v13.0.0.ExpressRouteCrossConnectionPeerings.beginDeleteMethod_1
      - >-
        azure-arm-network -
        v13.0.0.ExpressRouteCrossConnectionPeerings.beginDeleteMethodWithHttpOperationResponse
      - >-
        azure-arm-network -
        v13.0.0.ExpressRouteCrossConnectionPeerings.createOrUpdate
      - >-
        azure-arm-network -
        v13.0.0.ExpressRouteCrossConnectionPeerings.createOrUpdate_2
      - >-
        azure-arm-network -
        v13.0.0.ExpressRouteCrossConnectionPeerings.createOrUpdate_1
      - >-
        azure-arm-network -
        v13.0.0.ExpressRouteCrossConnectionPeerings.createOrUpdateWithHttpOperationResponse
      - >-
        azure-arm-network -
        v13.0.0.ExpressRouteCrossConnectionPeerings.deleteMethod
      - >-
        azure-arm-network -
        v13.0.0.ExpressRouteCrossConnectionPeerings.deleteMethod_2
      - >-
        azure-arm-network -
        v13.0.0.ExpressRouteCrossConnectionPeerings.deleteMethod_1
      - >-
        azure-arm-network -
        v13.0.0.ExpressRouteCrossConnectionPeerings.deleteMethodWithHttpOperationResponse
      - azure-arm-network - v13.0.0.ExpressRouteCrossConnectionPeerings.get
      - azure-arm-network - v13.0.0.ExpressRouteCrossConnectionPeerings.get_2
      - azure-arm-network - v13.0.0.ExpressRouteCrossConnectionPeerings.get_1
      - >-
        azure-arm-network -
        v13.0.0.ExpressRouteCrossConnectionPeerings.getWithHttpOperationResponse
      - azure-arm-network - v13.0.0.ExpressRouteCrossConnectionPeerings.list
      - azure-arm-network - v13.0.0.ExpressRouteCrossConnectionPeerings.list_2
      - azure-arm-network - v13.0.0.ExpressRouteCrossConnectionPeerings.list_1
      - azure-arm-network - v13.0.0.ExpressRouteCrossConnectionPeerings.listNext
      - >-
        azure-arm-network -
        v13.0.0.ExpressRouteCrossConnectionPeerings.listNext_2
      - >-
        azure-arm-network -
        v13.0.0.ExpressRouteCrossConnectionPeerings.listNext_1
      - >-
        azure-arm-network -
        v13.0.0.ExpressRouteCrossConnectionPeerings.listNextWithHttpOperationResponse
      - >-
        azure-arm-network -
        v13.0.0.ExpressRouteCrossConnectionPeerings.listWithHttpOperationResponse
    langs:
      - typeScript
    type: interface
    summary: ''
    package: azure-arm-network - v13
  - uid: >-
      azure-arm-network -
      v13.0.0.ExpressRouteCrossConnectionPeerings.beginCreateOrUpdate
    name: >-
      beginCreateOrUpdate(string, string, string,
      ExpressRouteCrossConnectionPeering, Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates or updates a peering in the specified ExpressRouteCrossConnection.
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string,
        crossConnectionName: string, peeringName: string, peeringParameters:
        ExpressRouteCrossConnectionPeering, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: crossConnectionName
          type:
            - string
          description: |
            The name of the
            ExpressRouteCrossConnection.
        - id: peeringName
          type:
            - string
          description: |
            The name of the peering.
        - id: peeringParameters
          type:
            - azure-arm-network - v13.0.0.ExpressRouteCrossConnectionPeering
          description: |
            Parameters supplied to the create or
            update ExpressRouteCrossConnection peering operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<azure-arm-network -
            v13.0.0.ExpressRouteCrossConnectionPeering>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {ExpressRouteCrossConnectionPeering} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {ExpressRouteCrossConnectionPeering} [result]   - The deserialized result object if an error did not occur.
                               See {@link ExpressRouteCrossConnectionPeering} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network - v13
  - uid: >-
      azure-arm-network -
      v13.0.0.ExpressRouteCrossConnectionPeerings.beginCreateOrUpdate_2
    name: >-
      beginCreateOrUpdate(string, string, string,
      ExpressRouteCrossConnectionPeering, Object,
      ServiceCallback<ExpressRouteCrossConnectionPeering>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates or updates a peering in the specified ExpressRouteCrossConnection.
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string,
        crossConnectionName: string, peeringName: string, peeringParameters:
        ExpressRouteCrossConnectionPeering, options: Object, callback:
        ServiceCallback<ExpressRouteCrossConnectionPeering>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: crossConnectionName
          type:
            - string
          description: ''
        - id: peeringName
          type:
            - string
          description: ''
        - id: peeringParameters
          type:
            - azure-arm-network - v13.0.0.ExpressRouteCrossConnectionPeering
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<azure-arm-network -
              v13.0.0.ExpressRouteCrossConnectionPeering>
          description: ''
      return:
        type:
          - >-
            Promise<azure-arm-network -
            v13.0.0.ExpressRouteCrossConnectionPeering>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {ExpressRouteCrossConnectionPeering} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {ExpressRouteCrossConnectionPeering} [result]   - The deserialized result object if an error did not occur.
                               See {@link ExpressRouteCrossConnectionPeering} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network - v13
  - uid: >-
      azure-arm-network -
      v13.0.0.ExpressRouteCrossConnectionPeerings.beginCreateOrUpdate_1
    name: >-
      beginCreateOrUpdate(string, string, string,
      ExpressRouteCrossConnectionPeering,
      ServiceCallback<ExpressRouteCrossConnectionPeering>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates or updates a peering in the specified ExpressRouteCrossConnection.
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string,
        crossConnectionName: string, peeringName: string, peeringParameters:
        ExpressRouteCrossConnectionPeering, callback:
        ServiceCallback<ExpressRouteCrossConnectionPeering>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: crossConnectionName
          type:
            - string
          description: ''
        - id: peeringName
          type:
            - string
          description: ''
        - id: peeringParameters
          type:
            - azure-arm-network - v13.0.0.ExpressRouteCrossConnectionPeering
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<azure-arm-network -
              v13.0.0.ExpressRouteCrossConnectionPeering>
          description: ''
      return:
        type:
          - >-
            Promise<azure-arm-network -
            v13.0.0.ExpressRouteCrossConnectionPeering>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {ExpressRouteCrossConnectionPeering} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {ExpressRouteCrossConnectionPeering} [result]   - The deserialized result object if an error did not occur.
                               See {@link ExpressRouteCrossConnectionPeering} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network - v13
  - uid: >-
      azure-arm-network -
      v13.0.0.ExpressRouteCrossConnectionPeerings.beginCreateOrUpdateWithHttpOperationResponse
    name: >-
      beginCreateOrUpdateWithHttpOperationResponse(string, string, string,
      ExpressRouteCrossConnectionPeering, Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates or updates a peering in the specified ExpressRouteCrossConnection.
    syntax:
      content: >-
        function beginCreateOrUpdateWithHttpOperationResponse(resourceGroupName:
        string, crossConnectionName: string, peeringName: string,
        peeringParameters: ExpressRouteCrossConnectionPeering, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: crossConnectionName
          type:
            - string
          description: |
            The name of the
            ExpressRouteCrossConnection.
        - id: peeringName
          type:
            - string
          description: |
            The name of the peering.
        - id: peeringParameters
          type:
            - azure-arm-network - v13.0.0.ExpressRouteCrossConnectionPeering
          description: |
            Parameters supplied to the create or
            update ExpressRouteCrossConnection peering operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-network -
            v13.0.0.ExpressRouteCrossConnectionPeering>>
        description: A promise is returned
    package: azure-arm-network - v13
  - uid: >-
      azure-arm-network -
      v13.0.0.ExpressRouteCrossConnectionPeerings.beginDeleteMethod
    name: 'beginDeleteMethod(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes the specified peering from the ExpressRouteCrossConnection.
    syntax:
      content: >-
        function beginDeleteMethod(resourceGroupName: string,
        crossConnectionName: string, peeringName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: crossConnectionName
          type:
            - string
          description: |
            The name of the
            ExpressRouteCrossConnection.
        - id: peeringName
          type:
            - string
          description: |
            The name of the peering.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network - v13
  - uid: >-
      azure-arm-network -
      v13.0.0.ExpressRouteCrossConnectionPeerings.beginDeleteMethod_2
    name: 'beginDeleteMethod(string, string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes the specified peering from the ExpressRouteCrossConnection.
    syntax:
      content: >-
        function beginDeleteMethod(resourceGroupName: string,
        crossConnectionName: string, peeringName: string, options: Object,
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: crossConnectionName
          type:
            - string
          description: ''
        - id: peeringName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network - v13
  - uid: >-
      azure-arm-network -
      v13.0.0.ExpressRouteCrossConnectionPeerings.beginDeleteMethod_1
    name: 'beginDeleteMethod(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes the specified peering from the ExpressRouteCrossConnection.
    syntax:
      content: >-
        function beginDeleteMethod(resourceGroupName: string,
        crossConnectionName: string, peeringName: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: crossConnectionName
          type:
            - string
          description: ''
        - id: peeringName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network - v13
  - uid: >-
      azure-arm-network -
      v13.0.0.ExpressRouteCrossConnectionPeerings.beginDeleteMethodWithHttpOperationResponse
    name: 'beginDeleteMethodWithHttpOperationResponse(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes the specified peering from the ExpressRouteCrossConnection.
    syntax:
      content: >-
        function beginDeleteMethodWithHttpOperationResponse(resourceGroupName:
        string, crossConnectionName: string, peeringName: string, options?:
        Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: crossConnectionName
          type:
            - string
          description: |
            The name of the
            ExpressRouteCrossConnection.
        - id: peeringName
          type:
            - string
          description: |
            The name of the peering.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
        description: A promise is returned
    package: azure-arm-network - v13
  - uid: >-
      azure-arm-network -
      v13.0.0.ExpressRouteCrossConnectionPeerings.createOrUpdate
    name: >-
      createOrUpdate(string, string, string, ExpressRouteCrossConnectionPeering,
      Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates or updates a peering in the specified ExpressRouteCrossConnection.
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, crossConnectionName:
        string, peeringName: string, peeringParameters:
        ExpressRouteCrossConnectionPeering, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: crossConnectionName
          type:
            - string
          description: |
            The name of the
            ExpressRouteCrossConnection.
        - id: peeringName
          type:
            - string
          description: |
            The name of the peering.
        - id: peeringParameters
          type:
            - azure-arm-network - v13.0.0.ExpressRouteCrossConnectionPeering
          description: |
            Parameters supplied to the create or
            update ExpressRouteCrossConnection peering operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<azure-arm-network -
            v13.0.0.ExpressRouteCrossConnectionPeering>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {ExpressRouteCrossConnectionPeering} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {ExpressRouteCrossConnectionPeering} [result]   - The deserialized result object if an error did not occur.
                               See {@link ExpressRouteCrossConnectionPeering} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network - v13
  - uid: >-
      azure-arm-network -
      v13.0.0.ExpressRouteCrossConnectionPeerings.createOrUpdate_2
    name: >-
      createOrUpdate(string, string, string, ExpressRouteCrossConnectionPeering,
      Object, ServiceCallback<ExpressRouteCrossConnectionPeering>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates or updates a peering in the specified ExpressRouteCrossConnection.
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, crossConnectionName:
        string, peeringName: string, peeringParameters:
        ExpressRouteCrossConnectionPeering, options: Object, callback:
        ServiceCallback<ExpressRouteCrossConnectionPeering>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: crossConnectionName
          type:
            - string
          description: ''
        - id: peeringName
          type:
            - string
          description: ''
        - id: peeringParameters
          type:
            - azure-arm-network - v13.0.0.ExpressRouteCrossConnectionPeering
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<azure-arm-network -
              v13.0.0.ExpressRouteCrossConnectionPeering>
          description: ''
      return:
        type:
          - >-
            Promise<azure-arm-network -
            v13.0.0.ExpressRouteCrossConnectionPeering>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {ExpressRouteCrossConnectionPeering} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {ExpressRouteCrossConnectionPeering} [result]   - The deserialized result object if an error did not occur.
                               See {@link ExpressRouteCrossConnectionPeering} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network - v13
  - uid: >-
      azure-arm-network -
      v13.0.0.ExpressRouteCrossConnectionPeerings.createOrUpdate_1
    name: >-
      createOrUpdate(string, string, string, ExpressRouteCrossConnectionPeering,
      ServiceCallback<ExpressRouteCrossConnectionPeering>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates or updates a peering in the specified ExpressRouteCrossConnection.
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, crossConnectionName:
        string, peeringName: string, peeringParameters:
        ExpressRouteCrossConnectionPeering, callback:
        ServiceCallback<ExpressRouteCrossConnectionPeering>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: crossConnectionName
          type:
            - string
          description: ''
        - id: peeringName
          type:
            - string
          description: ''
        - id: peeringParameters
          type:
            - azure-arm-network - v13.0.0.ExpressRouteCrossConnectionPeering
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<azure-arm-network -
              v13.0.0.ExpressRouteCrossConnectionPeering>
          description: ''
      return:
        type:
          - >-
            Promise<azure-arm-network -
            v13.0.0.ExpressRouteCrossConnectionPeering>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {ExpressRouteCrossConnectionPeering} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {ExpressRouteCrossConnectionPeering} [result]   - The deserialized result object if an error did not occur.
                               See {@link ExpressRouteCrossConnectionPeering} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network - v13
  - uid: >-
      azure-arm-network -
      v13.0.0.ExpressRouteCrossConnectionPeerings.createOrUpdateWithHttpOperationResponse
    name: >-
      createOrUpdateWithHttpOperationResponse(string, string, string,
      ExpressRouteCrossConnectionPeering, Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates or updates a peering in the specified ExpressRouteCrossConnection.
    syntax:
      content: >-
        function createOrUpdateWithHttpOperationResponse(resourceGroupName:
        string, crossConnectionName: string, peeringName: string,
        peeringParameters: ExpressRouteCrossConnectionPeering, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: crossConnectionName
          type:
            - string
          description: |
            The name of the
            ExpressRouteCrossConnection.
        - id: peeringName
          type:
            - string
          description: |
            The name of the peering.
        - id: peeringParameters
          type:
            - azure-arm-network - v13.0.0.ExpressRouteCrossConnectionPeering
          description: |
            Parameters supplied to the create or
            update ExpressRouteCrossConnection peering operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-network -
            v13.0.0.ExpressRouteCrossConnectionPeering>>
        description: A promise is returned
    package: azure-arm-network - v13
  - uid: >-
      azure-arm-network -
      v13.0.0.ExpressRouteCrossConnectionPeerings.deleteMethod
    name: 'deleteMethod(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes the specified peering from the ExpressRouteCrossConnection.
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, crossConnectionName:
        string, peeringName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: crossConnectionName
          type:
            - string
          description: |
            The name of the
            ExpressRouteCrossConnection.
        - id: peeringName
          type:
            - string
          description: |
            The name of the peering.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network - v13
  - uid: >-
      azure-arm-network -
      v13.0.0.ExpressRouteCrossConnectionPeerings.deleteMethod_2
    name: 'deleteMethod(string, string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes the specified peering from the ExpressRouteCrossConnection.
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, crossConnectionName:
        string, peeringName: string, options: Object, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: crossConnectionName
          type:
            - string
          description: ''
        - id: peeringName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network - v13
  - uid: >-
      azure-arm-network -
      v13.0.0.ExpressRouteCrossConnectionPeerings.deleteMethod_1
    name: 'deleteMethod(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes the specified peering from the ExpressRouteCrossConnection.
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, crossConnectionName:
        string, peeringName: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: crossConnectionName
          type:
            - string
          description: ''
        - id: peeringName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network - v13
  - uid: >-
      azure-arm-network -
      v13.0.0.ExpressRouteCrossConnectionPeerings.deleteMethodWithHttpOperationResponse
    name: 'deleteMethodWithHttpOperationResponse(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes the specified peering from the ExpressRouteCrossConnection.
    syntax:
      content: >-
        function deleteMethodWithHttpOperationResponse(resourceGroupName:
        string, crossConnectionName: string, peeringName: string, options?:
        Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: crossConnectionName
          type:
            - string
          description: |
            The name of the
            ExpressRouteCrossConnection.
        - id: peeringName
          type:
            - string
          description: |
            The name of the peering.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
        description: A promise is returned
    package: azure-arm-network - v13
  - uid: azure-arm-network - v13.0.0.ExpressRouteCrossConnectionPeerings.get
    name: 'get(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the specified peering for the ExpressRouteCrossConnection.
    syntax:
      content: >-
        function get(resourceGroupName: string, crossConnectionName: string,
        peeringName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: crossConnectionName
          type:
            - string
          description: |
            The name of the
            ExpressRouteCrossConnection.
        - id: peeringName
          type:
            - string
          description: |
            The name of the peering.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<azure-arm-network -
            v13.0.0.ExpressRouteCrossConnectionPeering>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {ExpressRouteCrossConnectionPeering} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {ExpressRouteCrossConnectionPeering} [result]   - The deserialized result object if an error did not occur.
                               See {@link ExpressRouteCrossConnectionPeering} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network - v13
  - uid: azure-arm-network - v13.0.0.ExpressRouteCrossConnectionPeerings.get_2
    name: >-
      get(string, string, string, Object,
      ServiceCallback<ExpressRouteCrossConnectionPeering>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the specified peering for the ExpressRouteCrossConnection.
    syntax:
      content: >-
        function get(resourceGroupName: string, crossConnectionName: string,
        peeringName: string, options: Object, callback:
        ServiceCallback<ExpressRouteCrossConnectionPeering>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: crossConnectionName
          type:
            - string
          description: ''
        - id: peeringName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<azure-arm-network -
              v13.0.0.ExpressRouteCrossConnectionPeering>
          description: ''
      return:
        type:
          - >-
            Promise<azure-arm-network -
            v13.0.0.ExpressRouteCrossConnectionPeering>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {ExpressRouteCrossConnectionPeering} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {ExpressRouteCrossConnectionPeering} [result]   - The deserialized result object if an error did not occur.
                               See {@link ExpressRouteCrossConnectionPeering} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network - v13
  - uid: azure-arm-network - v13.0.0.ExpressRouteCrossConnectionPeerings.get_1
    name: >-
      get(string, string, string,
      ServiceCallback<ExpressRouteCrossConnectionPeering>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the specified peering for the ExpressRouteCrossConnection.
    syntax:
      content: >-
        function get(resourceGroupName: string, crossConnectionName: string,
        peeringName: string, callback:
        ServiceCallback<ExpressRouteCrossConnectionPeering>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: crossConnectionName
          type:
            - string
          description: ''
        - id: peeringName
          type:
            - string
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<azure-arm-network -
              v13.0.0.ExpressRouteCrossConnectionPeering>
          description: ''
      return:
        type:
          - >-
            Promise<azure-arm-network -
            v13.0.0.ExpressRouteCrossConnectionPeering>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {ExpressRouteCrossConnectionPeering} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {ExpressRouteCrossConnectionPeering} [result]   - The deserialized result object if an error did not occur.
                               See {@link ExpressRouteCrossConnectionPeering} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network - v13
  - uid: >-
      azure-arm-network -
      v13.0.0.ExpressRouteCrossConnectionPeerings.getWithHttpOperationResponse
    name: 'getWithHttpOperationResponse(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the specified peering for the ExpressRouteCrossConnection.
    syntax:
      content: >-
        function getWithHttpOperationResponse(resourceGroupName: string,
        crossConnectionName: string, peeringName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: crossConnectionName
          type:
            - string
          description: |
            The name of the
            ExpressRouteCrossConnection.
        - id: peeringName
          type:
            - string
          description: |
            The name of the peering.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-network -
            v13.0.0.ExpressRouteCrossConnectionPeering>>
        description: A promise is returned
    package: azure-arm-network - v13
  - uid: azure-arm-network - v13.0.0.ExpressRouteCrossConnectionPeerings.list
    name: 'list(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets all peerings in a specified ExpressRouteCrossConnection.
    syntax:
      content: >-
        function list(resourceGroupName: string, crossConnectionName: string,
        options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: crossConnectionName
          type:
            - string
          description: |
            The name of the
            ExpressRouteCrossConnection.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<azure-arm-network -
            v13.0.0.ExpressRouteCrossConnectionPeeringList>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {ExpressRouteCrossConnectionPeeringList} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {ExpressRouteCrossConnectionPeeringList} [result]   - The deserialized result object if an error did not occur.
                               See {@link ExpressRouteCrossConnectionPeeringList} for
                               more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network - v13
  - uid: azure-arm-network - v13.0.0.ExpressRouteCrossConnectionPeerings.list_2
    name: >-
      list(string, string, Object,
      ServiceCallback<ExpressRouteCrossConnectionPeeringList>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets all peerings in a specified ExpressRouteCrossConnection.
    syntax:
      content: >-
        function list(resourceGroupName: string, crossConnectionName: string,
        options: Object, callback:
        ServiceCallback<ExpressRouteCrossConnectionPeeringList>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: crossConnectionName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<azure-arm-network -
              v13.0.0.ExpressRouteCrossConnectionPeeringList>
          description: ''
      return:
        type:
          - >-
            Promise<azure-arm-network -
            v13.0.0.ExpressRouteCrossConnectionPeeringList>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {ExpressRouteCrossConnectionPeeringList} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {ExpressRouteCrossConnectionPeeringList} [result]   - The deserialized result object if an error did not occur.
                               See {@link ExpressRouteCrossConnectionPeeringList} for
                               more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network - v13
  - uid: azure-arm-network - v13.0.0.ExpressRouteCrossConnectionPeerings.list_1
    name: >-
      list(string, string,
      ServiceCallback<ExpressRouteCrossConnectionPeeringList>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets all peerings in a specified ExpressRouteCrossConnection.
    syntax:
      content: >-
        function list(resourceGroupName: string, crossConnectionName: string,
        callback: ServiceCallback<ExpressRouteCrossConnectionPeeringList>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: crossConnectionName
          type:
            - string
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<azure-arm-network -
              v13.0.0.ExpressRouteCrossConnectionPeeringList>
          description: ''
      return:
        type:
          - >-
            Promise<azure-arm-network -
            v13.0.0.ExpressRouteCrossConnectionPeeringList>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {ExpressRouteCrossConnectionPeeringList} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {ExpressRouteCrossConnectionPeeringList} [result]   - The deserialized result object if an error did not occur.
                               See {@link ExpressRouteCrossConnectionPeeringList} for
                               more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network - v13
  - uid: azure-arm-network - v13.0.0.ExpressRouteCrossConnectionPeerings.listNext
    name: 'listNext(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets all peerings in a specified ExpressRouteCrossConnection.
    syntax:
      content: 'function listNext(nextPageLink: string, options?: Object)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<azure-arm-network -
            v13.0.0.ExpressRouteCrossConnectionPeeringList>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {ExpressRouteCrossConnectionPeeringList} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {ExpressRouteCrossConnectionPeeringList} [result]   - The deserialized result object if an error did not occur.
                               See {@link ExpressRouteCrossConnectionPeeringList} for
                               more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network - v13
  - uid: azure-arm-network - v13.0.0.ExpressRouteCrossConnectionPeerings.listNext_2
    name: >-
      listNext(string, Object,
      ServiceCallback<ExpressRouteCrossConnectionPeeringList>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets all peerings in a specified ExpressRouteCrossConnection.
    syntax:
      content: >-
        function listNext(nextPageLink: string, options: Object, callback:
        ServiceCallback<ExpressRouteCrossConnectionPeeringList>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<azure-arm-network -
              v13.0.0.ExpressRouteCrossConnectionPeeringList>
          description: ''
      return:
        type:
          - >-
            Promise<azure-arm-network -
            v13.0.0.ExpressRouteCrossConnectionPeeringList>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {ExpressRouteCrossConnectionPeeringList} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {ExpressRouteCrossConnectionPeeringList} [result]   - The deserialized result object if an error did not occur.
                               See {@link ExpressRouteCrossConnectionPeeringList} for
                               more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network - v13
  - uid: azure-arm-network - v13.0.0.ExpressRouteCrossConnectionPeerings.listNext_1
    name: 'listNext(string, ServiceCallback<ExpressRouteCrossConnectionPeeringList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets all peerings in a specified ExpressRouteCrossConnection.
    syntax:
      content: >-
        function listNext(nextPageLink: string, callback:
        ServiceCallback<ExpressRouteCrossConnectionPeeringList>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<azure-arm-network -
              v13.0.0.ExpressRouteCrossConnectionPeeringList>
          description: ''
      return:
        type:
          - >-
            Promise<azure-arm-network -
            v13.0.0.ExpressRouteCrossConnectionPeeringList>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {ExpressRouteCrossConnectionPeeringList} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {ExpressRouteCrossConnectionPeeringList} [result]   - The deserialized result object if an error did not occur.
                               See {@link ExpressRouteCrossConnectionPeeringList} for
                               more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network - v13
  - uid: >-
      azure-arm-network -
      v13.0.0.ExpressRouteCrossConnectionPeerings.listNextWithHttpOperationResponse
    name: 'listNextWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets all peerings in a specified ExpressRouteCrossConnection.
    syntax:
      content: >-
        function listNextWithHttpOperationResponse(nextPageLink: string,
        options?: Object)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-network -
            v13.0.0.ExpressRouteCrossConnectionPeeringList>>
        description: A promise is returned
    package: azure-arm-network - v13
  - uid: >-
      azure-arm-network -
      v13.0.0.ExpressRouteCrossConnectionPeerings.listWithHttpOperationResponse
    name: 'listWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets all peerings in a specified ExpressRouteCrossConnection.
    syntax:
      content: >-
        function listWithHttpOperationResponse(resourceGroupName: string,
        crossConnectionName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: crossConnectionName
          type:
            - string
          description: |
            The name of the
            ExpressRouteCrossConnection.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-network -
            v13.0.0.ExpressRouteCrossConnectionPeeringList>>
        description: A promise is returned
    package: azure-arm-network - v13
references:
  - uid: azure-arm-network - v13.0.0.ExpressRouteCrossConnectionPeering
    name: ExpressRouteCrossConnectionPeering
    spec.typeScript:
      - name: ExpressRouteCrossConnectionPeering
        fullName: ExpressRouteCrossConnectionPeering
        uid: azure-arm-network - v13.0.0.ExpressRouteCrossConnectionPeering
  - uid: Promise<azure-arm-network - v13.0.0.ExpressRouteCrossConnectionPeering>
    name: ExpressRouteCrossConnectionPeering>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ExpressRouteCrossConnectionPeering
        fullName: ExpressRouteCrossConnectionPeering
        uid: azure-arm-network - v13.0.0.ExpressRouteCrossConnectionPeering
      - name: '>'
        fullName: '>'
  - uid: >-
      ServiceCallback<azure-arm-network -
      v13.0.0.ExpressRouteCrossConnectionPeering>
    name: ExpressRouteCrossConnectionPeering>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ExpressRouteCrossConnectionPeering
        fullName: ExpressRouteCrossConnectionPeering
        uid: azure-arm-network - v13.0.0.ExpressRouteCrossConnectionPeering
      - name: '>'
        fullName: '>'
  - uid: >-
      Promise<HttpOperationResponse<azure-arm-network -
      v13.0.0.ExpressRouteCrossConnectionPeering>>
    name: ExpressRouteCrossConnectionPeering>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: ExpressRouteCrossConnectionPeering
        fullName: ExpressRouteCrossConnectionPeering
        uid: azure-arm-network - v13.0.0.ExpressRouteCrossConnectionPeering
      - name: '>>'
        fullName: '>>'
  - uid: >-
      Promise<azure-arm-network -
      v13.0.0.ExpressRouteCrossConnectionPeeringList>
    name: ExpressRouteCrossConnectionPeeringList>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ExpressRouteCrossConnectionPeeringList
        fullName: ExpressRouteCrossConnectionPeeringList
        uid: azure-arm-network - v13.0.0.ExpressRouteCrossConnectionPeeringList
      - name: '>'
        fullName: '>'
  - uid: >-
      ServiceCallback<azure-arm-network -
      v13.0.0.ExpressRouteCrossConnectionPeeringList>
    name: ExpressRouteCrossConnectionPeeringList>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ExpressRouteCrossConnectionPeeringList
        fullName: ExpressRouteCrossConnectionPeeringList
        uid: azure-arm-network - v13.0.0.ExpressRouteCrossConnectionPeeringList
      - name: '>'
        fullName: '>'
  - uid: >-
      Promise<HttpOperationResponse<azure-arm-network -
      v13.0.0.ExpressRouteCrossConnectionPeeringList>>
    name: ExpressRouteCrossConnectionPeeringList>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: ExpressRouteCrossConnectionPeeringList
        fullName: ExpressRouteCrossConnectionPeeringList
        uid: azure-arm-network - v13.0.0.ExpressRouteCrossConnectionPeeringList
      - name: '>>'
        fullName: '>>'
