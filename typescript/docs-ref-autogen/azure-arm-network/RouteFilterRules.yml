### YamlMime:UniversalReference
items:
  - uid: azure-arm-network.RouteFilterRules
    name: RouteFilterRules
    fullName: RouteFilterRules
    children:
      - azure-arm-network.RouteFilterRules.beginCreateOrUpdate
      - azure-arm-network.RouteFilterRules.beginCreateOrUpdate_2
      - azure-arm-network.RouteFilterRules.beginCreateOrUpdate_1
      - >-
        azure-arm-network.RouteFilterRules.beginCreateOrUpdateWithHttpOperationResponse
      - azure-arm-network.RouteFilterRules.beginDeleteMethod
      - azure-arm-network.RouteFilterRules.beginDeleteMethod_2
      - azure-arm-network.RouteFilterRules.beginDeleteMethod_1
      - >-
        azure-arm-network.RouteFilterRules.beginDeleteMethodWithHttpOperationResponse
      - azure-arm-network.RouteFilterRules.beginUpdate
      - azure-arm-network.RouteFilterRules.beginUpdate_2
      - azure-arm-network.RouteFilterRules.beginUpdate_1
      - azure-arm-network.RouteFilterRules.beginUpdateWithHttpOperationResponse
      - azure-arm-network.RouteFilterRules.createOrUpdate
      - azure-arm-network.RouteFilterRules.createOrUpdate_2
      - azure-arm-network.RouteFilterRules.createOrUpdate_1
      - >-
        azure-arm-network.RouteFilterRules.createOrUpdateWithHttpOperationResponse
      - azure-arm-network.RouteFilterRules.deleteMethod
      - azure-arm-network.RouteFilterRules.deleteMethod_2
      - azure-arm-network.RouteFilterRules.deleteMethod_1
      - azure-arm-network.RouteFilterRules.deleteMethodWithHttpOperationResponse
      - azure-arm-network.RouteFilterRules.get
      - azure-arm-network.RouteFilterRules.get_2
      - azure-arm-network.RouteFilterRules.get_1
      - azure-arm-network.RouteFilterRules.getWithHttpOperationResponse
      - azure-arm-network.RouteFilterRules.listByRouteFilter
      - azure-arm-network.RouteFilterRules.listByRouteFilter_2
      - azure-arm-network.RouteFilterRules.listByRouteFilter_1
      - azure-arm-network.RouteFilterRules.listByRouteFilterNext
      - azure-arm-network.RouteFilterRules.listByRouteFilterNext_2
      - azure-arm-network.RouteFilterRules.listByRouteFilterNext_1
      - >-
        azure-arm-network.RouteFilterRules.listByRouteFilterNextWithHttpOperationResponse
      - >-
        azure-arm-network.RouteFilterRules.listByRouteFilterWithHttpOperationResponse
      - azure-arm-network.RouteFilterRules.update
      - azure-arm-network.RouteFilterRules.update_2
      - azure-arm-network.RouteFilterRules.update_1
      - azure-arm-network.RouteFilterRules.updateWithHttpOperationResponse
    langs:
      - typeScript
    type: interface
    summary: ''
    package: azure-arm-network
  - uid: azure-arm-network.RouteFilterRules.beginCreateOrUpdate
    name: 'beginCreateOrUpdate(string, string, string, RouteFilterRule, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates or updates a route in the specified route filter.
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string, routeFilterName:
        string, ruleName: string, routeFilterRuleParameters: RouteFilterRule,
        options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: routeFilterName
          type:
            - string
          description: |
            The name of the route filter.
        - id: ruleName
          type:
            - string
          description: |
            The name of the route filter rule.
        - id: routeFilterRuleParameters
          type:
            - azure-arm-network.RouteFilterRule
          description: |
            Parameters supplied to the create
            or update route filter rule operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-network.RouteFilterRule>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {RouteFilterRule} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {RouteFilterRule} [result]   - The deserialized result object if an error did not occur.
                               See {@link RouteFilterRule} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network
  - uid: azure-arm-network.RouteFilterRules.beginCreateOrUpdate_2
    name: >-
      beginCreateOrUpdate(string, string, string, RouteFilterRule, Object,
      ServiceCallback<RouteFilterRule>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates or updates a route in the specified route filter.
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string, routeFilterName:
        string, ruleName: string, routeFilterRuleParameters: RouteFilterRule,
        options: Object, callback: ServiceCallback<RouteFilterRule>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: routeFilterName
          type:
            - string
          description: ''
        - id: ruleName
          type:
            - string
          description: ''
        - id: routeFilterRuleParameters
          type:
            - azure-arm-network.RouteFilterRule
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-network.RouteFilterRule>
          description: ''
      return:
        type:
          - Promise<azure-arm-network.RouteFilterRule>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {RouteFilterRule} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {RouteFilterRule} [result]   - The deserialized result object if an error did not occur.
                               See {@link RouteFilterRule} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network
  - uid: azure-arm-network.RouteFilterRules.beginCreateOrUpdate_1
    name: >-
      beginCreateOrUpdate(string, string, string, RouteFilterRule,
      ServiceCallback<RouteFilterRule>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates or updates a route in the specified route filter.
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string, routeFilterName:
        string, ruleName: string, routeFilterRuleParameters: RouteFilterRule,
        callback: ServiceCallback<RouteFilterRule>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: routeFilterName
          type:
            - string
          description: ''
        - id: ruleName
          type:
            - string
          description: ''
        - id: routeFilterRuleParameters
          type:
            - azure-arm-network.RouteFilterRule
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-network.RouteFilterRule>
          description: ''
      return:
        type:
          - Promise<azure-arm-network.RouteFilterRule>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {RouteFilterRule} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {RouteFilterRule} [result]   - The deserialized result object if an error did not occur.
                               See {@link RouteFilterRule} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network
  - uid: >-
      azure-arm-network.RouteFilterRules.beginCreateOrUpdateWithHttpOperationResponse
    name: >-
      beginCreateOrUpdateWithHttpOperationResponse(string, string, string,
      RouteFilterRule, Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates or updates a route in the specified route filter.
    syntax:
      content: >-
        function beginCreateOrUpdateWithHttpOperationResponse(resourceGroupName:
        string, routeFilterName: string, ruleName: string,
        routeFilterRuleParameters: RouteFilterRule, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: routeFilterName
          type:
            - string
          description: |
            The name of the route filter.
        - id: ruleName
          type:
            - string
          description: |
            The name of the route filter rule.
        - id: routeFilterRuleParameters
          type:
            - azure-arm-network.RouteFilterRule
          description: |
            Parameters supplied to the create
            or update route filter rule operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-arm-network.RouteFilterRule>>
        description: A promise is returned
    package: azure-arm-network
  - uid: azure-arm-network.RouteFilterRules.beginDeleteMethod
    name: 'beginDeleteMethod(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes the specified rule from a route filter.
    syntax:
      content: >-
        function beginDeleteMethod(resourceGroupName: string, routeFilterName:
        string, ruleName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: routeFilterName
          type:
            - string
          description: |
            The name of the route filter.
        - id: ruleName
          type:
            - string
          description: |
            The name of the rule.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network
  - uid: azure-arm-network.RouteFilterRules.beginDeleteMethod_2
    name: 'beginDeleteMethod(string, string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes the specified rule from a route filter.
    syntax:
      content: >-
        function beginDeleteMethod(resourceGroupName: string, routeFilterName:
        string, ruleName: string, options: Object, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: routeFilterName
          type:
            - string
          description: ''
        - id: ruleName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network
  - uid: azure-arm-network.RouteFilterRules.beginDeleteMethod_1
    name: 'beginDeleteMethod(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes the specified rule from a route filter.
    syntax:
      content: >-
        function beginDeleteMethod(resourceGroupName: string, routeFilterName:
        string, ruleName: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: routeFilterName
          type:
            - string
          description: ''
        - id: ruleName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network
  - uid: >-
      azure-arm-network.RouteFilterRules.beginDeleteMethodWithHttpOperationResponse
    name: 'beginDeleteMethodWithHttpOperationResponse(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes the specified rule from a route filter.
    syntax:
      content: >-
        function beginDeleteMethodWithHttpOperationResponse(resourceGroupName:
        string, routeFilterName: string, ruleName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: routeFilterName
          type:
            - string
          description: |
            The name of the route filter.
        - id: ruleName
          type:
            - string
          description: |
            The name of the rule.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
        description: A promise is returned
    package: azure-arm-network
  - uid: azure-arm-network.RouteFilterRules.beginUpdate
    name: 'beginUpdate(string, string, string, PatchRouteFilterRule, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates a route in the specified route filter.
    syntax:
      content: >-
        function beginUpdate(resourceGroupName: string, routeFilterName: string,
        ruleName: string, routeFilterRuleParameters: PatchRouteFilterRule,
        options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: routeFilterName
          type:
            - string
          description: |
            The name of the route filter.
        - id: ruleName
          type:
            - string
          description: |
            The name of the route filter rule.
        - id: routeFilterRuleParameters
          type:
            - azure-arm-network.PatchRouteFilterRule
          description: |
            Parameters supplied to the update
            route filter rule operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-network.RouteFilterRule>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {RouteFilterRule} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {RouteFilterRule} [result]   - The deserialized result object if an error did not occur.
                               See {@link RouteFilterRule} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network
  - uid: azure-arm-network.RouteFilterRules.beginUpdate_2
    name: >-
      beginUpdate(string, string, string, PatchRouteFilterRule, Object,
      ServiceCallback<RouteFilterRule>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates a route in the specified route filter.
    syntax:
      content: >-
        function beginUpdate(resourceGroupName: string, routeFilterName: string,
        ruleName: string, routeFilterRuleParameters: PatchRouteFilterRule,
        options: Object, callback: ServiceCallback<RouteFilterRule>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: routeFilterName
          type:
            - string
          description: ''
        - id: ruleName
          type:
            - string
          description: ''
        - id: routeFilterRuleParameters
          type:
            - azure-arm-network.PatchRouteFilterRule
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-network.RouteFilterRule>
          description: ''
      return:
        type:
          - Promise<azure-arm-network.RouteFilterRule>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {RouteFilterRule} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {RouteFilterRule} [result]   - The deserialized result object if an error did not occur.
                               See {@link RouteFilterRule} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network
  - uid: azure-arm-network.RouteFilterRules.beginUpdate_1
    name: >-
      beginUpdate(string, string, string, PatchRouteFilterRule,
      ServiceCallback<RouteFilterRule>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates a route in the specified route filter.
    syntax:
      content: >-
        function beginUpdate(resourceGroupName: string, routeFilterName: string,
        ruleName: string, routeFilterRuleParameters: PatchRouteFilterRule,
        callback: ServiceCallback<RouteFilterRule>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: routeFilterName
          type:
            - string
          description: ''
        - id: ruleName
          type:
            - string
          description: ''
        - id: routeFilterRuleParameters
          type:
            - azure-arm-network.PatchRouteFilterRule
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-network.RouteFilterRule>
          description: ''
      return:
        type:
          - Promise<azure-arm-network.RouteFilterRule>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {RouteFilterRule} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {RouteFilterRule} [result]   - The deserialized result object if an error did not occur.
                               See {@link RouteFilterRule} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network
  - uid: azure-arm-network.RouteFilterRules.beginUpdateWithHttpOperationResponse
    name: >-
      beginUpdateWithHttpOperationResponse(string, string, string,
      PatchRouteFilterRule, Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates a route in the specified route filter.
    syntax:
      content: >-
        function beginUpdateWithHttpOperationResponse(resourceGroupName: string,
        routeFilterName: string, ruleName: string, routeFilterRuleParameters:
        PatchRouteFilterRule, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: routeFilterName
          type:
            - string
          description: |
            The name of the route filter.
        - id: ruleName
          type:
            - string
          description: |
            The name of the route filter rule.
        - id: routeFilterRuleParameters
          type:
            - azure-arm-network.PatchRouteFilterRule
          description: |
            Parameters supplied to the update
            route filter rule operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-arm-network.RouteFilterRule>>
        description: A promise is returned
    package: azure-arm-network
  - uid: azure-arm-network.RouteFilterRules.createOrUpdate
    name: 'createOrUpdate(string, string, string, RouteFilterRule, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates or updates a route in the specified route filter.
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, routeFilterName:
        string, ruleName: string, routeFilterRuleParameters: RouteFilterRule,
        options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: routeFilterName
          type:
            - string
          description: |
            The name of the route filter.
        - id: ruleName
          type:
            - string
          description: |
            The name of the route filter rule.
        - id: routeFilterRuleParameters
          type:
            - azure-arm-network.RouteFilterRule
          description: |
            Parameters supplied to the create
            or update route filter rule operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-network.RouteFilterRule>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {RouteFilterRule} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {RouteFilterRule} [result]   - The deserialized result object if an error did not occur.
                               See {@link RouteFilterRule} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network
  - uid: azure-arm-network.RouteFilterRules.createOrUpdate_2
    name: >-
      createOrUpdate(string, string, string, RouteFilterRule, Object,
      ServiceCallback<RouteFilterRule>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates or updates a route in the specified route filter.
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, routeFilterName:
        string, ruleName: string, routeFilterRuleParameters: RouteFilterRule,
        options: Object, callback: ServiceCallback<RouteFilterRule>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: routeFilterName
          type:
            - string
          description: ''
        - id: ruleName
          type:
            - string
          description: ''
        - id: routeFilterRuleParameters
          type:
            - azure-arm-network.RouteFilterRule
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-network.RouteFilterRule>
          description: ''
      return:
        type:
          - Promise<azure-arm-network.RouteFilterRule>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {RouteFilterRule} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {RouteFilterRule} [result]   - The deserialized result object if an error did not occur.
                               See {@link RouteFilterRule} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network
  - uid: azure-arm-network.RouteFilterRules.createOrUpdate_1
    name: >-
      createOrUpdate(string, string, string, RouteFilterRule,
      ServiceCallback<RouteFilterRule>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates or updates a route in the specified route filter.
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, routeFilterName:
        string, ruleName: string, routeFilterRuleParameters: RouteFilterRule,
        callback: ServiceCallback<RouteFilterRule>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: routeFilterName
          type:
            - string
          description: ''
        - id: ruleName
          type:
            - string
          description: ''
        - id: routeFilterRuleParameters
          type:
            - azure-arm-network.RouteFilterRule
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-network.RouteFilterRule>
          description: ''
      return:
        type:
          - Promise<azure-arm-network.RouteFilterRule>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {RouteFilterRule} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {RouteFilterRule} [result]   - The deserialized result object if an error did not occur.
                               See {@link RouteFilterRule} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network
  - uid: azure-arm-network.RouteFilterRules.createOrUpdateWithHttpOperationResponse
    name: >-
      createOrUpdateWithHttpOperationResponse(string, string, string,
      RouteFilterRule, Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates or updates a route in the specified route filter.
    syntax:
      content: >-
        function createOrUpdateWithHttpOperationResponse(resourceGroupName:
        string, routeFilterName: string, ruleName: string,
        routeFilterRuleParameters: RouteFilterRule, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: routeFilterName
          type:
            - string
          description: |
            The name of the route filter.
        - id: ruleName
          type:
            - string
          description: |
            The name of the route filter rule.
        - id: routeFilterRuleParameters
          type:
            - azure-arm-network.RouteFilterRule
          description: |
            Parameters supplied to the create
            or update route filter rule operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-arm-network.RouteFilterRule>>
        description: A promise is returned
    package: azure-arm-network
  - uid: azure-arm-network.RouteFilterRules.deleteMethod
    name: 'deleteMethod(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes the specified rule from a route filter.
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, routeFilterName:
        string, ruleName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: routeFilterName
          type:
            - string
          description: |
            The name of the route filter.
        - id: ruleName
          type:
            - string
          description: |
            The name of the rule.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network
  - uid: azure-arm-network.RouteFilterRules.deleteMethod_2
    name: 'deleteMethod(string, string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes the specified rule from a route filter.
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, routeFilterName:
        string, ruleName: string, options: Object, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: routeFilterName
          type:
            - string
          description: ''
        - id: ruleName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network
  - uid: azure-arm-network.RouteFilterRules.deleteMethod_1
    name: 'deleteMethod(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes the specified rule from a route filter.
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, routeFilterName:
        string, ruleName: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: routeFilterName
          type:
            - string
          description: ''
        - id: ruleName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network
  - uid: azure-arm-network.RouteFilterRules.deleteMethodWithHttpOperationResponse
    name: 'deleteMethodWithHttpOperationResponse(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes the specified rule from a route filter.
    syntax:
      content: >-
        function deleteMethodWithHttpOperationResponse(resourceGroupName:
        string, routeFilterName: string, ruleName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: routeFilterName
          type:
            - string
          description: |
            The name of the route filter.
        - id: ruleName
          type:
            - string
          description: |
            The name of the rule.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
        description: A promise is returned
    package: azure-arm-network
  - uid: azure-arm-network.RouteFilterRules.get
    name: 'get(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the specified rule from a route filter.
    syntax:
      content: >-
        function get(resourceGroupName: string, routeFilterName: string,
        ruleName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: routeFilterName
          type:
            - string
          description: |
            The name of the route filter.
        - id: ruleName
          type:
            - string
          description: |
            The name of the rule.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-network.RouteFilterRule>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {RouteFilterRule} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {RouteFilterRule} [result]   - The deserialized result object if an error did not occur.
                               See {@link RouteFilterRule} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network
  - uid: azure-arm-network.RouteFilterRules.get_2
    name: 'get(string, string, string, Object, ServiceCallback<RouteFilterRule>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the specified rule from a route filter.
    syntax:
      content: >-
        function get(resourceGroupName: string, routeFilterName: string,
        ruleName: string, options: Object, callback:
        ServiceCallback<RouteFilterRule>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: routeFilterName
          type:
            - string
          description: ''
        - id: ruleName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-network.RouteFilterRule>
          description: ''
      return:
        type:
          - Promise<azure-arm-network.RouteFilterRule>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {RouteFilterRule} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {RouteFilterRule} [result]   - The deserialized result object if an error did not occur.
                               See {@link RouteFilterRule} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network
  - uid: azure-arm-network.RouteFilterRules.get_1
    name: 'get(string, string, string, ServiceCallback<RouteFilterRule>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the specified rule from a route filter.
    syntax:
      content: >-
        function get(resourceGroupName: string, routeFilterName: string,
        ruleName: string, callback: ServiceCallback<RouteFilterRule>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: routeFilterName
          type:
            - string
          description: ''
        - id: ruleName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-network.RouteFilterRule>
          description: ''
      return:
        type:
          - Promise<azure-arm-network.RouteFilterRule>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {RouteFilterRule} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {RouteFilterRule} [result]   - The deserialized result object if an error did not occur.
                               See {@link RouteFilterRule} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network
  - uid: azure-arm-network.RouteFilterRules.getWithHttpOperationResponse
    name: 'getWithHttpOperationResponse(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the specified rule from a route filter.
    syntax:
      content: >-
        function getWithHttpOperationResponse(resourceGroupName: string,
        routeFilterName: string, ruleName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: routeFilterName
          type:
            - string
          description: |
            The name of the route filter.
        - id: ruleName
          type:
            - string
          description: |
            The name of the rule.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-arm-network.RouteFilterRule>>
        description: A promise is returned
    package: azure-arm-network
  - uid: azure-arm-network.RouteFilterRules.listByRouteFilter
    name: 'listByRouteFilter(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets all RouteFilterRules in a route filter.
    syntax:
      content: >-
        function listByRouteFilter(resourceGroupName: string, routeFilterName:
        string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: routeFilterName
          type:
            - string
          description: |
            The name of the route filter.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-network.RouteFilterRuleListResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {RouteFilterRuleListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {RouteFilterRuleListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link RouteFilterRuleListResult} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network
  - uid: azure-arm-network.RouteFilterRules.listByRouteFilter_2
    name: >-
      listByRouteFilter(string, string, Object,
      ServiceCallback<RouteFilterRuleListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets all RouteFilterRules in a route filter.
    syntax:
      content: >-
        function listByRouteFilter(resourceGroupName: string, routeFilterName:
        string, options: Object, callback:
        ServiceCallback<RouteFilterRuleListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: routeFilterName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-network.RouteFilterRuleListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-network.RouteFilterRuleListResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {RouteFilterRuleListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {RouteFilterRuleListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link RouteFilterRuleListResult} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network
  - uid: azure-arm-network.RouteFilterRules.listByRouteFilter_1
    name: >-
      listByRouteFilter(string, string,
      ServiceCallback<RouteFilterRuleListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets all RouteFilterRules in a route filter.
    syntax:
      content: >-
        function listByRouteFilter(resourceGroupName: string, routeFilterName:
        string, callback: ServiceCallback<RouteFilterRuleListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: routeFilterName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-network.RouteFilterRuleListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-network.RouteFilterRuleListResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {RouteFilterRuleListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {RouteFilterRuleListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link RouteFilterRuleListResult} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network
  - uid: azure-arm-network.RouteFilterRules.listByRouteFilterNext
    name: 'listByRouteFilterNext(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets all RouteFilterRules in a route filter.
    syntax:
      content: 'function listByRouteFilterNext(nextPageLink: string, options?: Object)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-network.RouteFilterRuleListResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {RouteFilterRuleListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {RouteFilterRuleListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link RouteFilterRuleListResult} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network
  - uid: azure-arm-network.RouteFilterRules.listByRouteFilterNext_2
    name: >-
      listByRouteFilterNext(string, Object,
      ServiceCallback<RouteFilterRuleListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets all RouteFilterRules in a route filter.
    syntax:
      content: >-
        function listByRouteFilterNext(nextPageLink: string, options: Object,
        callback: ServiceCallback<RouteFilterRuleListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-network.RouteFilterRuleListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-network.RouteFilterRuleListResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {RouteFilterRuleListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {RouteFilterRuleListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link RouteFilterRuleListResult} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network
  - uid: azure-arm-network.RouteFilterRules.listByRouteFilterNext_1
    name: 'listByRouteFilterNext(string, ServiceCallback<RouteFilterRuleListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets all RouteFilterRules in a route filter.
    syntax:
      content: >-
        function listByRouteFilterNext(nextPageLink: string, callback:
        ServiceCallback<RouteFilterRuleListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-network.RouteFilterRuleListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-network.RouteFilterRuleListResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {RouteFilterRuleListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {RouteFilterRuleListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link RouteFilterRuleListResult} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network
  - uid: >-
      azure-arm-network.RouteFilterRules.listByRouteFilterNextWithHttpOperationResponse
    name: 'listByRouteFilterNextWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets all RouteFilterRules in a route filter.
    syntax:
      content: >-
        function listByRouteFilterNextWithHttpOperationResponse(nextPageLink:
        string, options?: Object)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-network.RouteFilterRuleListResult>>
        description: A promise is returned
    package: azure-arm-network
  - uid: >-
      azure-arm-network.RouteFilterRules.listByRouteFilterWithHttpOperationResponse
    name: 'listByRouteFilterWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets all RouteFilterRules in a route filter.
    syntax:
      content: >-
        function listByRouteFilterWithHttpOperationResponse(resourceGroupName:
        string, routeFilterName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: routeFilterName
          type:
            - string
          description: |
            The name of the route filter.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-network.RouteFilterRuleListResult>>
        description: A promise is returned
    package: azure-arm-network
  - uid: azure-arm-network.RouteFilterRules.update
    name: 'update(string, string, string, PatchRouteFilterRule, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates a route in the specified route filter.
    syntax:
      content: >-
        function update(resourceGroupName: string, routeFilterName: string,
        ruleName: string, routeFilterRuleParameters: PatchRouteFilterRule,
        options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: routeFilterName
          type:
            - string
          description: |
            The name of the route filter.
        - id: ruleName
          type:
            - string
          description: |
            The name of the route filter rule.
        - id: routeFilterRuleParameters
          type:
            - azure-arm-network.PatchRouteFilterRule
          description: |
            Parameters supplied to the update
            route filter rule operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-network.RouteFilterRule>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {RouteFilterRule} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {RouteFilterRule} [result]   - The deserialized result object if an error did not occur.
                               See {@link RouteFilterRule} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network
  - uid: azure-arm-network.RouteFilterRules.update_2
    name: >-
      update(string, string, string, PatchRouteFilterRule, Object,
      ServiceCallback<RouteFilterRule>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates a route in the specified route filter.
    syntax:
      content: >-
        function update(resourceGroupName: string, routeFilterName: string,
        ruleName: string, routeFilterRuleParameters: PatchRouteFilterRule,
        options: Object, callback: ServiceCallback<RouteFilterRule>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: routeFilterName
          type:
            - string
          description: ''
        - id: ruleName
          type:
            - string
          description: ''
        - id: routeFilterRuleParameters
          type:
            - azure-arm-network.PatchRouteFilterRule
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-network.RouteFilterRule>
          description: ''
      return:
        type:
          - Promise<azure-arm-network.RouteFilterRule>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {RouteFilterRule} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {RouteFilterRule} [result]   - The deserialized result object if an error did not occur.
                               See {@link RouteFilterRule} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network
  - uid: azure-arm-network.RouteFilterRules.update_1
    name: >-
      update(string, string, string, PatchRouteFilterRule,
      ServiceCallback<RouteFilterRule>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates a route in the specified route filter.
    syntax:
      content: >-
        function update(resourceGroupName: string, routeFilterName: string,
        ruleName: string, routeFilterRuleParameters: PatchRouteFilterRule,
        callback: ServiceCallback<RouteFilterRule>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: routeFilterName
          type:
            - string
          description: ''
        - id: ruleName
          type:
            - string
          description: ''
        - id: routeFilterRuleParameters
          type:
            - azure-arm-network.PatchRouteFilterRule
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-network.RouteFilterRule>
          description: ''
      return:
        type:
          - Promise<azure-arm-network.RouteFilterRule>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {RouteFilterRule} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {RouteFilterRule} [result]   - The deserialized result object if an error did not occur.
                               See {@link RouteFilterRule} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network
  - uid: azure-arm-network.RouteFilterRules.updateWithHttpOperationResponse
    name: >-
      updateWithHttpOperationResponse(string, string, string,
      PatchRouteFilterRule, Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates a route in the specified route filter.
    syntax:
      content: >-
        function updateWithHttpOperationResponse(resourceGroupName: string,
        routeFilterName: string, ruleName: string, routeFilterRuleParameters:
        PatchRouteFilterRule, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: routeFilterName
          type:
            - string
          description: |
            The name of the route filter.
        - id: ruleName
          type:
            - string
          description: |
            The name of the route filter rule.
        - id: routeFilterRuleParameters
          type:
            - azure-arm-network.PatchRouteFilterRule
          description: |
            Parameters supplied to the update
            route filter rule operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-arm-network.RouteFilterRule>>
        description: A promise is returned
    package: azure-arm-network
references:
  - uid: azure-arm-network.RouteFilterRule
    name: RouteFilterRule
    spec.typeScript:
      - name: RouteFilterRule
        fullName: RouteFilterRule
        uid: azure-arm-network.RouteFilterRule
  - uid: Promise<azure-arm-network.RouteFilterRule>
    name: RouteFilterRule>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: RouteFilterRule
        fullName: RouteFilterRule
        uid: azure-arm-network.RouteFilterRule
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-arm-network.RouteFilterRule>
    name: RouteFilterRule>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: RouteFilterRule
        fullName: RouteFilterRule
        uid: azure-arm-network.RouteFilterRule
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-arm-network.RouteFilterRule>>
    name: RouteFilterRule>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: RouteFilterRule
        fullName: RouteFilterRule
        uid: azure-arm-network.RouteFilterRule
      - name: '>>'
        fullName: '>>'
  - uid: azure-arm-network.PatchRouteFilterRule
    name: PatchRouteFilterRule
    spec.typeScript:
      - name: PatchRouteFilterRule
        fullName: PatchRouteFilterRule
        uid: azure-arm-network.PatchRouteFilterRule
  - uid: Promise<azure-arm-network.RouteFilterRuleListResult>
    name: RouteFilterRuleListResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: RouteFilterRuleListResult
        fullName: RouteFilterRuleListResult
        uid: azure-arm-network.RouteFilterRuleListResult
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-arm-network.RouteFilterRuleListResult>
    name: RouteFilterRuleListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: RouteFilterRuleListResult
        fullName: RouteFilterRuleListResult
        uid: azure-arm-network.RouteFilterRuleListResult
      - name: '>'
        fullName: '>'
  - uid: >-
      Promise<HttpOperationResponse<azure-arm-network.RouteFilterRuleListResult>>
    name: RouteFilterRuleListResult>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: RouteFilterRuleListResult
        fullName: RouteFilterRuleListResult
        uid: azure-arm-network.RouteFilterRuleListResult
      - name: '>>'
        fullName: '>>'
