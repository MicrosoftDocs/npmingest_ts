### YamlMime:UniversalReference
items:
  - uid: azure-arm-network - v13.0.0.RouteFilters
    name: RouteFilters
    fullName: RouteFilters
    children:
      - azure-arm-network - v13.0.0.RouteFilters.beginCreateOrUpdate
      - azure-arm-network - v13.0.0.RouteFilters.beginCreateOrUpdate_2
      - azure-arm-network - v13.0.0.RouteFilters.beginCreateOrUpdate_1
      - >-
        azure-arm-network -
        v13.0.0.RouteFilters.beginCreateOrUpdateWithHttpOperationResponse
      - azure-arm-network - v13.0.0.RouteFilters.beginDeleteMethod
      - azure-arm-network - v13.0.0.RouteFilters.beginDeleteMethod_2
      - azure-arm-network - v13.0.0.RouteFilters.beginDeleteMethod_1
      - >-
        azure-arm-network -
        v13.0.0.RouteFilters.beginDeleteMethodWithHttpOperationResponse
      - azure-arm-network - v13.0.0.RouteFilters.beginUpdate
      - azure-arm-network - v13.0.0.RouteFilters.beginUpdate_2
      - azure-arm-network - v13.0.0.RouteFilters.beginUpdate_1
      - >-
        azure-arm-network -
        v13.0.0.RouteFilters.beginUpdateWithHttpOperationResponse
      - azure-arm-network - v13.0.0.RouteFilters.createOrUpdate
      - azure-arm-network - v13.0.0.RouteFilters.createOrUpdate_2
      - azure-arm-network - v13.0.0.RouteFilters.createOrUpdate_1
      - >-
        azure-arm-network -
        v13.0.0.RouteFilters.createOrUpdateWithHttpOperationResponse
      - azure-arm-network - v13.0.0.RouteFilters.deleteMethod
      - azure-arm-network - v13.0.0.RouteFilters.deleteMethod_2
      - azure-arm-network - v13.0.0.RouteFilters.deleteMethod_1
      - >-
        azure-arm-network -
        v13.0.0.RouteFilters.deleteMethodWithHttpOperationResponse
      - azure-arm-network - v13.0.0.RouteFilters.get
      - azure-arm-network - v13.0.0.RouteFilters.get_2
      - azure-arm-network - v13.0.0.RouteFilters.get_1
      - azure-arm-network - v13.0.0.RouteFilters.getWithHttpOperationResponse
      - azure-arm-network - v13.0.0.RouteFilters.list
      - azure-arm-network - v13.0.0.RouteFilters.list_2
      - azure-arm-network - v13.0.0.RouteFilters.list_1
      - azure-arm-network - v13.0.0.RouteFilters.listByResourceGroup
      - azure-arm-network - v13.0.0.RouteFilters.listByResourceGroup_2
      - azure-arm-network - v13.0.0.RouteFilters.listByResourceGroup_1
      - azure-arm-network - v13.0.0.RouteFilters.listByResourceGroupNext
      - azure-arm-network - v13.0.0.RouteFilters.listByResourceGroupNext_2
      - azure-arm-network - v13.0.0.RouteFilters.listByResourceGroupNext_1
      - >-
        azure-arm-network -
        v13.0.0.RouteFilters.listByResourceGroupNextWithHttpOperationResponse
      - >-
        azure-arm-network -
        v13.0.0.RouteFilters.listByResourceGroupWithHttpOperationResponse
      - azure-arm-network - v13.0.0.RouteFilters.listNext
      - azure-arm-network - v13.0.0.RouteFilters.listNext_2
      - azure-arm-network - v13.0.0.RouteFilters.listNext_1
      - >-
        azure-arm-network -
        v13.0.0.RouteFilters.listNextWithHttpOperationResponse
      - azure-arm-network - v13.0.0.RouteFilters.listWithHttpOperationResponse
      - azure-arm-network - v13.0.0.RouteFilters.update
      - azure-arm-network - v13.0.0.RouteFilters.update_2
      - azure-arm-network - v13.0.0.RouteFilters.update_1
      - azure-arm-network - v13.0.0.RouteFilters.updateWithHttpOperationResponse
    langs:
      - typeScript
    type: interface
    summary: ''
    package: azure-arm-network - v13
  - uid: azure-arm-network - v13.0.0.RouteFilters.beginCreateOrUpdate
    name: 'beginCreateOrUpdate(string, string, RouteFilter, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates or updates a route filter in a specified resource group.
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string, routeFilterName:
        string, routeFilterParameters: RouteFilter, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: routeFilterName
          type:
            - string
          description: |
            The name of the route filter.
        - id: routeFilterParameters
          type:
            - azure-arm-network - v13.0.0.RouteFilter
          description: |
            Parameters supplied to the create or
            update route filter operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-network - v13.0.0.RouteFilter>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {RouteFilter} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {RouteFilter} [result]   - The deserialized result object if an error did not occur.
                               See {@link RouteFilter} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network - v13
  - uid: azure-arm-network - v13.0.0.RouteFilters.beginCreateOrUpdate_2
    name: >-
      beginCreateOrUpdate(string, string, RouteFilter, Object,
      ServiceCallback<RouteFilter>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates or updates a route filter in a specified resource group.
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string, routeFilterName:
        string, routeFilterParameters: RouteFilter, options: Object, callback:
        ServiceCallback<RouteFilter>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: routeFilterName
          type:
            - string
          description: ''
        - id: routeFilterParameters
          type:
            - azure-arm-network - v13.0.0.RouteFilter
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-network - v13.0.0.RouteFilter>
          description: ''
      return:
        type:
          - Promise<azure-arm-network - v13.0.0.RouteFilter>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {RouteFilter} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {RouteFilter} [result]   - The deserialized result object if an error did not occur.
                               See {@link RouteFilter} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network - v13
  - uid: azure-arm-network - v13.0.0.RouteFilters.beginCreateOrUpdate_1
    name: >-
      beginCreateOrUpdate(string, string, RouteFilter,
      ServiceCallback<RouteFilter>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates or updates a route filter in a specified resource group.
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string, routeFilterName:
        string, routeFilterParameters: RouteFilter, callback:
        ServiceCallback<RouteFilter>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: routeFilterName
          type:
            - string
          description: ''
        - id: routeFilterParameters
          type:
            - azure-arm-network - v13.0.0.RouteFilter
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-network - v13.0.0.RouteFilter>
          description: ''
      return:
        type:
          - Promise<azure-arm-network - v13.0.0.RouteFilter>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {RouteFilter} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {RouteFilter} [result]   - The deserialized result object if an error did not occur.
                               See {@link RouteFilter} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network - v13
  - uid: >-
      azure-arm-network -
      v13.0.0.RouteFilters.beginCreateOrUpdateWithHttpOperationResponse
    name: >-
      beginCreateOrUpdateWithHttpOperationResponse(string, string, RouteFilter,
      Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates or updates a route filter in a specified resource group.
    syntax:
      content: >-
        function beginCreateOrUpdateWithHttpOperationResponse(resourceGroupName:
        string, routeFilterName: string, routeFilterParameters: RouteFilter,
        options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: routeFilterName
          type:
            - string
          description: |
            The name of the route filter.
        - id: routeFilterParameters
          type:
            - azure-arm-network - v13.0.0.RouteFilter
          description: |
            Parameters supplied to the create or
            update route filter operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-network -
            v13.0.0.RouteFilter>>
        description: A promise is returned
    package: azure-arm-network - v13
  - uid: azure-arm-network - v13.0.0.RouteFilters.beginDeleteMethod
    name: 'beginDeleteMethod(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes the specified route filter.
    syntax:
      content: >-
        function beginDeleteMethod(resourceGroupName: string, routeFilterName:
        string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: routeFilterName
          type:
            - string
          description: |
            The name of the route filter.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network - v13
  - uid: azure-arm-network - v13.0.0.RouteFilters.beginDeleteMethod_2
    name: 'beginDeleteMethod(string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes the specified route filter.
    syntax:
      content: >-
        function beginDeleteMethod(resourceGroupName: string, routeFilterName:
        string, options: Object, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: routeFilterName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network - v13
  - uid: azure-arm-network - v13.0.0.RouteFilters.beginDeleteMethod_1
    name: 'beginDeleteMethod(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes the specified route filter.
    syntax:
      content: >-
        function beginDeleteMethod(resourceGroupName: string, routeFilterName:
        string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: routeFilterName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network - v13
  - uid: >-
      azure-arm-network -
      v13.0.0.RouteFilters.beginDeleteMethodWithHttpOperationResponse
    name: 'beginDeleteMethodWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes the specified route filter.
    syntax:
      content: >-
        function beginDeleteMethodWithHttpOperationResponse(resourceGroupName:
        string, routeFilterName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: routeFilterName
          type:
            - string
          description: |
            The name of the route filter.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
        description: A promise is returned
    package: azure-arm-network - v13
  - uid: azure-arm-network - v13.0.0.RouteFilters.beginUpdate
    name: 'beginUpdate(string, string, PatchRouteFilter, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates a route filter in a specified resource group.
    syntax:
      content: >-
        function beginUpdate(resourceGroupName: string, routeFilterName: string,
        routeFilterParameters: PatchRouteFilter, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: routeFilterName
          type:
            - string
          description: |
            The name of the route filter.
        - id: routeFilterParameters
          type:
            - azure-arm-network - v13.0.0.PatchRouteFilter
          description: |
            Parameters supplied to the update
            route filter operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-network - v13.0.0.RouteFilter>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {RouteFilter} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {RouteFilter} [result]   - The deserialized result object if an error did not occur.
                               See {@link RouteFilter} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network - v13
  - uid: azure-arm-network - v13.0.0.RouteFilters.beginUpdate_2
    name: >-
      beginUpdate(string, string, PatchRouteFilter, Object,
      ServiceCallback<RouteFilter>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates a route filter in a specified resource group.
    syntax:
      content: >-
        function beginUpdate(resourceGroupName: string, routeFilterName: string,
        routeFilterParameters: PatchRouteFilter, options: Object, callback:
        ServiceCallback<RouteFilter>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: routeFilterName
          type:
            - string
          description: ''
        - id: routeFilterParameters
          type:
            - azure-arm-network - v13.0.0.PatchRouteFilter
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-network - v13.0.0.RouteFilter>
          description: ''
      return:
        type:
          - Promise<azure-arm-network - v13.0.0.RouteFilter>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {RouteFilter} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {RouteFilter} [result]   - The deserialized result object if an error did not occur.
                               See {@link RouteFilter} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network - v13
  - uid: azure-arm-network - v13.0.0.RouteFilters.beginUpdate_1
    name: >-
      beginUpdate(string, string, PatchRouteFilter,
      ServiceCallback<RouteFilter>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates a route filter in a specified resource group.
    syntax:
      content: >-
        function beginUpdate(resourceGroupName: string, routeFilterName: string,
        routeFilterParameters: PatchRouteFilter, callback:
        ServiceCallback<RouteFilter>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: routeFilterName
          type:
            - string
          description: ''
        - id: routeFilterParameters
          type:
            - azure-arm-network - v13.0.0.PatchRouteFilter
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-network - v13.0.0.RouteFilter>
          description: ''
      return:
        type:
          - Promise<azure-arm-network - v13.0.0.RouteFilter>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {RouteFilter} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {RouteFilter} [result]   - The deserialized result object if an error did not occur.
                               See {@link RouteFilter} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network - v13
  - uid: >-
      azure-arm-network -
      v13.0.0.RouteFilters.beginUpdateWithHttpOperationResponse
    name: >-
      beginUpdateWithHttpOperationResponse(string, string, PatchRouteFilter,
      Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates a route filter in a specified resource group.
    syntax:
      content: >-
        function beginUpdateWithHttpOperationResponse(resourceGroupName: string,
        routeFilterName: string, routeFilterParameters: PatchRouteFilter,
        options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: routeFilterName
          type:
            - string
          description: |
            The name of the route filter.
        - id: routeFilterParameters
          type:
            - azure-arm-network - v13.0.0.PatchRouteFilter
          description: |
            Parameters supplied to the update
            route filter operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-network -
            v13.0.0.RouteFilter>>
        description: A promise is returned
    package: azure-arm-network - v13
  - uid: azure-arm-network - v13.0.0.RouteFilters.createOrUpdate
    name: 'createOrUpdate(string, string, RouteFilter, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates or updates a route filter in a specified resource group.
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, routeFilterName:
        string, routeFilterParameters: RouteFilter, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: routeFilterName
          type:
            - string
          description: |
            The name of the route filter.
        - id: routeFilterParameters
          type:
            - azure-arm-network - v13.0.0.RouteFilter
          description: |
            Parameters supplied to the create or
            update route filter operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-network - v13.0.0.RouteFilter>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {RouteFilter} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {RouteFilter} [result]   - The deserialized result object if an error did not occur.
                               See {@link RouteFilter} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network - v13
  - uid: azure-arm-network - v13.0.0.RouteFilters.createOrUpdate_2
    name: >-
      createOrUpdate(string, string, RouteFilter, Object,
      ServiceCallback<RouteFilter>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates or updates a route filter in a specified resource group.
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, routeFilterName:
        string, routeFilterParameters: RouteFilter, options: Object, callback:
        ServiceCallback<RouteFilter>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: routeFilterName
          type:
            - string
          description: ''
        - id: routeFilterParameters
          type:
            - azure-arm-network - v13.0.0.RouteFilter
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-network - v13.0.0.RouteFilter>
          description: ''
      return:
        type:
          - Promise<azure-arm-network - v13.0.0.RouteFilter>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {RouteFilter} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {RouteFilter} [result]   - The deserialized result object if an error did not occur.
                               See {@link RouteFilter} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network - v13
  - uid: azure-arm-network - v13.0.0.RouteFilters.createOrUpdate_1
    name: 'createOrUpdate(string, string, RouteFilter, ServiceCallback<RouteFilter>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates or updates a route filter in a specified resource group.
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, routeFilterName:
        string, routeFilterParameters: RouteFilter, callback:
        ServiceCallback<RouteFilter>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: routeFilterName
          type:
            - string
          description: ''
        - id: routeFilterParameters
          type:
            - azure-arm-network - v13.0.0.RouteFilter
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-network - v13.0.0.RouteFilter>
          description: ''
      return:
        type:
          - Promise<azure-arm-network - v13.0.0.RouteFilter>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {RouteFilter} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {RouteFilter} [result]   - The deserialized result object if an error did not occur.
                               See {@link RouteFilter} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network - v13
  - uid: >-
      azure-arm-network -
      v13.0.0.RouteFilters.createOrUpdateWithHttpOperationResponse
    name: >-
      createOrUpdateWithHttpOperationResponse(string, string, RouteFilter,
      Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates or updates a route filter in a specified resource group.
    syntax:
      content: >-
        function createOrUpdateWithHttpOperationResponse(resourceGroupName:
        string, routeFilterName: string, routeFilterParameters: RouteFilter,
        options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: routeFilterName
          type:
            - string
          description: |
            The name of the route filter.
        - id: routeFilterParameters
          type:
            - azure-arm-network - v13.0.0.RouteFilter
          description: |
            Parameters supplied to the create or
            update route filter operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-network -
            v13.0.0.RouteFilter>>
        description: A promise is returned
    package: azure-arm-network - v13
  - uid: azure-arm-network - v13.0.0.RouteFilters.deleteMethod
    name: 'deleteMethod(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes the specified route filter.
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, routeFilterName:
        string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: routeFilterName
          type:
            - string
          description: |
            The name of the route filter.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network - v13
  - uid: azure-arm-network - v13.0.0.RouteFilters.deleteMethod_2
    name: 'deleteMethod(string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes the specified route filter.
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, routeFilterName:
        string, options: Object, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: routeFilterName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network - v13
  - uid: azure-arm-network - v13.0.0.RouteFilters.deleteMethod_1
    name: 'deleteMethod(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes the specified route filter.
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, routeFilterName:
        string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: routeFilterName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network - v13
  - uid: >-
      azure-arm-network -
      v13.0.0.RouteFilters.deleteMethodWithHttpOperationResponse
    name: 'deleteMethodWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes the specified route filter.
    syntax:
      content: >-
        function deleteMethodWithHttpOperationResponse(resourceGroupName:
        string, routeFilterName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: routeFilterName
          type:
            - string
          description: |
            The name of the route filter.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
        description: A promise is returned
    package: azure-arm-network - v13
  - uid: azure-arm-network - v13.0.0.RouteFilters.get
    name: 'get(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the specified route filter.
    syntax:
      content: >-
        function get(resourceGroupName: string, routeFilterName: string,
        options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: routeFilterName
          type:
            - string
          description: |
            The name of the route filter.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-network - v13.0.0.RouteFilter>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {RouteFilter} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {RouteFilter} [result]   - The deserialized result object if an error did not occur.
                               See {@link RouteFilter} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network - v13
  - uid: azure-arm-network - v13.0.0.RouteFilters.get_2
    name: 'get(string, string, Object, ServiceCallback<RouteFilter>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the specified route filter.
    syntax:
      content: >-
        function get(resourceGroupName: string, routeFilterName: string,
        options: Object, callback: ServiceCallback<RouteFilter>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: routeFilterName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-network - v13.0.0.RouteFilter>
          description: ''
      return:
        type:
          - Promise<azure-arm-network - v13.0.0.RouteFilter>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {RouteFilter} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {RouteFilter} [result]   - The deserialized result object if an error did not occur.
                               See {@link RouteFilter} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network - v13
  - uid: azure-arm-network - v13.0.0.RouteFilters.get_1
    name: 'get(string, string, ServiceCallback<RouteFilter>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the specified route filter.
    syntax:
      content: >-
        function get(resourceGroupName: string, routeFilterName: string,
        callback: ServiceCallback<RouteFilter>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: routeFilterName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-network - v13.0.0.RouteFilter>
          description: ''
      return:
        type:
          - Promise<azure-arm-network - v13.0.0.RouteFilter>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {RouteFilter} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {RouteFilter} [result]   - The deserialized result object if an error did not occur.
                               See {@link RouteFilter} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network - v13
  - uid: azure-arm-network - v13.0.0.RouteFilters.getWithHttpOperationResponse
    name: 'getWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the specified route filter.
    syntax:
      content: >-
        function getWithHttpOperationResponse(resourceGroupName: string,
        routeFilterName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: routeFilterName
          type:
            - string
          description: |
            The name of the route filter.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-network -
            v13.0.0.RouteFilter>>
        description: A promise is returned
    package: azure-arm-network - v13
  - uid: azure-arm-network - v13.0.0.RouteFilters.list
    name: list(Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets all route filters in a subscription.
    syntax:
      content: 'function list(options?: Object)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-network - v13.0.0.RouteFilterListResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {RouteFilterListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {RouteFilterListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link RouteFilterListResult} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network - v13
  - uid: azure-arm-network - v13.0.0.RouteFilters.list_2
    name: 'list(Object, ServiceCallback<RouteFilterListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets all route filters in a subscription.
    syntax:
      content: >-
        function list(options: Object, callback:
        ServiceCallback<RouteFilterListResult>)
      parameters:
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-network - v13.0.0.RouteFilterListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-network - v13.0.0.RouteFilterListResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {RouteFilterListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {RouteFilterListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link RouteFilterListResult} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network - v13
  - uid: azure-arm-network - v13.0.0.RouteFilters.list_1
    name: list(ServiceCallback<RouteFilterListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets all route filters in a subscription.
    syntax:
      content: 'function list(callback: ServiceCallback<RouteFilterListResult>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<azure-arm-network - v13.0.0.RouteFilterListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-network - v13.0.0.RouteFilterListResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {RouteFilterListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {RouteFilterListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link RouteFilterListResult} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network - v13
  - uid: azure-arm-network - v13.0.0.RouteFilters.listByResourceGroup
    name: 'listByResourceGroup(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets all route filters in a resource group.
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options?:
        Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-network - v13.0.0.RouteFilterListResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {RouteFilterListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {RouteFilterListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link RouteFilterListResult} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network - v13
  - uid: azure-arm-network - v13.0.0.RouteFilters.listByResourceGroup_2
    name: >-
      listByResourceGroup(string, Object,
      ServiceCallback<RouteFilterListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets all route filters in a resource group.
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options: Object,
        callback: ServiceCallback<RouteFilterListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-network - v13.0.0.RouteFilterListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-network - v13.0.0.RouteFilterListResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {RouteFilterListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {RouteFilterListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link RouteFilterListResult} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network - v13
  - uid: azure-arm-network - v13.0.0.RouteFilters.listByResourceGroup_1
    name: 'listByResourceGroup(string, ServiceCallback<RouteFilterListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets all route filters in a resource group.
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, callback:
        ServiceCallback<RouteFilterListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-network - v13.0.0.RouteFilterListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-network - v13.0.0.RouteFilterListResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {RouteFilterListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {RouteFilterListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link RouteFilterListResult} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network - v13
  - uid: azure-arm-network - v13.0.0.RouteFilters.listByResourceGroupNext
    name: 'listByResourceGroupNext(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets all route filters in a resource group.
    syntax:
      content: 'function listByResourceGroupNext(nextPageLink: string, options?: Object)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-network - v13.0.0.RouteFilterListResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {RouteFilterListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {RouteFilterListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link RouteFilterListResult} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network - v13
  - uid: azure-arm-network - v13.0.0.RouteFilters.listByResourceGroupNext_2
    name: >-
      listByResourceGroupNext(string, Object,
      ServiceCallback<RouteFilterListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets all route filters in a resource group.
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, options: Object,
        callback: ServiceCallback<RouteFilterListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-network - v13.0.0.RouteFilterListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-network - v13.0.0.RouteFilterListResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {RouteFilterListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {RouteFilterListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link RouteFilterListResult} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network - v13
  - uid: azure-arm-network - v13.0.0.RouteFilters.listByResourceGroupNext_1
    name: 'listByResourceGroupNext(string, ServiceCallback<RouteFilterListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets all route filters in a resource group.
    syntax:
      content: >-
        function listByResourceGroupNext(nextPageLink: string, callback:
        ServiceCallback<RouteFilterListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-network - v13.0.0.RouteFilterListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-network - v13.0.0.RouteFilterListResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {RouteFilterListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {RouteFilterListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link RouteFilterListResult} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network - v13
  - uid: >-
      azure-arm-network -
      v13.0.0.RouteFilters.listByResourceGroupNextWithHttpOperationResponse
    name: 'listByResourceGroupNextWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets all route filters in a resource group.
    syntax:
      content: >-
        function listByResourceGroupNextWithHttpOperationResponse(nextPageLink:
        string, options?: Object)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-network -
            v13.0.0.RouteFilterListResult>>
        description: A promise is returned
    package: azure-arm-network - v13
  - uid: >-
      azure-arm-network -
      v13.0.0.RouteFilters.listByResourceGroupWithHttpOperationResponse
    name: 'listByResourceGroupWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets all route filters in a resource group.
    syntax:
      content: >-
        function listByResourceGroupWithHttpOperationResponse(resourceGroupName:
        string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-network -
            v13.0.0.RouteFilterListResult>>
        description: A promise is returned
    package: azure-arm-network - v13
  - uid: azure-arm-network - v13.0.0.RouteFilters.listNext
    name: 'listNext(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets all route filters in a subscription.
    syntax:
      content: 'function listNext(nextPageLink: string, options?: Object)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-network - v13.0.0.RouteFilterListResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {RouteFilterListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {RouteFilterListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link RouteFilterListResult} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network - v13
  - uid: azure-arm-network - v13.0.0.RouteFilters.listNext_2
    name: 'listNext(string, Object, ServiceCallback<RouteFilterListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets all route filters in a subscription.
    syntax:
      content: >-
        function listNext(nextPageLink: string, options: Object, callback:
        ServiceCallback<RouteFilterListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-network - v13.0.0.RouteFilterListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-network - v13.0.0.RouteFilterListResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {RouteFilterListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {RouteFilterListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link RouteFilterListResult} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network - v13
  - uid: azure-arm-network - v13.0.0.RouteFilters.listNext_1
    name: 'listNext(string, ServiceCallback<RouteFilterListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets all route filters in a subscription.
    syntax:
      content: >-
        function listNext(nextPageLink: string, callback:
        ServiceCallback<RouteFilterListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-network - v13.0.0.RouteFilterListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-network - v13.0.0.RouteFilterListResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {RouteFilterListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {RouteFilterListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link RouteFilterListResult} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network - v13
  - uid: azure-arm-network - v13.0.0.RouteFilters.listNextWithHttpOperationResponse
    name: 'listNextWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets all route filters in a subscription.
    syntax:
      content: >-
        function listNextWithHttpOperationResponse(nextPageLink: string,
        options?: Object)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-network -
            v13.0.0.RouteFilterListResult>>
        description: A promise is returned
    package: azure-arm-network - v13
  - uid: azure-arm-network - v13.0.0.RouteFilters.listWithHttpOperationResponse
    name: listWithHttpOperationResponse(Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets all route filters in a subscription.
    syntax:
      content: 'function listWithHttpOperationResponse(options?: Object)'
      parameters:
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-network -
            v13.0.0.RouteFilterListResult>>
        description: A promise is returned
    package: azure-arm-network - v13
  - uid: azure-arm-network - v13.0.0.RouteFilters.update
    name: 'update(string, string, PatchRouteFilter, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates a route filter in a specified resource group.
    syntax:
      content: >-
        function update(resourceGroupName: string, routeFilterName: string,
        routeFilterParameters: PatchRouteFilter, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: routeFilterName
          type:
            - string
          description: |
            The name of the route filter.
        - id: routeFilterParameters
          type:
            - azure-arm-network - v13.0.0.PatchRouteFilter
          description: |
            Parameters supplied to the update
            route filter operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-network - v13.0.0.RouteFilter>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {RouteFilter} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {RouteFilter} [result]   - The deserialized result object if an error did not occur.
                               See {@link RouteFilter} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network - v13
  - uid: azure-arm-network - v13.0.0.RouteFilters.update_2
    name: >-
      update(string, string, PatchRouteFilter, Object,
      ServiceCallback<RouteFilter>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates a route filter in a specified resource group.
    syntax:
      content: >-
        function update(resourceGroupName: string, routeFilterName: string,
        routeFilterParameters: PatchRouteFilter, options: Object, callback:
        ServiceCallback<RouteFilter>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: routeFilterName
          type:
            - string
          description: ''
        - id: routeFilterParameters
          type:
            - azure-arm-network - v13.0.0.PatchRouteFilter
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-network - v13.0.0.RouteFilter>
          description: ''
      return:
        type:
          - Promise<azure-arm-network - v13.0.0.RouteFilter>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {RouteFilter} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {RouteFilter} [result]   - The deserialized result object if an error did not occur.
                               See {@link RouteFilter} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network - v13
  - uid: azure-arm-network - v13.0.0.RouteFilters.update_1
    name: 'update(string, string, PatchRouteFilter, ServiceCallback<RouteFilter>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates a route filter in a specified resource group.
    syntax:
      content: >-
        function update(resourceGroupName: string, routeFilterName: string,
        routeFilterParameters: PatchRouteFilter, callback:
        ServiceCallback<RouteFilter>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: routeFilterName
          type:
            - string
          description: ''
        - id: routeFilterParameters
          type:
            - azure-arm-network - v13.0.0.PatchRouteFilter
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-network - v13.0.0.RouteFilter>
          description: ''
      return:
        type:
          - Promise<azure-arm-network - v13.0.0.RouteFilter>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {RouteFilter} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {RouteFilter} [result]   - The deserialized result object if an error did not occur.
                               See {@link RouteFilter} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network - v13
  - uid: azure-arm-network - v13.0.0.RouteFilters.updateWithHttpOperationResponse
    name: 'updateWithHttpOperationResponse(string, string, PatchRouteFilter, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates a route filter in a specified resource group.
    syntax:
      content: >-
        function updateWithHttpOperationResponse(resourceGroupName: string,
        routeFilterName: string, routeFilterParameters: PatchRouteFilter,
        options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: routeFilterName
          type:
            - string
          description: |
            The name of the route filter.
        - id: routeFilterParameters
          type:
            - azure-arm-network - v13.0.0.PatchRouteFilter
          description: |
            Parameters supplied to the update
            route filter operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-network -
            v13.0.0.RouteFilter>>
        description: A promise is returned
    package: azure-arm-network - v13
references:
  - uid: azure-arm-network - v13.0.0.RouteFilter
    name: RouteFilter
    spec.typeScript:
      - name: RouteFilter
        fullName: RouteFilter
        uid: azure-arm-network - v13.0.0.RouteFilter
  - uid: Promise<azure-arm-network - v13.0.0.RouteFilter>
    name: RouteFilter>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: RouteFilter
        fullName: RouteFilter
        uid: azure-arm-network - v13.0.0.RouteFilter
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-arm-network - v13.0.0.RouteFilter>
    name: RouteFilter>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: RouteFilter
        fullName: RouteFilter
        uid: azure-arm-network - v13.0.0.RouteFilter
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-arm-network - v13.0.0.RouteFilter>>
    name: RouteFilter>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: RouteFilter
        fullName: RouteFilter
        uid: azure-arm-network - v13.0.0.RouteFilter
      - name: '>>'
        fullName: '>>'
  - uid: azure-arm-network - v13.0.0.PatchRouteFilter
    name: PatchRouteFilter
    spec.typeScript:
      - name: PatchRouteFilter
        fullName: PatchRouteFilter
        uid: azure-arm-network - v13.0.0.PatchRouteFilter
  - uid: Promise<azure-arm-network - v13.0.0.RouteFilterListResult>
    name: RouteFilterListResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: RouteFilterListResult
        fullName: RouteFilterListResult
        uid: azure-arm-network - v13.0.0.RouteFilterListResult
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-arm-network - v13.0.0.RouteFilterListResult>
    name: RouteFilterListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: RouteFilterListResult
        fullName: RouteFilterListResult
        uid: azure-arm-network - v13.0.0.RouteFilterListResult
      - name: '>'
        fullName: '>'
  - uid: >-
      Promise<HttpOperationResponse<azure-arm-network -
      v13.0.0.RouteFilterListResult>>
    name: RouteFilterListResult>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: RouteFilterListResult
        fullName: RouteFilterListResult
        uid: azure-arm-network - v13.0.0.RouteFilterListResult
      - name: '>>'
        fullName: '>>'
