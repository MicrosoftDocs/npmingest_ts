### YamlMime:UniversalReference
items:
  - uid: azure-arm-network.ListP2SVpnServerConfigurationsResult
    name: ListP2SVpnServerConfigurationsResult
    fullName: ListP2SVpnServerConfigurationsResult
    children:
      - azure-arm-network.ListP2SVpnServerConfigurationsResult.Array
      - azure-arm-network.ListP2SVpnServerConfigurationsResult.concat
      - azure-arm-network.ListP2SVpnServerConfigurationsResult.concat_1
      - azure-arm-network.ListP2SVpnServerConfigurationsResult.copyWithin
      - azure-arm-network.ListP2SVpnServerConfigurationsResult.entries
      - azure-arm-network.ListP2SVpnServerConfigurationsResult.every
      - azure-arm-network.ListP2SVpnServerConfigurationsResult.fill
      - azure-arm-network.ListP2SVpnServerConfigurationsResult.filter_1
      - azure-arm-network.ListP2SVpnServerConfigurationsResult.filter
      - azure-arm-network.ListP2SVpnServerConfigurationsResult.find
      - azure-arm-network.ListP2SVpnServerConfigurationsResult.find_1
      - azure-arm-network.ListP2SVpnServerConfigurationsResult.findIndex
      - azure-arm-network.ListP2SVpnServerConfigurationsResult.forEach
      - azure-arm-network.ListP2SVpnServerConfigurationsResult.includes
      - azure-arm-network.ListP2SVpnServerConfigurationsResult.indexOf
      - azure-arm-network.ListP2SVpnServerConfigurationsResult.join
      - azure-arm-network.ListP2SVpnServerConfigurationsResult.keys
      - azure-arm-network.ListP2SVpnServerConfigurationsResult.lastIndexOf
      - azure-arm-network.ListP2SVpnServerConfigurationsResult.length
      - azure-arm-network.ListP2SVpnServerConfigurationsResult.map
      - azure-arm-network.ListP2SVpnServerConfigurationsResult.nextLink
      - azure-arm-network.ListP2SVpnServerConfigurationsResult.pop
      - azure-arm-network.ListP2SVpnServerConfigurationsResult.push
      - azure-arm-network.ListP2SVpnServerConfigurationsResult.reduce
      - azure-arm-network.ListP2SVpnServerConfigurationsResult.reduce_1
      - azure-arm-network.ListP2SVpnServerConfigurationsResult.reduce_2
      - azure-arm-network.ListP2SVpnServerConfigurationsResult.reduceRight
      - azure-arm-network.ListP2SVpnServerConfigurationsResult.reduceRight_1
      - azure-arm-network.ListP2SVpnServerConfigurationsResult.reduceRight_2
      - azure-arm-network.ListP2SVpnServerConfigurationsResult.reverse
      - azure-arm-network.ListP2SVpnServerConfigurationsResult.shift
      - azure-arm-network.ListP2SVpnServerConfigurationsResult.slice
      - azure-arm-network.ListP2SVpnServerConfigurationsResult.some
      - azure-arm-network.ListP2SVpnServerConfigurationsResult.sort
      - azure-arm-network.ListP2SVpnServerConfigurationsResult.splice
      - azure-arm-network.ListP2SVpnServerConfigurationsResult.splice_1
      - azure-arm-network.ListP2SVpnServerConfigurationsResult.toLocaleString
      - azure-arm-network.ListP2SVpnServerConfigurationsResult.toString
      - azure-arm-network.ListP2SVpnServerConfigurationsResult.unshift
      - azure-arm-network.ListP2SVpnServerConfigurationsResult.values
    langs:
      - typeScript
    type: interface
    summary: >-
      Result of the request to list all P2SVpnServerConfigurations associated to
      a VirtualWan. It

      contains a list of P2SVpnServerConfigurations and a URL nextLink to get
      the next set of results.
    extends:
      name: Array<azure-arm-network.P2SVpnServerConfiguration>
    package: azure-arm-network
  - uid: azure-arm-network.ListP2SVpnServerConfigurationsResult.Array
    name: Array
    fullName: Array
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'Array: ArrayConstructor'
      return:
        type:
          - ArrayConstructor
    package: azure-arm-network
  - uid: azure-arm-network.ListP2SVpnServerConfigurationsResult.concat
    name: 'concat(ConcatArray<P2SVpnServerConfiguration>[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: Combines two or more arrays.
    syntax:
      content: 'function concat(items: ConcatArray<P2SVpnServerConfiguration>[])'
      parameters:
        - id: items
          type:
            - 'ConcatArray<azure-arm-network.P2SVpnServerConfiguration>[]'
          description: |
            Additional items to add to the end of array1.
      return:
        type:
          - 'azure-arm-network.P2SVpnServerConfiguration[]'
    package: azure-arm-network
  - uid: azure-arm-network.ListP2SVpnServerConfigurationsResult.concat_1
    name: 'concat(T | ConcatArray<T>[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: Combines two or more arrays.
    syntax:
      content: 'function concat(items: T | ConcatArray<T>[])'
      parameters:
        - id: items
          type:
            - 'T | ConcatArray<T>[]'
          description: |
            Additional items to add to the end of array1.
      return:
        type:
          - 'azure-arm-network.P2SVpnServerConfiguration[]'
    package: azure-arm-network
  - uid: azure-arm-network.ListP2SVpnServerConfigurationsResult.copyWithin
    name: 'copyWithin(number, number, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Returns the this object after copying a section of the array identified by
      start and end

      to the same array starting at position target
    syntax:
      content: 'function copyWithin(target: number, start: number, end?: number)'
      parameters:
        - id: target
          type:
            - number
          description: >-
            If target is negative, it is treated as length+target where length
            is the

            length of the array.
        - id: start
          type:
            - number
          description: >-
            If start is negative, it is treated as length+start. If end is
            negative, it

            is treated as length+end.
        - id: end
          type:
            - number
          description: >
            If not specified, length of the this object is used as its default
            value.
          optional: true
      return:
        type:
          - this
    package: azure-arm-network
  - uid: azure-arm-network.ListP2SVpnServerConfigurationsResult.entries
    name: entries()
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Returns an iterable of key, value pairs for every entry in the array'
    syntax:
      content: function entries()
      parameters: []
      return:
        type:
          - IterableIterator<Object>
    package: azure-arm-network
  - uid: azure-arm-network.ListP2SVpnServerConfigurationsResult.every
    name: >-
      every((value: P2SVpnServerConfiguration, index: number, array:
      P2SVpnServerConfiguration[]) => unknown, any)
    children: []
    type: method
    langs:
      - typeScript
    summary: Determines whether all the members of an array satisfy the specified test.
    syntax:
      content: >-
        function every(callbackfn: (value: P2SVpnServerConfiguration, index:
        number, array: P2SVpnServerConfiguration[]) => unknown, thisArg?: any)
      parameters:
        - id: callbackfn
          type:
            - >-
              (value: P2SVpnServerConfiguration, index: number, array:
              P2SVpnServerConfiguration[]) => unknown
          description: >-
            A function that accepts up to three arguments. The every method
            calls

            the callbackfn function for each element in the array until the
            callbackfn returns a value

            which is coercible to the Boolean value false, or until the end of
            the array.
        - id: thisArg
          type:
            - any
          description: >
            An object to which the this keyword can refer in the callbackfn
            function.

            If thisArg is omitted, undefined is used as the this value.
          optional: true
      return:
        type:
          - boolean
    package: azure-arm-network
  - uid: azure-arm-network.ListP2SVpnServerConfigurationsResult.fill
    name: 'fill(P2SVpnServerConfiguration, number, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Returns the this object after filling the section identified by start and
      end with value
    syntax:
      content: >-
        function fill(value: P2SVpnServerConfiguration, start?: number, end?:
        number)
      parameters:
        - id: value
          type:
            - azure-arm-network.P2SVpnServerConfiguration
          description: value to fill array section with
        - id: start
          type:
            - number
          description: >-
            index to start filling the array at. If start is negative, it is
            treated as

            length+start where length is the length of the array.
          optional: true
        - id: end
          type:
            - number
          description: >
            index to stop filling the array at. If end is negative, it is
            treated as

            length+end.
          optional: true
      return:
        type:
          - this
    package: azure-arm-network
  - uid: azure-arm-network.ListP2SVpnServerConfigurationsResult.filter_1
    name: >-
      filter((value: P2SVpnServerConfiguration, index: number, array:
      P2SVpnServerConfiguration[]) => unknown, any)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Returns the elements of an array that meet the condition specified in a
      callback function.
    syntax:
      content: >-
        function filter(callbackfn: (value: P2SVpnServerConfiguration, index:
        number, array: P2SVpnServerConfiguration[]) => unknown, thisArg?: any)
      parameters:
        - id: callbackfn
          type:
            - >-
              (value: P2SVpnServerConfiguration, index: number, array:
              P2SVpnServerConfiguration[]) => unknown
          description: >-
            A function that accepts up to three arguments. The filter method
            calls the callbackfn function one time for each element in the
            array.
        - id: thisArg
          type:
            - any
          description: >
            An object to which the this keyword can refer in the callbackfn
            function. If thisArg is omitted, undefined is used as the this
            value.
          optional: true
      return:
        type:
          - 'azure-arm-network.P2SVpnServerConfiguration[]'
    package: azure-arm-network
  - uid: azure-arm-network.ListP2SVpnServerConfigurationsResult.filter
    name: >-
      filter((value: P2SVpnServerConfiguration, index: number, array:
      P2SVpnServerConfiguration[]) => value, any)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Returns the elements of an array that meet the condition specified in a
      callback function.
    syntax:
      content: >-
        function filter<S>(callbackfn: (value: P2SVpnServerConfiguration, index:
        number, array: P2SVpnServerConfiguration[]) => value, thisArg?: any)
      parameters:
        - id: callbackfn
          type:
            - >-
              (value: P2SVpnServerConfiguration, index: number, array:
              P2SVpnServerConfiguration[]) => value
          description: >-
            A function that accepts up to three arguments. The filter method
            calls the callbackfn function one time for each element in the
            array.
        - id: thisArg
          type:
            - any
          description: >
            An object to which the this keyword can refer in the callbackfn
            function. If thisArg is omitted, undefined is used as the this
            value.
          optional: true
      return:
        type:
          - 'S[]'
    package: azure-arm-network
  - uid: azure-arm-network.ListP2SVpnServerConfigurationsResult.find
    name: >-
      find((this: void, value: P2SVpnServerConfiguration, index: number, obj:
      P2SVpnServerConfiguration[]) => value, any)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Returns the value of the first element in the array where predicate is
      true, and undefined

      otherwise.
    syntax:
      content: >-
        function find<S>(predicate: (this: void, value:
        P2SVpnServerConfiguration, index: number, obj:
        P2SVpnServerConfiguration[]) => value, thisArg?: any)
      parameters:
        - id: predicate
          type:
            - >-
              (this: void, value: P2SVpnServerConfiguration, index: number, obj:
              P2SVpnServerConfiguration[]) => value
          description: >-
            find calls predicate once for each element of the array, in
            ascending

            order, until it finds one where predicate returns true. If such an
            element is found, find

            immediately returns that element value. Otherwise, find returns
            undefined.
        - id: thisArg
          type:
            - any
          description: >
            If provided, it will be used as the this value for each invocation
            of

            predicate. If it is not provided, undefined is used instead.
          optional: true
      return:
        type:
          - S | undefined
    package: azure-arm-network
  - uid: azure-arm-network.ListP2SVpnServerConfigurationsResult.find_1
    name: >-
      find((value: P2SVpnServerConfiguration, index: number, obj:
      P2SVpnServerConfiguration[]) => unknown, any)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Returns the value of the first element in the array where predicate is
      true, and undefined

      otherwise.
    syntax:
      content: >-
        function find(predicate: (value: P2SVpnServerConfiguration, index:
        number, obj: P2SVpnServerConfiguration[]) => unknown, thisArg?: any)
      parameters:
        - id: predicate
          type:
            - >-
              (value: P2SVpnServerConfiguration, index: number, obj:
              P2SVpnServerConfiguration[]) => unknown
          description: ''
        - id: thisArg
          type:
            - any
          description: ''
          optional: true
      return:
        type:
          - azure-arm-network.P2SVpnServerConfiguration | undefined
    package: azure-arm-network
  - uid: azure-arm-network.ListP2SVpnServerConfigurationsResult.findIndex
    name: >-
      findIndex((value: P2SVpnServerConfiguration, index: number, obj:
      P2SVpnServerConfiguration[]) => unknown, any)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Returns the index of the first element in the array where predicate is
      true, and -1

      otherwise.
    syntax:
      content: >-
        function findIndex(predicate: (value: P2SVpnServerConfiguration, index:
        number, obj: P2SVpnServerConfiguration[]) => unknown, thisArg?: any)
      parameters:
        - id: predicate
          type:
            - >-
              (value: P2SVpnServerConfiguration, index: number, obj:
              P2SVpnServerConfiguration[]) => unknown
          description: >-
            find calls predicate once for each element of the array, in
            ascending

            order, until it finds one where predicate returns true. If such an
            element is found,

            findIndex immediately returns that element index. Otherwise,
            findIndex returns -1.
        - id: thisArg
          type:
            - any
          description: >
            If provided, it will be used as the this value for each invocation
            of

            predicate. If it is not provided, undefined is used instead.
          optional: true
      return:
        type:
          - number
    package: azure-arm-network
  - uid: azure-arm-network.ListP2SVpnServerConfigurationsResult.forEach
    name: >-
      forEach((value: P2SVpnServerConfiguration, index: number, array:
      P2SVpnServerConfiguration[]) => void, any)
    children: []
    type: method
    langs:
      - typeScript
    summary: Performs the specified action for each element in an array.
    syntax:
      content: >-
        function forEach(callbackfn: (value: P2SVpnServerConfiguration, index:
        number, array: P2SVpnServerConfiguration[]) => void, thisArg?: any)
      parameters:
        - id: callbackfn
          type:
            - >-
              (value: P2SVpnServerConfiguration, index: number, array:
              P2SVpnServerConfiguration[]) => void
          description: >-
            A function that accepts up to three arguments. forEach calls the
            callbackfn function one time for each element in the array.
        - id: thisArg
          type:
            - any
          description: >
            An object to which the this keyword can refer in the callbackfn
            function. If thisArg is omitted, undefined is used as the this
            value.
          optional: true
    package: azure-arm-network
  - uid: azure-arm-network.ListP2SVpnServerConfigurationsResult.includes
    name: 'includes(P2SVpnServerConfiguration, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Determines whether an array includes a certain element, returning true or
      false as appropriate.
    syntax:
      content: >-
        function includes(searchElement: P2SVpnServerConfiguration, fromIndex?:
        number)
      parameters:
        - id: searchElement
          type:
            - azure-arm-network.P2SVpnServerConfiguration
          description: The element to search for.
        - id: fromIndex
          type:
            - number
          description: >
            The position in this array at which to begin searching for
            searchElement.
          optional: true
      return:
        type:
          - boolean
    package: azure-arm-network
  - uid: azure-arm-network.ListP2SVpnServerConfigurationsResult.indexOf
    name: 'indexOf(P2SVpnServerConfiguration, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Returns the index of the first occurrence of a value in an array.
    syntax:
      content: >-
        function indexOf(searchElement: P2SVpnServerConfiguration, fromIndex?:
        number)
      parameters:
        - id: searchElement
          type:
            - azure-arm-network.P2SVpnServerConfiguration
          description: The value to locate in the array.
        - id: fromIndex
          type:
            - number
          description: >
            The array index at which to begin the search. If fromIndex is
            omitted, the search starts at index 0.
          optional: true
      return:
        type:
          - number
    package: azure-arm-network
  - uid: azure-arm-network.ListP2SVpnServerConfigurationsResult.join
    name: join(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Adds all the elements of an array separated by the specified separator
      string.
    syntax:
      content: 'function join(separator?: string)'
      parameters:
        - id: separator
          type:
            - string
          description: >
            A string used to separate one element of an array from the next in
            the resulting String. If omitted, the array elements are separated
            with a comma.
          optional: true
      return:
        type:
          - string
    package: azure-arm-network
  - uid: azure-arm-network.ListP2SVpnServerConfigurationsResult.keys
    name: keys()
    children: []
    type: method
    langs:
      - typeScript
    summary: Returns an iterable of keys in the array
    syntax:
      content: function keys()
      parameters: []
      return:
        type:
          - IterableIterator<number>
    package: azure-arm-network
  - uid: azure-arm-network.ListP2SVpnServerConfigurationsResult.lastIndexOf
    name: 'lastIndexOf(P2SVpnServerConfiguration, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Returns the index of the last occurrence of a specified value in an array.
    syntax:
      content: >-
        function lastIndexOf(searchElement: P2SVpnServerConfiguration,
        fromIndex?: number)
      parameters:
        - id: searchElement
          type:
            - azure-arm-network.P2SVpnServerConfiguration
          description: The value to locate in the array.
        - id: fromIndex
          type:
            - number
          description: >
            The array index at which to begin the search. If fromIndex is
            omitted, the search starts at the last index in the array.
          optional: true
      return:
        type:
          - number
    package: azure-arm-network
  - uid: azure-arm-network.ListP2SVpnServerConfigurationsResult.length
    name: length
    fullName: length
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Gets or sets the length of the array. This is a number one higher than the
      highest element defined in an array.
    syntax:
      content: 'length: number'
      return:
        type:
          - number
    package: azure-arm-network
  - uid: azure-arm-network.ListP2SVpnServerConfigurationsResult.map
    name: >-
      map((value: P2SVpnServerConfiguration, index: number, array:
      P2SVpnServerConfiguration[]) => U, any)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Calls a defined callback function on each element of an array, and returns
      an array that contains the results.
    syntax:
      content: >-
        function map<U>(callbackfn: (value: P2SVpnServerConfiguration, index:
        number, array: P2SVpnServerConfiguration[]) => U, thisArg?: any)
      parameters:
        - id: callbackfn
          type:
            - >-
              (value: P2SVpnServerConfiguration, index: number, array:
              P2SVpnServerConfiguration[]) => U
          description: >-
            A function that accepts up to three arguments. The map method calls
            the callbackfn function one time for each element in the array.
        - id: thisArg
          type:
            - any
          description: >
            An object to which the this keyword can refer in the callbackfn
            function. If thisArg is omitted, undefined is used as the this
            value.
          optional: true
      return:
        type:
          - 'U[]'
    package: azure-arm-network
  - uid: azure-arm-network.ListP2SVpnServerConfigurationsResult.nextLink
    name: nextLink
    fullName: nextLink
    children: []
    langs:
      - typeScript
    type: property
    summary: URL to get the next set of operation list results if there are any.
    optional: true
    syntax:
      content: 'nextLink?: string'
      return:
        type:
          - string
    package: azure-arm-network
  - uid: azure-arm-network.ListP2SVpnServerConfigurationsResult.pop
    name: pop()
    children: []
    type: method
    langs:
      - typeScript
    summary: Removes the last element from an array and returns it.
    syntax:
      content: function pop()
      parameters: []
      return:
        type:
          - azure-arm-network.P2SVpnServerConfiguration | undefined
    package: azure-arm-network
  - uid: azure-arm-network.ListP2SVpnServerConfigurationsResult.push
    name: 'push(P2SVpnServerConfiguration[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Appends new elements to an array, and returns the new length of the array.'
    syntax:
      content: 'function push(items: P2SVpnServerConfiguration[])'
      parameters:
        - id: items
          type:
            - 'azure-arm-network.P2SVpnServerConfiguration[]'
          description: |
            New elements of the Array.
      return:
        type:
          - number
    package: azure-arm-network
  - uid: azure-arm-network.ListP2SVpnServerConfigurationsResult.reduce
    name: >-
      reduce((previousValue: P2SVpnServerConfiguration, currentValue:
      P2SVpnServerConfiguration, currentIndex: number, array:
      P2SVpnServerConfiguration[]) => P2SVpnServerConfiguration)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Calls the specified callback function for all the elements in an array.
      The return value of the callback function is the accumulated result, and
      is provided as an argument in the next call to the callback function.
    syntax:
      content: >-
        function reduce(callbackfn: (previousValue: P2SVpnServerConfiguration,
        currentValue: P2SVpnServerConfiguration, currentIndex: number, array:
        P2SVpnServerConfiguration[]) => P2SVpnServerConfiguration)
      parameters:
        - id: callbackfn
          type:
            - >-
              (previousValue: P2SVpnServerConfiguration, currentValue:
              P2SVpnServerConfiguration, currentIndex: number, array:
              P2SVpnServerConfiguration[]) => P2SVpnServerConfiguration
          description: >-
            A function that accepts up to four arguments. The reduce method
            calls the callbackfn function one time for each element in the
            array.
      return:
        type:
          - azure-arm-network.P2SVpnServerConfiguration
    package: azure-arm-network
  - uid: azure-arm-network.ListP2SVpnServerConfigurationsResult.reduce_1
    name: >-
      reduce((previousValue: P2SVpnServerConfiguration, currentValue:
      P2SVpnServerConfiguration, currentIndex: number, array:
      P2SVpnServerConfiguration[]) => P2SVpnServerConfiguration,
      P2SVpnServerConfiguration)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Calls the specified callback function for all the elements in an array.
      The return value of the callback function is the accumulated result, and
      is provided as an argument in the next call to the callback function.
    syntax:
      content: >-
        function reduce(callbackfn: (previousValue: P2SVpnServerConfiguration,
        currentValue: P2SVpnServerConfiguration, currentIndex: number, array:
        P2SVpnServerConfiguration[]) => P2SVpnServerConfiguration, initialValue:
        P2SVpnServerConfiguration)
      parameters:
        - id: callbackfn
          type:
            - >-
              (previousValue: P2SVpnServerConfiguration, currentValue:
              P2SVpnServerConfiguration, currentIndex: number, array:
              P2SVpnServerConfiguration[]) => P2SVpnServerConfiguration
          description: ''
        - id: initialValue
          type:
            - azure-arm-network.P2SVpnServerConfiguration
          description: ''
      return:
        type:
          - azure-arm-network.P2SVpnServerConfiguration
    package: azure-arm-network
  - uid: azure-arm-network.ListP2SVpnServerConfigurationsResult.reduce_2
    name: >-
      reduce((previousValue: U, currentValue: P2SVpnServerConfiguration,
      currentIndex: number, array: P2SVpnServerConfiguration[]) => U, U)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Calls the specified callback function for all the elements in an array.
      The return value of the callback function is the accumulated result, and
      is provided as an argument in the next call to the callback function.
    syntax:
      content: >-
        function reduce<U>(callbackfn: (previousValue: U, currentValue:
        P2SVpnServerConfiguration, currentIndex: number, array:
        P2SVpnServerConfiguration[]) => U, initialValue: U)
      parameters:
        - id: callbackfn
          type:
            - >-
              (previousValue: U, currentValue: P2SVpnServerConfiguration,
              currentIndex: number, array: P2SVpnServerConfiguration[]) => U
          description: >-
            A function that accepts up to four arguments. The reduce method
            calls the callbackfn function one time for each element in the
            array.
        - id: initialValue
          type:
            - U
          description: >
            If initialValue is specified, it is used as the initial value to
            start the accumulation. The first call to the callbackfn function
            provides this value as an argument instead of an array value.
      return:
        type:
          - U
    package: azure-arm-network
  - uid: azure-arm-network.ListP2SVpnServerConfigurationsResult.reduceRight
    name: >-
      reduceRight((previousValue: P2SVpnServerConfiguration, currentValue:
      P2SVpnServerConfiguration, currentIndex: number, array:
      P2SVpnServerConfiguration[]) => P2SVpnServerConfiguration)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Calls the specified callback function for all the elements in an array, in
      descending order. The return value of the callback function is the
      accumulated result, and is provided as an argument in the next call to the
      callback function.
    syntax:
      content: >-
        function reduceRight(callbackfn: (previousValue:
        P2SVpnServerConfiguration, currentValue: P2SVpnServerConfiguration,
        currentIndex: number, array: P2SVpnServerConfiguration[]) =>
        P2SVpnServerConfiguration)
      parameters:
        - id: callbackfn
          type:
            - >-
              (previousValue: P2SVpnServerConfiguration, currentValue:
              P2SVpnServerConfiguration, currentIndex: number, array:
              P2SVpnServerConfiguration[]) => P2SVpnServerConfiguration
          description: >-
            A function that accepts up to four arguments. The reduceRight method
            calls the callbackfn function one time for each element in the
            array.
      return:
        type:
          - azure-arm-network.P2SVpnServerConfiguration
    package: azure-arm-network
  - uid: azure-arm-network.ListP2SVpnServerConfigurationsResult.reduceRight_1
    name: >-
      reduceRight((previousValue: P2SVpnServerConfiguration, currentValue:
      P2SVpnServerConfiguration, currentIndex: number, array:
      P2SVpnServerConfiguration[]) => P2SVpnServerConfiguration,
      P2SVpnServerConfiguration)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Calls the specified callback function for all the elements in an array, in
      descending order. The return value of the callback function is the
      accumulated result, and is provided as an argument in the next call to the
      callback function.
    syntax:
      content: >-
        function reduceRight(callbackfn: (previousValue:
        P2SVpnServerConfiguration, currentValue: P2SVpnServerConfiguration,
        currentIndex: number, array: P2SVpnServerConfiguration[]) =>
        P2SVpnServerConfiguration, initialValue: P2SVpnServerConfiguration)
      parameters:
        - id: callbackfn
          type:
            - >-
              (previousValue: P2SVpnServerConfiguration, currentValue:
              P2SVpnServerConfiguration, currentIndex: number, array:
              P2SVpnServerConfiguration[]) => P2SVpnServerConfiguration
          description: ''
        - id: initialValue
          type:
            - azure-arm-network.P2SVpnServerConfiguration
          description: ''
      return:
        type:
          - azure-arm-network.P2SVpnServerConfiguration
    package: azure-arm-network
  - uid: azure-arm-network.ListP2SVpnServerConfigurationsResult.reduceRight_2
    name: >-
      reduceRight((previousValue: U, currentValue: P2SVpnServerConfiguration,
      currentIndex: number, array: P2SVpnServerConfiguration[]) => U, U)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Calls the specified callback function for all the elements in an array, in
      descending order. The return value of the callback function is the
      accumulated result, and is provided as an argument in the next call to the
      callback function.
    syntax:
      content: >-
        function reduceRight<U>(callbackfn: (previousValue: U, currentValue:
        P2SVpnServerConfiguration, currentIndex: number, array:
        P2SVpnServerConfiguration[]) => U, initialValue: U)
      parameters:
        - id: callbackfn
          type:
            - >-
              (previousValue: U, currentValue: P2SVpnServerConfiguration,
              currentIndex: number, array: P2SVpnServerConfiguration[]) => U
          description: >-
            A function that accepts up to four arguments. The reduceRight method
            calls the callbackfn function one time for each element in the
            array.
        - id: initialValue
          type:
            - U
          description: >
            If initialValue is specified, it is used as the initial value to
            start the accumulation. The first call to the callbackfn function
            provides this value as an argument instead of an array value.
      return:
        type:
          - U
    package: azure-arm-network
  - uid: azure-arm-network.ListP2SVpnServerConfigurationsResult.reverse
    name: reverse()
    children: []
    type: method
    langs:
      - typeScript
    summary: Reverses the elements in an Array.
    syntax:
      content: function reverse()
      parameters: []
      return:
        type:
          - 'azure-arm-network.P2SVpnServerConfiguration[]'
    package: azure-arm-network
  - uid: azure-arm-network.ListP2SVpnServerConfigurationsResult.shift
    name: shift()
    children: []
    type: method
    langs:
      - typeScript
    summary: Removes the first element from an array and returns it.
    syntax:
      content: function shift()
      parameters: []
      return:
        type:
          - azure-arm-network.P2SVpnServerConfiguration | undefined
    package: azure-arm-network
  - uid: azure-arm-network.ListP2SVpnServerConfigurationsResult.slice
    name: 'slice(number, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Returns a section of an array.
    syntax:
      content: 'function slice(start?: number, end?: number)'
      parameters:
        - id: start
          type:
            - number
          description: The beginning of the specified portion of the array.
          optional: true
        - id: end
          type:
            - number
          description: >
            The end of the specified portion of the array. This is exclusive of
            the element at the index 'end'.
          optional: true
      return:
        type:
          - 'azure-arm-network.P2SVpnServerConfiguration[]'
    package: azure-arm-network
  - uid: azure-arm-network.ListP2SVpnServerConfigurationsResult.some
    name: >-
      some((value: P2SVpnServerConfiguration, index: number, array:
      P2SVpnServerConfiguration[]) => unknown, any)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Determines whether the specified callback function returns true for any
      element of an array.
    syntax:
      content: >-
        function some(callbackfn: (value: P2SVpnServerConfiguration, index:
        number, array: P2SVpnServerConfiguration[]) => unknown, thisArg?: any)
      parameters:
        - id: callbackfn
          type:
            - >-
              (value: P2SVpnServerConfiguration, index: number, array:
              P2SVpnServerConfiguration[]) => unknown
          description: >-
            A function that accepts up to three arguments. The some method calls

            the callbackfn function for each element in the array until the
            callbackfn returns a value

            which is coercible to the Boolean value true, or until the end of
            the array.
        - id: thisArg
          type:
            - any
          description: >
            An object to which the this keyword can refer in the callbackfn
            function.

            If thisArg is omitted, undefined is used as the this value.
          optional: true
      return:
        type:
          - boolean
    package: azure-arm-network
  - uid: azure-arm-network.ListP2SVpnServerConfigurationsResult.sort
    name: >-
      sort((a: P2SVpnServerConfiguration, b: P2SVpnServerConfiguration) =>
      number)
    children: []
    type: method
    langs:
      - typeScript
    summary: Sorts an array.
    syntax:
      content: >-
        function sort(compareFn?: (a: P2SVpnServerConfiguration, b:
        P2SVpnServerConfiguration) => number)
      parameters:
        - id: compareFn
          type:
            - >-
              (a: P2SVpnServerConfiguration, b: P2SVpnServerConfiguration) =>
              number
          description: >
            Function used to determine the order of the elements. It is expected
            to return

            a negative value if first argument is less than second argument,
            zero if they're equal and a positive

            value otherwise. If omitted, the elements are sorted in ascending,
            ASCII character order.

            ```ts

            [11,2,22,1].sort((a, b) => a - b)

            ```
          optional: true
      return:
        type:
          - this
    package: azure-arm-network
  - uid: azure-arm-network.ListP2SVpnServerConfigurationsResult.splice
    name: 'splice(number, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Removes elements from an array and, if necessary, inserts new elements in
      their place, returning the deleted elements.
    syntax:
      content: 'function splice(start: number, deleteCount?: number)'
      parameters:
        - id: start
          type:
            - number
          description: >-
            The zero-based location in the array from which to start removing
            elements.
        - id: deleteCount
          type:
            - number
          description: |
            The number of elements to remove.
          optional: true
      return:
        type:
          - 'azure-arm-network.P2SVpnServerConfiguration[]'
    package: azure-arm-network
  - uid: azure-arm-network.ListP2SVpnServerConfigurationsResult.splice_1
    name: 'splice(number, number, P2SVpnServerConfiguration[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Removes elements from an array and, if necessary, inserts new elements in
      their place, returning the deleted elements.
    syntax:
      content: >-
        function splice(start: number, deleteCount: number, items:
        P2SVpnServerConfiguration[])
      parameters:
        - id: start
          type:
            - number
          description: >-
            The zero-based location in the array from which to start removing
            elements.
        - id: deleteCount
          type:
            - number
          description: The number of elements to remove.
        - id: items
          type:
            - 'azure-arm-network.P2SVpnServerConfiguration[]'
          description: |
            Elements to insert into the array in place of the deleted elements.
      return:
        type:
          - 'azure-arm-network.P2SVpnServerConfiguration[]'
    package: azure-arm-network
  - uid: azure-arm-network.ListP2SVpnServerConfigurationsResult.toLocaleString
    name: toLocaleString()
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Returns a string representation of an array. The elements are converted to
      string using their toLocalString methods.
    syntax:
      content: function toLocaleString()
      parameters: []
      return:
        type:
          - string
    package: azure-arm-network
  - uid: azure-arm-network.ListP2SVpnServerConfigurationsResult.toString
    name: toString()
    children: []
    type: method
    langs:
      - typeScript
    summary: Returns a string representation of an array.
    syntax:
      content: function toString()
      parameters: []
      return:
        type:
          - string
    package: azure-arm-network
  - uid: azure-arm-network.ListP2SVpnServerConfigurationsResult.unshift
    name: 'unshift(P2SVpnServerConfiguration[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: Inserts new elements at the start of an array.
    syntax:
      content: 'function unshift(items: P2SVpnServerConfiguration[])'
      parameters:
        - id: items
          type:
            - 'azure-arm-network.P2SVpnServerConfiguration[]'
          description: |
            Elements to insert at the start of the Array.
      return:
        type:
          - number
    package: azure-arm-network
  - uid: azure-arm-network.ListP2SVpnServerConfigurationsResult.values
    name: values()
    children: []
    type: method
    langs:
      - typeScript
    summary: Returns an iterable of values in the array
    syntax:
      content: function values()
      parameters: []
      return:
        type:
          - IterableIterator<azure-arm-network.P2SVpnServerConfiguration>
    package: azure-arm-network
references:
  - uid: Array<azure-arm-network.P2SVpnServerConfiguration>
    name: P2SVpnServerConfiguration>
    spec.typeScript:
      - name: Array<
        fullName: Array<
      - name: P2SVpnServerConfiguration
        fullName: P2SVpnServerConfiguration
        uid: azure-arm-network.P2SVpnServerConfiguration
      - name: '>'
        fullName: '>'
  - uid: 'ConcatArray<azure-arm-network.P2SVpnServerConfiguration>[]'
    name: 'P2SVpnServerConfiguration>[]'
    spec.typeScript:
      - name: ConcatArray<
        fullName: ConcatArray<
      - name: P2SVpnServerConfiguration
        fullName: P2SVpnServerConfiguration
        uid: azure-arm-network.P2SVpnServerConfiguration
      - name: '>[]'
        fullName: '>[]'
  - uid: 'azure-arm-network.P2SVpnServerConfiguration[]'
    name: 'P2SVpnServerConfiguration[]'
    spec.typeScript:
      - name: P2SVpnServerConfiguration
        fullName: P2SVpnServerConfiguration
        uid: azure-arm-network.P2SVpnServerConfiguration
      - name: '[]'
        fullName: '[]'
  - uid: azure-arm-network.P2SVpnServerConfiguration
    name: P2SVpnServerConfiguration
    spec.typeScript:
      - name: P2SVpnServerConfiguration
        fullName: P2SVpnServerConfiguration
        uid: azure-arm-network.P2SVpnServerConfiguration
  - uid: azure-arm-network.P2SVpnServerConfiguration | undefined
    name: P2SVpnServerConfiguration | undefined
    spec.typeScript:
      - name: P2SVpnServerConfiguration
        fullName: P2SVpnServerConfiguration
        uid: azure-arm-network.P2SVpnServerConfiguration
      - name: ' | undefined'
        fullName: ' | undefined'
  - uid: IterableIterator<azure-arm-network.P2SVpnServerConfiguration>
    name: P2SVpnServerConfiguration>
    spec.typeScript:
      - name: IterableIterator<
        fullName: IterableIterator<
      - name: P2SVpnServerConfiguration
        fullName: P2SVpnServerConfiguration
        uid: azure-arm-network.P2SVpnServerConfiguration
      - name: '>'
        fullName: '>'
