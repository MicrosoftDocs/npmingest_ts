### YamlMime:UniversalReference
items:
  - uid: azure-arm-network - v13.0.0.PacketCaptures
    name: PacketCaptures
    fullName: PacketCaptures
    children:
      - azure-arm-network - v13.0.0.PacketCaptures.beginCreate
      - azure-arm-network - v13.0.0.PacketCaptures.beginCreate_2
      - azure-arm-network - v13.0.0.PacketCaptures.beginCreate_1
      - >-
        azure-arm-network -
        v13.0.0.PacketCaptures.beginCreateWithHttpOperationResponse
      - azure-arm-network - v13.0.0.PacketCaptures.beginDeleteMethod
      - azure-arm-network - v13.0.0.PacketCaptures.beginDeleteMethod_2
      - azure-arm-network - v13.0.0.PacketCaptures.beginDeleteMethod_1
      - >-
        azure-arm-network -
        v13.0.0.PacketCaptures.beginDeleteMethodWithHttpOperationResponse
      - azure-arm-network - v13.0.0.PacketCaptures.beginGetStatus
      - azure-arm-network - v13.0.0.PacketCaptures.beginGetStatus_2
      - azure-arm-network - v13.0.0.PacketCaptures.beginGetStatus_1
      - >-
        azure-arm-network -
        v13.0.0.PacketCaptures.beginGetStatusWithHttpOperationResponse
      - azure-arm-network - v13.0.0.PacketCaptures.beginStop
      - azure-arm-network - v13.0.0.PacketCaptures.beginStop_2
      - azure-arm-network - v13.0.0.PacketCaptures.beginStop_1
      - >-
        azure-arm-network -
        v13.0.0.PacketCaptures.beginStopWithHttpOperationResponse
      - azure-arm-network - v13.0.0.PacketCaptures.create
      - azure-arm-network - v13.0.0.PacketCaptures.create_2
      - azure-arm-network - v13.0.0.PacketCaptures.create_1
      - >-
        azure-arm-network -
        v13.0.0.PacketCaptures.createWithHttpOperationResponse
      - azure-arm-network - v13.0.0.PacketCaptures.deleteMethod
      - azure-arm-network - v13.0.0.PacketCaptures.deleteMethod_2
      - azure-arm-network - v13.0.0.PacketCaptures.deleteMethod_1
      - >-
        azure-arm-network -
        v13.0.0.PacketCaptures.deleteMethodWithHttpOperationResponse
      - azure-arm-network - v13.0.0.PacketCaptures.get
      - azure-arm-network - v13.0.0.PacketCaptures.get_2
      - azure-arm-network - v13.0.0.PacketCaptures.get_1
      - azure-arm-network - v13.0.0.PacketCaptures.getStatus
      - azure-arm-network - v13.0.0.PacketCaptures.getStatus_2
      - azure-arm-network - v13.0.0.PacketCaptures.getStatus_1
      - >-
        azure-arm-network -
        v13.0.0.PacketCaptures.getStatusWithHttpOperationResponse
      - azure-arm-network - v13.0.0.PacketCaptures.getWithHttpOperationResponse
      - azure-arm-network - v13.0.0.PacketCaptures.list
      - azure-arm-network - v13.0.0.PacketCaptures.list_2
      - azure-arm-network - v13.0.0.PacketCaptures.list_1
      - azure-arm-network - v13.0.0.PacketCaptures.listWithHttpOperationResponse
      - azure-arm-network - v13.0.0.PacketCaptures.stop
      - azure-arm-network - v13.0.0.PacketCaptures.stop_2
      - azure-arm-network - v13.0.0.PacketCaptures.stop_1
      - azure-arm-network - v13.0.0.PacketCaptures.stopWithHttpOperationResponse
    langs:
      - typeScript
    type: interface
    summary: ''
    package: azure-arm-network - v13
  - uid: azure-arm-network - v13.0.0.PacketCaptures.beginCreate
    name: 'beginCreate(string, string, string, PacketCapture, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Create and start a packet capture on the specified VM.
    syntax:
      content: >-
        function beginCreate(resourceGroupName: string, networkWatcherName:
        string, packetCaptureName: string, parameters: PacketCapture, options?:
        Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: |
            The name of the network watcher.
        - id: packetCaptureName
          type:
            - string
          description: |
            The name of the packet capture session.
        - id: parameters
          type:
            - azure-arm-network - v13.0.0.PacketCapture
          description: |
            Parameters that define the create packet capture
            operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-network - v13.0.0.PacketCaptureResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {PacketCaptureResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {PacketCaptureResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link PacketCaptureResult} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network - v13
  - uid: azure-arm-network - v13.0.0.PacketCaptures.beginCreate_2
    name: >-
      beginCreate(string, string, string, PacketCapture, Object,
      ServiceCallback<PacketCaptureResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Create and start a packet capture on the specified VM.
    syntax:
      content: >-
        function beginCreate(resourceGroupName: string, networkWatcherName:
        string, packetCaptureName: string, parameters: PacketCapture, options:
        Object, callback: ServiceCallback<PacketCaptureResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: networkWatcherName
          type:
            - string
          description: ''
        - id: packetCaptureName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-network - v13.0.0.PacketCapture
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-network - v13.0.0.PacketCaptureResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-network - v13.0.0.PacketCaptureResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {PacketCaptureResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {PacketCaptureResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link PacketCaptureResult} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network - v13
  - uid: azure-arm-network - v13.0.0.PacketCaptures.beginCreate_1
    name: >-
      beginCreate(string, string, string, PacketCapture,
      ServiceCallback<PacketCaptureResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Create and start a packet capture on the specified VM.
    syntax:
      content: >-
        function beginCreate(resourceGroupName: string, networkWatcherName:
        string, packetCaptureName: string, parameters: PacketCapture, callback:
        ServiceCallback<PacketCaptureResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: networkWatcherName
          type:
            - string
          description: ''
        - id: packetCaptureName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-network - v13.0.0.PacketCapture
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-network - v13.0.0.PacketCaptureResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-network - v13.0.0.PacketCaptureResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {PacketCaptureResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {PacketCaptureResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link PacketCaptureResult} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network - v13
  - uid: >-
      azure-arm-network -
      v13.0.0.PacketCaptures.beginCreateWithHttpOperationResponse
    name: >-
      beginCreateWithHttpOperationResponse(string, string, string,
      PacketCapture, Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: Create and start a packet capture on the specified VM.
    syntax:
      content: >-
        function beginCreateWithHttpOperationResponse(resourceGroupName: string,
        networkWatcherName: string, packetCaptureName: string, parameters:
        PacketCapture, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: |
            The name of the network watcher.
        - id: packetCaptureName
          type:
            - string
          description: |
            The name of the packet capture session.
        - id: parameters
          type:
            - azure-arm-network - v13.0.0.PacketCapture
          description: |
            Parameters that define the create packet capture
            operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-network -
            v13.0.0.PacketCaptureResult>>
        description: A promise is returned
    package: azure-arm-network - v13
  - uid: azure-arm-network - v13.0.0.PacketCaptures.beginDeleteMethod
    name: 'beginDeleteMethod(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes the specified packet capture session.
    syntax:
      content: >-
        function beginDeleteMethod(resourceGroupName: string,
        networkWatcherName: string, packetCaptureName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: |
            The name of the network watcher.
        - id: packetCaptureName
          type:
            - string
          description: |
            The name of the packet capture session.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network - v13
  - uid: azure-arm-network - v13.0.0.PacketCaptures.beginDeleteMethod_2
    name: 'beginDeleteMethod(string, string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes the specified packet capture session.
    syntax:
      content: >-
        function beginDeleteMethod(resourceGroupName: string,
        networkWatcherName: string, packetCaptureName: string, options: Object,
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: networkWatcherName
          type:
            - string
          description: ''
        - id: packetCaptureName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network - v13
  - uid: azure-arm-network - v13.0.0.PacketCaptures.beginDeleteMethod_1
    name: 'beginDeleteMethod(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes the specified packet capture session.
    syntax:
      content: >-
        function beginDeleteMethod(resourceGroupName: string,
        networkWatcherName: string, packetCaptureName: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: networkWatcherName
          type:
            - string
          description: ''
        - id: packetCaptureName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network - v13
  - uid: >-
      azure-arm-network -
      v13.0.0.PacketCaptures.beginDeleteMethodWithHttpOperationResponse
    name: 'beginDeleteMethodWithHttpOperationResponse(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes the specified packet capture session.
    syntax:
      content: >-
        function beginDeleteMethodWithHttpOperationResponse(resourceGroupName:
        string, networkWatcherName: string, packetCaptureName: string, options?:
        Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: |
            The name of the network watcher.
        - id: packetCaptureName
          type:
            - string
          description: |
            The name of the packet capture session.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
        description: A promise is returned
    package: azure-arm-network - v13
  - uid: azure-arm-network - v13.0.0.PacketCaptures.beginGetStatus
    name: 'beginGetStatus(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Query the status of a running packet capture session.
    syntax:
      content: >-
        function beginGetStatus(resourceGroupName: string, networkWatcherName:
        string, packetCaptureName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: |
            The name of the Network Watcher resource.
        - id: packetCaptureName
          type:
            - string
          description: |
            The name given to the packet capture
            session.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-network - v13.0.0.PacketCaptureQueryStatusResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {PacketCaptureQueryStatusResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {PacketCaptureQueryStatusResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link PacketCaptureQueryStatusResult} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network - v13
  - uid: azure-arm-network - v13.0.0.PacketCaptures.beginGetStatus_2
    name: >-
      beginGetStatus(string, string, string, Object,
      ServiceCallback<PacketCaptureQueryStatusResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Query the status of a running packet capture session.
    syntax:
      content: >-
        function beginGetStatus(resourceGroupName: string, networkWatcherName:
        string, packetCaptureName: string, options: Object, callback:
        ServiceCallback<PacketCaptureQueryStatusResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: networkWatcherName
          type:
            - string
          description: ''
        - id: packetCaptureName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<azure-arm-network -
              v13.0.0.PacketCaptureQueryStatusResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-network - v13.0.0.PacketCaptureQueryStatusResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {PacketCaptureQueryStatusResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {PacketCaptureQueryStatusResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link PacketCaptureQueryStatusResult} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network - v13
  - uid: azure-arm-network - v13.0.0.PacketCaptures.beginGetStatus_1
    name: >-
      beginGetStatus(string, string, string,
      ServiceCallback<PacketCaptureQueryStatusResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Query the status of a running packet capture session.
    syntax:
      content: >-
        function beginGetStatus(resourceGroupName: string, networkWatcherName:
        string, packetCaptureName: string, callback:
        ServiceCallback<PacketCaptureQueryStatusResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: networkWatcherName
          type:
            - string
          description: ''
        - id: packetCaptureName
          type:
            - string
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<azure-arm-network -
              v13.0.0.PacketCaptureQueryStatusResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-network - v13.0.0.PacketCaptureQueryStatusResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {PacketCaptureQueryStatusResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {PacketCaptureQueryStatusResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link PacketCaptureQueryStatusResult} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network - v13
  - uid: >-
      azure-arm-network -
      v13.0.0.PacketCaptures.beginGetStatusWithHttpOperationResponse
    name: 'beginGetStatusWithHttpOperationResponse(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Query the status of a running packet capture session.
    syntax:
      content: >-
        function beginGetStatusWithHttpOperationResponse(resourceGroupName:
        string, networkWatcherName: string, packetCaptureName: string, options?:
        Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: |
            The name of the Network Watcher resource.
        - id: packetCaptureName
          type:
            - string
          description: |
            The name given to the packet capture
            session.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-network -
            v13.0.0.PacketCaptureQueryStatusResult>>
        description: A promise is returned
    package: azure-arm-network - v13
  - uid: azure-arm-network - v13.0.0.PacketCaptures.beginStop
    name: 'beginStop(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Stops a specified packet capture session.
    syntax:
      content: >-
        function beginStop(resourceGroupName: string, networkWatcherName:
        string, packetCaptureName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: |
            The name of the network watcher.
        - id: packetCaptureName
          type:
            - string
          description: |
            The name of the packet capture session.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network - v13
  - uid: azure-arm-network - v13.0.0.PacketCaptures.beginStop_2
    name: 'beginStop(string, string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Stops a specified packet capture session.
    syntax:
      content: >-
        function beginStop(resourceGroupName: string, networkWatcherName:
        string, packetCaptureName: string, options: Object, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: networkWatcherName
          type:
            - string
          description: ''
        - id: packetCaptureName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network - v13
  - uid: azure-arm-network - v13.0.0.PacketCaptures.beginStop_1
    name: 'beginStop(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Stops a specified packet capture session.
    syntax:
      content: >-
        function beginStop(resourceGroupName: string, networkWatcherName:
        string, packetCaptureName: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: networkWatcherName
          type:
            - string
          description: ''
        - id: packetCaptureName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network - v13
  - uid: >-
      azure-arm-network -
      v13.0.0.PacketCaptures.beginStopWithHttpOperationResponse
    name: 'beginStopWithHttpOperationResponse(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Stops a specified packet capture session.
    syntax:
      content: >-
        function beginStopWithHttpOperationResponse(resourceGroupName: string,
        networkWatcherName: string, packetCaptureName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: |
            The name of the network watcher.
        - id: packetCaptureName
          type:
            - string
          description: |
            The name of the packet capture session.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
        description: A promise is returned
    package: azure-arm-network - v13
  - uid: azure-arm-network - v13.0.0.PacketCaptures.create
    name: 'create(string, string, string, PacketCapture, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Create and start a packet capture on the specified VM.
    syntax:
      content: >-
        function create(resourceGroupName: string, networkWatcherName: string,
        packetCaptureName: string, parameters: PacketCapture, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: |
            The name of the network watcher.
        - id: packetCaptureName
          type:
            - string
          description: |
            The name of the packet capture session.
        - id: parameters
          type:
            - azure-arm-network - v13.0.0.PacketCapture
          description: |
            Parameters that define the create packet capture
            operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-network - v13.0.0.PacketCaptureResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {PacketCaptureResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {PacketCaptureResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link PacketCaptureResult} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network - v13
  - uid: azure-arm-network - v13.0.0.PacketCaptures.create_2
    name: >-
      create(string, string, string, PacketCapture, Object,
      ServiceCallback<PacketCaptureResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Create and start a packet capture on the specified VM.
    syntax:
      content: >-
        function create(resourceGroupName: string, networkWatcherName: string,
        packetCaptureName: string, parameters: PacketCapture, options: Object,
        callback: ServiceCallback<PacketCaptureResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: networkWatcherName
          type:
            - string
          description: ''
        - id: packetCaptureName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-network - v13.0.0.PacketCapture
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-network - v13.0.0.PacketCaptureResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-network - v13.0.0.PacketCaptureResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {PacketCaptureResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {PacketCaptureResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link PacketCaptureResult} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network - v13
  - uid: azure-arm-network - v13.0.0.PacketCaptures.create_1
    name: >-
      create(string, string, string, PacketCapture,
      ServiceCallback<PacketCaptureResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Create and start a packet capture on the specified VM.
    syntax:
      content: >-
        function create(resourceGroupName: string, networkWatcherName: string,
        packetCaptureName: string, parameters: PacketCapture, callback:
        ServiceCallback<PacketCaptureResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: networkWatcherName
          type:
            - string
          description: ''
        - id: packetCaptureName
          type:
            - string
          description: ''
        - id: parameters
          type:
            - azure-arm-network - v13.0.0.PacketCapture
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-network - v13.0.0.PacketCaptureResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-network - v13.0.0.PacketCaptureResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {PacketCaptureResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {PacketCaptureResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link PacketCaptureResult} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network - v13
  - uid: azure-arm-network - v13.0.0.PacketCaptures.createWithHttpOperationResponse
    name: >-
      createWithHttpOperationResponse(string, string, string, PacketCapture,
      Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: Create and start a packet capture on the specified VM.
    syntax:
      content: >-
        function createWithHttpOperationResponse(resourceGroupName: string,
        networkWatcherName: string, packetCaptureName: string, parameters:
        PacketCapture, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: |
            The name of the network watcher.
        - id: packetCaptureName
          type:
            - string
          description: |
            The name of the packet capture session.
        - id: parameters
          type:
            - azure-arm-network - v13.0.0.PacketCapture
          description: |
            Parameters that define the create packet capture
            operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-network -
            v13.0.0.PacketCaptureResult>>
        description: A promise is returned
    package: azure-arm-network - v13
  - uid: azure-arm-network - v13.0.0.PacketCaptures.deleteMethod
    name: 'deleteMethod(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes the specified packet capture session.
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, networkWatcherName:
        string, packetCaptureName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: |
            The name of the network watcher.
        - id: packetCaptureName
          type:
            - string
          description: |
            The name of the packet capture session.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network - v13
  - uid: azure-arm-network - v13.0.0.PacketCaptures.deleteMethod_2
    name: 'deleteMethod(string, string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes the specified packet capture session.
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, networkWatcherName:
        string, packetCaptureName: string, options: Object, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: networkWatcherName
          type:
            - string
          description: ''
        - id: packetCaptureName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network - v13
  - uid: azure-arm-network - v13.0.0.PacketCaptures.deleteMethod_1
    name: 'deleteMethod(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes the specified packet capture session.
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, networkWatcherName:
        string, packetCaptureName: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: networkWatcherName
          type:
            - string
          description: ''
        - id: packetCaptureName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network - v13
  - uid: >-
      azure-arm-network -
      v13.0.0.PacketCaptures.deleteMethodWithHttpOperationResponse
    name: 'deleteMethodWithHttpOperationResponse(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes the specified packet capture session.
    syntax:
      content: >-
        function deleteMethodWithHttpOperationResponse(resourceGroupName:
        string, networkWatcherName: string, packetCaptureName: string, options?:
        Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: |
            The name of the network watcher.
        - id: packetCaptureName
          type:
            - string
          description: |
            The name of the packet capture session.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
        description: A promise is returned
    package: azure-arm-network - v13
  - uid: azure-arm-network - v13.0.0.PacketCaptures.get
    name: 'get(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a packet capture session by name.
    syntax:
      content: >-
        function get(resourceGroupName: string, networkWatcherName: string,
        packetCaptureName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: |
            The name of the network watcher.
        - id: packetCaptureName
          type:
            - string
          description: |
            The name of the packet capture session.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-network - v13.0.0.PacketCaptureResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {PacketCaptureResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {PacketCaptureResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link PacketCaptureResult} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network - v13
  - uid: azure-arm-network - v13.0.0.PacketCaptures.get_2
    name: 'get(string, string, string, Object, ServiceCallback<PacketCaptureResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a packet capture session by name.
    syntax:
      content: >-
        function get(resourceGroupName: string, networkWatcherName: string,
        packetCaptureName: string, options: Object, callback:
        ServiceCallback<PacketCaptureResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: networkWatcherName
          type:
            - string
          description: ''
        - id: packetCaptureName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-network - v13.0.0.PacketCaptureResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-network - v13.0.0.PacketCaptureResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {PacketCaptureResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {PacketCaptureResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link PacketCaptureResult} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network - v13
  - uid: azure-arm-network - v13.0.0.PacketCaptures.get_1
    name: 'get(string, string, string, ServiceCallback<PacketCaptureResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a packet capture session by name.
    syntax:
      content: >-
        function get(resourceGroupName: string, networkWatcherName: string,
        packetCaptureName: string, callback:
        ServiceCallback<PacketCaptureResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: networkWatcherName
          type:
            - string
          description: ''
        - id: packetCaptureName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-arm-network - v13.0.0.PacketCaptureResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-network - v13.0.0.PacketCaptureResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {PacketCaptureResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {PacketCaptureResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link PacketCaptureResult} for more information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network - v13
  - uid: azure-arm-network - v13.0.0.PacketCaptures.getStatus
    name: 'getStatus(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Query the status of a running packet capture session.
    syntax:
      content: >-
        function getStatus(resourceGroupName: string, networkWatcherName:
        string, packetCaptureName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: |
            The name of the Network Watcher resource.
        - id: packetCaptureName
          type:
            - string
          description: |
            The name given to the packet capture
            session.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-network - v13.0.0.PacketCaptureQueryStatusResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {PacketCaptureQueryStatusResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {PacketCaptureQueryStatusResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link PacketCaptureQueryStatusResult} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network - v13
  - uid: azure-arm-network - v13.0.0.PacketCaptures.getStatus_2
    name: >-
      getStatus(string, string, string, Object,
      ServiceCallback<PacketCaptureQueryStatusResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Query the status of a running packet capture session.
    syntax:
      content: >-
        function getStatus(resourceGroupName: string, networkWatcherName:
        string, packetCaptureName: string, options: Object, callback:
        ServiceCallback<PacketCaptureQueryStatusResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: networkWatcherName
          type:
            - string
          description: ''
        - id: packetCaptureName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<azure-arm-network -
              v13.0.0.PacketCaptureQueryStatusResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-network - v13.0.0.PacketCaptureQueryStatusResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {PacketCaptureQueryStatusResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {PacketCaptureQueryStatusResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link PacketCaptureQueryStatusResult} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network - v13
  - uid: azure-arm-network - v13.0.0.PacketCaptures.getStatus_1
    name: >-
      getStatus(string, string, string,
      ServiceCallback<PacketCaptureQueryStatusResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Query the status of a running packet capture session.
    syntax:
      content: >-
        function getStatus(resourceGroupName: string, networkWatcherName:
        string, packetCaptureName: string, callback:
        ServiceCallback<PacketCaptureQueryStatusResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: networkWatcherName
          type:
            - string
          description: ''
        - id: packetCaptureName
          type:
            - string
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<azure-arm-network -
              v13.0.0.PacketCaptureQueryStatusResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-network - v13.0.0.PacketCaptureQueryStatusResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {PacketCaptureQueryStatusResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {PacketCaptureQueryStatusResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link PacketCaptureQueryStatusResult} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network - v13
  - uid: >-
      azure-arm-network -
      v13.0.0.PacketCaptures.getStatusWithHttpOperationResponse
    name: 'getStatusWithHttpOperationResponse(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Query the status of a running packet capture session.
    syntax:
      content: >-
        function getStatusWithHttpOperationResponse(resourceGroupName: string,
        networkWatcherName: string, packetCaptureName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: |
            The name of the Network Watcher resource.
        - id: packetCaptureName
          type:
            - string
          description: |
            The name given to the packet capture
            session.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-network -
            v13.0.0.PacketCaptureQueryStatusResult>>
        description: A promise is returned
    package: azure-arm-network - v13
  - uid: azure-arm-network - v13.0.0.PacketCaptures.getWithHttpOperationResponse
    name: 'getWithHttpOperationResponse(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a packet capture session by name.
    syntax:
      content: >-
        function getWithHttpOperationResponse(resourceGroupName: string,
        networkWatcherName: string, packetCaptureName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: |
            The name of the network watcher.
        - id: packetCaptureName
          type:
            - string
          description: |
            The name of the packet capture session.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-network -
            v13.0.0.PacketCaptureResult>>
        description: A promise is returned
    package: azure-arm-network - v13
  - uid: azure-arm-network - v13.0.0.PacketCaptures.list
    name: 'list(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists all packet capture sessions within the specified resource group.
    syntax:
      content: >-
        function list(resourceGroupName: string, networkWatcherName: string,
        options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: |
            The name of the Network Watcher resource.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-arm-network - v13.0.0.PacketCaptureListResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {PacketCaptureListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {PacketCaptureListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link PacketCaptureListResult} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network - v13
  - uid: azure-arm-network - v13.0.0.PacketCaptures.list_2
    name: 'list(string, string, Object, ServiceCallback<PacketCaptureListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists all packet capture sessions within the specified resource group.
    syntax:
      content: >-
        function list(resourceGroupName: string, networkWatcherName: string,
        options: Object, callback: ServiceCallback<PacketCaptureListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: networkWatcherName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<azure-arm-network -
              v13.0.0.PacketCaptureListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-network - v13.0.0.PacketCaptureListResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {PacketCaptureListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {PacketCaptureListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link PacketCaptureListResult} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network - v13
  - uid: azure-arm-network - v13.0.0.PacketCaptures.list_1
    name: 'list(string, string, ServiceCallback<PacketCaptureListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists all packet capture sessions within the specified resource group.
    syntax:
      content: >-
        function list(resourceGroupName: string, networkWatcherName: string,
        callback: ServiceCallback<PacketCaptureListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: networkWatcherName
          type:
            - string
          description: ''
        - id: callback
          type:
            - >-
              ServiceCallback<azure-arm-network -
              v13.0.0.PacketCaptureListResult>
          description: ''
      return:
        type:
          - Promise<azure-arm-network - v13.0.0.PacketCaptureListResult>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {PacketCaptureListResult} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {PacketCaptureListResult} [result]   - The deserialized result object if an error did not occur.
                               See {@link PacketCaptureListResult} for more
                               information.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network - v13
  - uid: azure-arm-network - v13.0.0.PacketCaptures.listWithHttpOperationResponse
    name: 'listWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Lists all packet capture sessions within the specified resource group.
    syntax:
      content: >-
        function listWithHttpOperationResponse(resourceGroupName: string,
        networkWatcherName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: |
            The name of the Network Watcher resource.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-arm-network -
            v13.0.0.PacketCaptureListResult>>
        description: A promise is returned
    package: azure-arm-network - v13
  - uid: azure-arm-network - v13.0.0.PacketCaptures.stop
    name: 'stop(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Stops a specified packet capture session.
    syntax:
      content: >-
        function stop(resourceGroupName: string, networkWatcherName: string,
        packetCaptureName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: |
            The name of the network watcher.
        - id: packetCaptureName
          type:
            - string
          description: |
            The name of the packet capture session.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network - v13
  - uid: azure-arm-network - v13.0.0.PacketCaptures.stop_2
    name: 'stop(string, string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Stops a specified packet capture session.
    syntax:
      content: >-
        function stop(resourceGroupName: string, networkWatcherName: string,
        packetCaptureName: string, options: Object, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: networkWatcherName
          type:
            - string
          description: ''
        - id: packetCaptureName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network - v13
  - uid: azure-arm-network - v13.0.0.PacketCaptures.stop_1
    name: 'stop(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Stops a specified packet capture session.
    syntax:
      content: >-
        function stop(resourceGroupName: string, networkWatcherName: string,
        packetCaptureName: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: ''
        - id: networkWatcherName
          type:
            - string
          description: ''
        - id: packetCaptureName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
        description: |-
          If a callback was passed as the last
          parameter then it returns the callback else returns a Promise.

          {Promise} A promise is returned.

                               @resolve {null} - The deserialized result object.

                               @reject {Error|ServiceError} - The error object.

          {ServiceCallback} optionalCallback(err, result, request, response)

                               {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {WebResource} [request]  - The HTTP Request object if an error did not occur.

                               {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
    package: azure-arm-network - v13
  - uid: azure-arm-network - v13.0.0.PacketCaptures.stopWithHttpOperationResponse
    name: 'stopWithHttpOperationResponse(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Stops a specified packet capture session.
    syntax:
      content: >-
        function stopWithHttpOperationResponse(resourceGroupName: string,
        networkWatcherName: string, packetCaptureName: string, options?: Object)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |
            The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: |
            The name of the network watcher.
        - id: packetCaptureName
          type:
            - string
          description: |
            The name of the packet capture session.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
        description: A promise is returned
    package: azure-arm-network - v13
references:
  - uid: azure-arm-network - v13.0.0.PacketCapture
    name: PacketCapture
    spec.typeScript:
      - name: PacketCapture
        fullName: PacketCapture
        uid: azure-arm-network - v13.0.0.PacketCapture
  - uid: Promise<azure-arm-network - v13.0.0.PacketCaptureResult>
    name: PacketCaptureResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: PacketCaptureResult
        fullName: PacketCaptureResult
        uid: azure-arm-network - v13.0.0.PacketCaptureResult
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-arm-network - v13.0.0.PacketCaptureResult>
    name: PacketCaptureResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PacketCaptureResult
        fullName: PacketCaptureResult
        uid: azure-arm-network - v13.0.0.PacketCaptureResult
      - name: '>'
        fullName: '>'
  - uid: >-
      Promise<HttpOperationResponse<azure-arm-network -
      v13.0.0.PacketCaptureResult>>
    name: PacketCaptureResult>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: PacketCaptureResult
        fullName: PacketCaptureResult
        uid: azure-arm-network - v13.0.0.PacketCaptureResult
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-arm-network - v13.0.0.PacketCaptureQueryStatusResult>
    name: PacketCaptureQueryStatusResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: PacketCaptureQueryStatusResult
        fullName: PacketCaptureQueryStatusResult
        uid: azure-arm-network - v13.0.0.PacketCaptureQueryStatusResult
      - name: '>'
        fullName: '>'
  - uid: >-
      ServiceCallback<azure-arm-network -
      v13.0.0.PacketCaptureQueryStatusResult>
    name: PacketCaptureQueryStatusResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PacketCaptureQueryStatusResult
        fullName: PacketCaptureQueryStatusResult
        uid: azure-arm-network - v13.0.0.PacketCaptureQueryStatusResult
      - name: '>'
        fullName: '>'
  - uid: >-
      Promise<HttpOperationResponse<azure-arm-network -
      v13.0.0.PacketCaptureQueryStatusResult>>
    name: PacketCaptureQueryStatusResult>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: PacketCaptureQueryStatusResult
        fullName: PacketCaptureQueryStatusResult
        uid: azure-arm-network - v13.0.0.PacketCaptureQueryStatusResult
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-arm-network - v13.0.0.PacketCaptureListResult>
    name: PacketCaptureListResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: PacketCaptureListResult
        fullName: PacketCaptureListResult
        uid: azure-arm-network - v13.0.0.PacketCaptureListResult
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-arm-network - v13.0.0.PacketCaptureListResult>
    name: PacketCaptureListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PacketCaptureListResult
        fullName: PacketCaptureListResult
        uid: azure-arm-network - v13.0.0.PacketCaptureListResult
      - name: '>'
        fullName: '>'
  - uid: >-
      Promise<HttpOperationResponse<azure-arm-network -
      v13.0.0.PacketCaptureListResult>>
    name: PacketCaptureListResult>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: PacketCaptureListResult
        fullName: PacketCaptureListResult
        uid: azure-arm-network - v13.0.0.PacketCaptureListResult
      - name: '>>'
        fullName: '>>'
